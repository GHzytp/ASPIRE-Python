Search.setIndex({"docnames": ["aspire", "aspire.abinitio", "aspire.apple", "aspire.basis", "aspire.classification", "aspire.commands", "aspire.covariance", "aspire.ctf", "aspire.denoising", "aspire.image", "aspire.noise", "aspire.nufft", "aspire.numeric", "aspire.numeric.complex_pca", "aspire.operators", "aspire.optimization", "aspire.reconstruction", "aspire.source", "aspire.storage", "aspire.utils", "aspire.volume", "authors", "auto_experiments/experimental_abinitio_pipeline_10028", "auto_experiments/experimental_abinitio_pipeline_10073", "auto_experiments/experimental_abinitio_pipeline_10081", "auto_experiments/index", "auto_experiments/simulated_abinitio_pipeline", "auto_tutorials/aspire_introduction", "auto_tutorials/configuration", "auto_tutorials/index", "auto_tutorials/pipeline_demo", "auto_tutorials/sg_execution_times", "auto_tutorials/tutorials/apple_picker", "auto_tutorials/tutorials/basic_image_array", "auto_tutorials/tutorials/class_averaging", "auto_tutorials/tutorials/cov2d_simulation", "auto_tutorials/tutorials/cov3d_simulation", "auto_tutorials/tutorials/ctf", "auto_tutorials/tutorials/generating_volume_projections", "auto_tutorials/tutorials/image_class", "auto_tutorials/tutorials/image_expansion", "auto_tutorials/tutorials/index", "auto_tutorials/tutorials/orient3d_simulation", "auto_tutorials/tutorials/preprocess_imgs_sim", "auto_tutorials/tutorials/sg_execution_times", "auto_tutorials/tutorials/starfile", "class_source", "index", "installation", "modules", "quickstart"], "filenames": ["aspire.rst", "aspire.abinitio.rst", "aspire.apple.rst", "aspire.basis.rst", "aspire.classification.rst", "aspire.commands.rst", "aspire.covariance.rst", "aspire.ctf.rst", "aspire.denoising.rst", "aspire.image.rst", "aspire.noise.rst", "aspire.nufft.rst", "aspire.numeric.rst", "aspire.numeric.complex_pca.rst", "aspire.operators.rst", "aspire.optimization.rst", "aspire.reconstruction.rst", "aspire.source.rst", "aspire.storage.rst", "aspire.utils.rst", "aspire.volume.rst", "authors.rst", "auto_experiments/experimental_abinitio_pipeline_10028.rst", "auto_experiments/experimental_abinitio_pipeline_10073.rst", "auto_experiments/experimental_abinitio_pipeline_10081.rst", "auto_experiments/index.rst", "auto_experiments/simulated_abinitio_pipeline.rst", "auto_tutorials/aspire_introduction.rst", "auto_tutorials/configuration.rst", "auto_tutorials/index.rst", "auto_tutorials/pipeline_demo.rst", "auto_tutorials/sg_execution_times.rst", "auto_tutorials/tutorials/apple_picker.rst", "auto_tutorials/tutorials/basic_image_array.rst", "auto_tutorials/tutorials/class_averaging.rst", "auto_tutorials/tutorials/cov2d_simulation.rst", "auto_tutorials/tutorials/cov3d_simulation.rst", "auto_tutorials/tutorials/ctf.rst", "auto_tutorials/tutorials/generating_volume_projections.rst", "auto_tutorials/tutorials/image_class.rst", "auto_tutorials/tutorials/image_expansion.rst", "auto_tutorials/tutorials/index.rst", "auto_tutorials/tutorials/orient3d_simulation.rst", "auto_tutorials/tutorials/preprocess_imgs_sim.rst", "auto_tutorials/tutorials/sg_execution_times.rst", "auto_tutorials/tutorials/starfile.rst", "class_source.rst", "index.rst", "installation.rst", "modules.rst", "quickstart.rst"], "titles": ["aspire package", "aspire.abinitio package", "aspire.apple package", "aspire.basis package", "aspire.classification package", "aspire.commands package", "aspire.covariance package", "aspire.ctf package", "aspire.denoising package", "aspire.image package", "aspire.noise package", "aspire.nufft package", "aspire.numeric package", "aspire.numeric.complex_pca package", "aspire.operators package", "aspire.optimization package", "aspire.reconstruction package", "aspire.source package", "aspire.storage package", "aspire.utils package", "aspire.volume package", "Authors", "Abinitio Pipeline - Experimental Data Empiar 10028", "Abinitio Pipeline - Experimental Data Empiar 10073", "Abinitio Pipeline - Experimental Data Empiar 10081", "Experiments", "Abinitio Pipeline - Simulated Data", "ASPIRE-Python Introduction", "ASPIRE Configuration", "Tutorials", "Ab-initio Pipeline Demonstration", "Computation times", "Apple Picker", "Basic Image Array", "Class Averaging", "2D Covariance Estimation", "Covariance 3D Estimation", "CTF: Contrast Transfer Function", "Generating 3D Volume Projections", "ASPIRE Image Class", "Image Expansion", "Component Examples", "3D Image Orientation", "Image Preprocessing", "Computation times", "Starfile", "Class Averaging Architecture", "Aspire v0.11.1", "Installation", "Modules", "Getting Started - CLI"], "terms": {"abinitio": [0, 25, 30, 42, 49], "commonline_bas": [0, 49], "clorient3d": [0, 1], "build_clmatrix": [0, 1], "estimate_rot": [0, 1, 22, 23, 24, 26, 30, 42], "estimate_shift": [0, 1], "save_rot": [0, 1], "commonline_c3_c4": [0, 49], "clsymmetryc3c4": [0, 1, 24, 27], "cl_angles_to_ind": [0, 1], "g_sync": [0, 1], "commonline_cn": [0, 49], "clsymmetrycn": [0, 1, 27], "generate_candidate_rot": [0, 1], "relative_rots_to_cl_indic": [0, 1], "meanouterproductestim": [0, 1], "dtype": [0, 1, 3, 4, 7, 8, 9, 13, 14, 17, 19, 20, 22, 23, 24, 26, 27, 30, 33, 35, 36, 37, 38, 39, 40, 42], "push": [0, 1, 18, 19, 36], "synchronized_mean": [0, 1], "commonline_ev": [0, 49], "commlineev": [0, 1], "estim": [0, 1, 3, 4, 6, 7, 8, 10, 13, 17, 19, 27, 29, 34, 40, 41, 44, 47, 49], "output": [0, 1, 2, 3, 4, 13, 15, 17, 19, 28, 34, 36, 37, 46, 50], "commonline_gcar": [0, 49], "commlinegcar": [0, 1], "commonline_lud": [0, 49], "commlinelud": [0, 1], "commonline_sdp": [0, 49], "commlinesdp": [0, 1], "commonline_sync": [0, 49], "clsyncvot": [0, 1, 22, 23, 26, 27, 30, 42], "syncmatrix_vot": [0, 1], "orientation_src": [0, 49], "orientestsourc": [0, 1], "sync_vot": [0, 49], "syncvotingmixin": [0, 1], "appl": [0, 3, 29, 41, 44, 47, 48, 49, 50], "particle_imag": [0, 2], "process_fold": [0, 2], "process_micrograph": [0, 2, 32], "process_micrograph_cent": [0, 2, 32], "process_micrograph_plot": [0, 2], "verify_input_valu": [0, 2], "helper": [0, 17, 46, 49], "pickerhelp": [0, 2], "extract_queri": [0, 2], "extract_refer": [0, 2], "extract_window": [0, 2], "gaussian_filt": [0, 2, 37], "get_training_set": [0, 2], "moment": [0, 2], "reference_s": [0, 2], "pick": [0, 17, 22, 23, 24, 47, 49], "picker": [0, 2, 29, 41, 44, 47, 50], "extract_particl": [0, 2, 49], "get_map": [0, 2], "morphology_op": [0, 2], "query_scor": [0, 2], "read_mrc": [0, 2], "run_svm": [0, 2], "basi": [0, 4, 6, 8, 9, 14, 16, 17, 19, 20, 22, 23, 24, 26, 30, 45, 48, 49], "evalu": [0, 3, 6, 9, 10, 14, 16, 17, 20, 27, 37, 40], "evaluate_t": [0, 3, 35, 40], "expand": [0, 3, 6, 8, 9, 14, 19, 20], "indic": [0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 17, 19, 26, 27, 33, 34, 46], "mat_evalu": [0, 3], "mat_evaluate_t": [0, 3], "norm": [0, 3, 9, 14, 15, 19, 35], "basis_util": [0, 49], "all_besselj_zero": [0, 3], "besselj_newton": [0, 3], "besselj_zero": [0, 3], "check_besselj_zero": [0, 3], "d_decay_approx_fun": [0, 3], "k_oper": [0, 3], "lgwt": [0, 3], "norm_assoc_legendr": [0, 3], "p_n": [0, 3], "real_sph_harmon": [0, 3], "sph_bessel": [0, 3], "t_radial_part_mat": [0, 3], "t_x_derivative_mat": [0, 3], "t_x_mat": [0, 3], "t_x_mat_dot": [0, 3], "unique_coords_nd": [0, 3], "fb": [0, 6, 14, 35, 36, 49], "fbbasismixin": [0, 3], "fb_2d": [0, 49], "fbbasis2d": [0, 3, 6, 27, 40], "basis_norm_2d": [0, 3], "calculate_bispectrum": [0, 3], "to_complex": [0, 3], "to_real": [0, 3], "fb_3d": [0, 49], "fbbasis3d": [0, 3, 27, 36, 45], "basis_norm_3d": [0, 3], "ffb_2d": [0, 49], "ffbbasis2d": [0, 3, 6, 23, 27, 35, 40], "get_radi": [0, 3], "ffb_3d": [0, 49], "ffbbasis3d": [0, 3, 22, 23, 24, 26, 27, 30], "fle_2d": [0, 49], "flebasis2d": [0, 3, 27], "lowpass": [0, 3], "radial_convolv": [0, 3], "fle_2d_util": [0, 49], "barycentric_interp_spars": [0, 3], "precomp_transform_complex_to_r": [0, 3], "transform_complex_to_r": [0, 3], "fpswf_2d": [0, 49], "fpswfbasis2d": [0, 3, 27, 40], "fpswf_3d": [0, 49], "fpswfbasis3d": [0, 3, 27], "fspca": [0, 4, 49], "fspcabasi": [0, 3, 4], "build": [0, 1, 3, 8, 10, 14, 19, 23, 27, 29, 48], "eigen_imag": [0, 3], "evaluate_to_image_basi": [0, 3], "expand_from_image_basi": [0, 3], "shift": [0, 1, 3, 4, 9, 12, 17, 19, 20, 30, 34, 37, 38], "polar_2d": [0, 49], "polarbasis2d": [0, 3], "pswf_2d": [0, 49], "pswfbasis2d": [0, 3, 40], "pswf_func2d": [0, 3], "pswf_3d": [0, 49], "pswfbasis3d": [0, 3], "pswf_util": [0, 49], "bnmatrix": [0, 3], "dense_mat": [0, 3], "get_eig_vector": [0, 3], "shape": [0, 3, 4, 9, 11, 14, 15, 19, 20, 26, 27, 32, 33, 39, 40, 45, 46], "steerabl": [0, 4, 6, 27, 49], "steerablebasis2d": [0, 3], "complex_rot": [0, 3], "rotat": [0, 1, 3, 4, 6, 9, 17, 20, 22, 23, 24, 26, 30, 34, 35, 49, 50], "classif": [0, 1, 8, 22, 23, 24, 26, 30, 34, 46, 49], "averager2d": [0, 8, 49], "aligningaverager2d": [0, 4, 46], "align": [0, 4, 8, 9, 19, 20, 26, 30, 42, 46], "averag": [0, 1, 4, 6, 7, 8, 16, 17, 27, 29, 37, 41, 44, 47], "bfraverager2d": [0, 4, 8, 23], "bfsraverager2d": [0, 4, 8], "bfsreddychatterjiaverager2d": [0, 4], "emaverager2d": [0, 4], "ftkaverager2d": [0, 4], "reddychatterjiaverager2d": [0, 4], "class2d": [0, 8, 46, 49], "classifi": [0, 2, 4, 8, 17, 23, 30, 34, 47], "class_select": [0, 49], "bandedsnrimagequalityfunct": [0, 4, 23], "bandpassimagequalityfunct": [0, 4], "bumpweightedimagequalitymixin": [0, 4], "bumpweightedvarianceimagequalityfunct": [0, 4, 46], "classselector": [0, 4, 8, 46], "quality_scor": [0, 4], "select": [0, 1, 2, 4, 6, 8, 9, 11, 17, 19, 20, 22, 23, 24, 26, 27, 29, 30, 34, 35, 41, 46, 48, 50], "distanceclassselector": [0, 4], "globalclassselector": [0, 4, 46], "heap_id": [0, 4], "heap_idx_map": [0, 4], "globalwithrepulsionclassselector": [0, 4, 23, 46], "greedyclassrepulsionmixin": [0, 4, 46], "imagequalityfunct": [0, 4, 46], "neighborvarianceclassselector": [0, 4], "neighborvariancewithrepulsionclassselector": [0, 4, 8], "rampweightedimagequalitymixin": [0, 4], "rampweightedvarianceimagequalityfunct": [0, 4, 46], "randomclassselector": [0, 4], "topclassselector": [0, 4, 8, 30, 34], "varianceimagequalityfunct": [0, 4, 46], "weightedimagequalitymixin": [0, 4], "weight": [0, 3, 4, 14, 46], "legacy_implement": [0, 49], "bispec_2drot_larg": [0, 4], "bispec_operator_1": [0, 4], "pca_i": [0, 4], "reddy_chatterji": [0, 49], "reddy_chatterji_regist": [0, 4], "rir_class2d": [0, 49], "rirclass2d": [0, 4, 8, 23, 30, 34, 46], "bispectrum": [0, 3, 4, 46], "nn_classif": [0, 4], "pca": [0, 4, 7, 13, 46], "command": [0, 37, 40, 48, 49, 50], "cov3d": [0, 49, 50], "denois": [0, 1, 6, 20, 23, 24, 27, 30, 34, 36, 47, 49], "estimate_ctf": [0, 7, 37, 49], "orient3d": [0, 49, 50], "preprocess": [0, 7, 17, 27, 29, 41, 44, 47, 49], "covari": [0, 3, 8, 17, 27, 29, 41, 44, 47, 49], "covar": [0, 3, 49], "covarianceestim": [0, 6, 36], "apply_kernel": [0, 6, 16], "compute_kernel": [0, 6, 16], "conj_grad": [0, 6, 16, 49], "src_backward": [0, 6, 16], "covar2d": [0, 49], "batchedrotcov2d": [0, 3, 6], "get_covar": [0, 6, 35], "get_cwf_coeff": [0, 6, 35], "get_mean": [0, 6, 35], "rotcov2d": [0, 6, 35], "shrink_covar_backward": [0, 6], "shrink_covar": [0, 6], "ctf": [0, 6, 14, 16, 17, 22, 23, 24, 26, 29, 41, 43, 44, 49, 50], "ctf_estim": [0, 49], "ctfestim": [0, 7, 27], "background_subtract_1d": [0, 7], "background_subtract_2d": [0, 7], "elliptical_averag": [0, 7], "estimate_psd": [0, 7], "gd": [0, 7], "generate_ctf": [0, 7], "micrograph_to_block": [0, 7], "normalize_block": [0, 7], "opt1d": [0, 7], "preprocess_micrograph": [0, 7], "set_angl": [0, 7], "set_df1": [0, 7], "set_df2": [0, 7], "taper": [0, 7], "write_star": [0, 7], "adaptive_support": [0, 49], "class_avg": [0, 49], "classavgsourc": [0, 8, 23, 47], "class_dist": [0, 8, 17, 23, 46], "class_indic": [0, 8, 17, 23, 34, 46], "class_refl": [0, 8, 17, 23, 34, 46], "n": [0, 1, 2, 3, 4, 6, 7, 8, 9, 14, 15, 16, 17, 19, 20, 26, 27, 28, 30, 34, 35, 36, 37, 38, 42, 43, 46, 47, 50], "save": [0, 2, 8, 9, 17, 19, 20, 22, 23, 24, 26, 27, 28, 30, 32, 37, 40, 43, 50], "selection_indic": [0, 8, 17, 23, 26], "classavgsourcev110": [0, 8], "debugclassavgsourc": [0, 8, 30, 34, 46], "defaultclassavgsourc": [0, 8, 22, 24, 26, 34, 46], "denoised_src": [0, 49], "denoisedimagesourc": [0, 8], "imag": [0, 1, 2, 3, 4, 6, 8, 10, 14, 16, 19, 20, 22, 23, 24, 26, 29, 32, 36, 41, 44, 45, 47, 49], "denoiser_cov2d": [0, 49], "denoisercov2d": [0, 8, 22, 26], "src_wiener_coord": [0, 8, 36], "basisimag": [0, 9], "bispecimag": [0, 9], "cartesianimag": [0, 9], "fbbasisimag": [0, 9], "t": [0, 1, 6, 8, 9, 13, 14, 17, 19, 20, 27, 36, 40], "asnumpi": [0, 9, 12, 20, 22, 26, 27, 33, 34, 35, 37, 38, 40, 43, 45], "backproject": [0, 6, 9, 16], "copi": [0, 9, 13, 14, 20, 33, 34, 40, 43, 48], "downsampl": [0, 9, 17, 20, 22, 23, 24, 26, 30, 33, 35, 37, 38, 43, 45, 50], "filter": [0, 2, 3, 6, 8, 9, 10, 17, 19, 22, 24, 26, 33, 36, 37, 43, 46, 49, 50], "flip": [0, 9, 20, 22, 24, 26, 27, 43, 50], "frc": [0, 9], "re": [0, 4, 9, 10, 13, 15, 19, 20, 26, 27, 28, 30, 34, 37, 48], "show": [0, 9, 22, 26, 27, 30, 32, 33, 34, 37, 38, 39, 40, 45], "size": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 14, 16, 17, 19, 20, 26, 27, 32, 35, 36, 37, 38, 40, 42, 43, 45], "sqrt": [0, 9, 19, 20, 33], "stack_reshap": [0, 9, 20], "transpos": [0, 3, 9, 14, 19, 20, 36, 40], "polarimag": [0, 9], "normalize_bg": [0, 9], "image_stack": [0, 4, 49], "imagestack": [0, 4, 9], "meanimagestack": [0, 4, 9, 46], "medianimagestack": [0, 9], "poissonrejectionimagestack": [0, 9], "robustchauvenetrejectionimagestack": [0, 9], "sigmarejectionimagestack": [0, 9], "winsorizedimagestack": [0, 9], "xform": [0, 10, 33, 49], "add": [0, 4, 9, 10, 14, 17, 18, 27, 37], "filterxform": [0, 9], "indexedxform": [0, 9], "lambdaxform": [0, 9], "linearindexedxform": [0, 9], "linearpipelin": [0, 9], "linearxform": [0, 9], "adjoint": [0, 6, 9, 11, 16, 17, 35], "multipli": [0, 6, 9, 16, 17, 20, 27], "pipelin": [0, 4, 9, 17, 25, 29, 31, 33, 43, 46, 50], "add_xform": [0, 9], "reset": [0, 9, 14, 43], "symmetricxform": [0, 9], "xformactivecontextmanag": [0, 9], "disabl": [0, 4, 9, 13, 17, 19, 22, 26, 27, 28], "enabl": [0, 9, 19, 27, 28, 48], "forward": [0, 8, 9, 17, 33, 34, 37], "nois": [0, 2, 3, 6, 7, 8, 17, 22, 23, 24, 26, 30, 36, 37, 49, 50], "anisotropicnoiseestim": [0, 10, 22, 24, 26, 27, 33, 45], "estimate_noise_psd": [0, 10], "bluenoiseadd": [0, 10], "customnoiseadd": [0, 10, 26, 27, 30, 33, 38], "noise_var": [0, 3, 6, 8, 10, 33, 34, 35], "noiseadd": [0, 10, 17], "noiseestim": [0, 10, 27, 33], "pinknoiseadd": [0, 10], "whitenoiseadd": [0, 10, 30, 33, 34, 35, 38, 43], "from_snr": [0, 10, 30], "signal_pow": [0, 10], "whitenoiseestim": [0, 3, 10, 17, 36], "nufft": [0, 9, 19, 20, 28, 48, 49], "cufinufft": [0, 28, 49], "finufft": [0, 28, 49], "finufftplan": [0, 11], "transform": [0, 3, 6, 9, 10, 11, 16, 19, 27, 33, 37], "pynfft": [0, 28, 49], "util": [0, 3, 8, 9, 13, 20, 26, 27, 28, 30, 34, 35, 36, 37, 38, 40, 42, 49], "nextpow2": [0, 11], "plan": [0, 11], "all_backend": [0, 11], "anufft": [0, 11], "backend_avail": [0, 11], "check_backend": [0, 11], "numer": [0, 3, 4, 9, 14, 28, 35, 37, 47, 49], "complex_pca": [0, 12], "valid": [0, 12, 17, 19], "base_fft": [0, 49], "fft": [0, 4, 9, 11, 12, 19, 20, 28, 33, 37], "centered_fft": [0, 12], "centered_fft2": [0, 12, 37], "centered_fftn": [0, 12], "centered_ifft": [0, 12], "centered_ifft2": [0, 12, 37], "centered_ifftn": [0, 12], "fft2": [0, 12, 33], "fftn": [0, 12], "fftshift": [0, 12, 33], "ifft": [0, 12], "ifft2": [0, 12], "ifftn": [0, 12], "ifftshift": [0, 12], "mdim_fftshift": [0, 12], "mdim_ifftshift": [0, 12], "cupi": [0, 28, 49], "cupy_fft": [0, 49], "mkl_fft": [0, 49], "numpi": [0, 2, 3, 4, 7, 8, 9, 14, 17, 19, 20, 22, 23, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 48, 49], "pyfftw_fft": [0, 49], "pyfftwfft": [0, 12], "scipy_fft": [0, 49], "scipyfft": [0, 12], "fft_object": [0, 12], "numeric_object": [0, 12], "oper": [0, 1, 3, 8, 9, 10, 15, 19, 20, 26, 27, 30, 33, 35, 36, 37, 39, 42, 43, 46, 49, 50], "blk_diag_matrix": [0, 49], "blkdiagmatrix": [0, 6, 14, 19], "ab": [0, 3, 14, 25, 27, 29, 31, 33, 37, 40, 47, 50], "append": [0, 14, 17], "appli": [0, 1, 2, 3, 4, 6, 7, 9, 10, 14, 16, 17, 19, 27, 30, 33, 34, 35, 38, 45, 46, 50], "check_psd": [0, 14], "dens": [0, 3, 14], "eigval": [0, 3, 4, 14, 36], "empti": [0, 13, 14, 15, 18, 27, 33, 37], "ey": [0, 8, 14], "eye_lik": [0, 14], "from_list": [0, 14], "is_squar": [0, 14], "isfinit": [0, 14], "make_psd": [0, 6, 14, 19], "matmul": [0, 14], "mul": [0, 14], "neg": [0, 14, 17, 19], "ones": [0, 14, 17, 19, 38], "partit": [0, 7, 14], "pow": [0, 14], "rappli": [0, 14], "reset_cach": [0, 14], "solv": [0, 1, 4, 14, 15], "sub": [0, 14, 19], "zero": [0, 3, 4, 6, 8, 14, 16, 17, 19, 30, 34, 37, 38], "zeros_lik": [0, 14], "arrayfilt": [0, 14], "evaluate_grid": [0, 14, 22, 26, 37], "bluefilt": [0, 14], "ctffilter": [0, 14, 17, 27, 39], "scale": [0, 4, 8, 9, 14, 17, 19, 20, 35], "dualfilt": [0, 14], "dual": [0, 3, 14], "fb_mat": [0, 14, 35], "sign": [0, 14, 19, 37], "functionfilt": [0, 14, 26, 33], "identityfilt": [0, 14], "lambdafilt": [0, 14], "multiplicativefilt": [0, 14], "pinkfilt": [0, 14], "powerfilt": [0, 14], "radialctffilt": [0, 14, 26, 27, 30, 35, 36, 37, 42, 43], "scalarfilt": [0, 14, 27], "scaledfilt": [0, 14], "zerofilt": [0, 14], "evaluate_src_filters_on_grid": [0, 14], "wemd": [0, 49], "wemd_emb": [0, 14], "wemd_norm": [0, 14], "optim": [0, 3, 6, 7, 14, 19, 27, 47, 49, 50], "fill_struct": [0, 15], "reconstruct": [0, 19, 25, 27, 36, 40, 43, 45, 49], "kernel": [0, 4, 6, 36, 49], "fourierkernel": [0, 16], "circular": [0, 7, 16], "circularize_1d": [0, 16], "convolve_volum": [0, 16], "convolve_volume_matrix": [0, 16], "is_cent": [0, 16], "toeplitz": [0, 16], "mean": [0, 1, 2, 3, 4, 6, 8, 9, 13, 17, 18, 19, 33, 40, 46, 47, 49], "meanestim": [0, 16, 22, 23, 24, 26, 30, 36, 45], "sourc": [0, 1, 3, 4, 6, 8, 10, 14, 16, 19, 26, 28, 32, 33, 35, 36, 39, 40, 42, 43, 46, 48, 49], "coordin": [0, 3, 8, 19, 36, 49, 50], "boxescoordinatesourc": [0, 17], "centerscoordinatesourc": [0, 17], "coordinatesourc": [0, 17, 27], "import_aspire_ctf": [0, 17], "import_relion_ctf": [0, 17], "arrayimagesourc": [0, 17, 27, 30, 33, 34], "imagesourc": [0, 1, 4, 6, 8, 14, 17, 27, 30, 43, 45], "amplitud": [0, 4, 6, 7, 9, 14, 16, 17, 26, 35, 37, 38, 42, 43], "angl": [0, 4, 7, 14, 17, 19, 20, 27, 34, 37, 38, 46], "cach": [0, 4, 9, 14, 17, 22, 23, 24, 26, 46], "estimate_noise_pow": [0, 17], "estimate_signal_mean_energi": [0, 17], "estimate_signal_pow": [0, 17], "estimate_signal_var": [0, 17], "estimate_snr": [0, 17], "filter_indic": [0, 14, 17, 35], "get_metadata": [0, 17], "has_metadata": [0, 17], "im_backward": [0, 17], "invert_contrast": [0, 17, 22, 43], "n_ctf_filter": [0, 17], "normalize_background": [0, 17, 27, 43], "offset": [0, 9, 17, 30, 35, 38], "phase_flip": [0, 17, 22, 24, 26, 27, 30, 37, 43], "save_imag": [0, 17], "save_metadata": [0, 17], "set_metadata": [0, 17], "state": [0, 10, 17, 19], "updat": [0, 1, 2, 17, 21, 22, 23, 24, 26, 30], "vol_forward": [0, 17], "whiten": [0, 13, 17, 22, 24, 26, 43, 50], "indexedsourc": [0, 17, 27], "as_copi": [0, 17], "relion": [0, 19, 22, 23, 24, 37, 49], "relionsourc": [0, 17, 22, 23, 24, 33, 37, 45], "populate_metadata": [0, 17], "simul": [0, 6, 8, 22, 23, 24, 25, 29, 49], "clean_imag": [0, 17, 27, 30, 35], "covar_tru": [0, 17], "eig": [0, 17, 19, 36], "eval_clust": [0, 17, 36], "eval_coord": [0, 17, 36], "eval_covar": [0, 17, 36], "eval_eig": [0, 17, 36], "eval_mean": [0, 17, 36], "eval_vol": [0, 17], "eval_volmat": [0, 17], "mean_tru": [0, 17], "project": [0, 1, 2, 6, 8, 16, 17, 20, 22, 23, 24, 26, 27, 28, 29, 37, 41, 42, 44, 45, 47, 48, 50], "true_signal_pow": [0, 17], "true_snr": [0, 17], "vol_coord": [0, 17], "storag": [0, 19, 49], "mrc": [0, 2, 7, 17, 20, 22, 23, 24, 26, 27, 30, 32, 35, 37, 38, 42, 43, 49, 50], "mrcstat": [0, 18], "amean": [0, 18], "arm": [0, 18], "update_head": [0, 18], "starfil": [0, 7, 17, 19, 22, 23, 24, 29, 37, 41, 44, 49, 50], "get_block_by_index": [0, 18], "write": [0, 2, 7, 17, 18, 20, 27, 30, 37], "starfileerror": [0, 18], "cell": [0, 6, 49], "cell2d": [0, 19], "mat2cel": [0, 19], "coor_tran": [0, 26, 30, 49], "cart2pol": [0, 19], "cart2sph": [0, 19], "common_line_from_rot": [0, 19], "crop_pad_2d": [0, 19], "crop_pad_3d": [0, 19], "get_aligned_rot": [0, 19, 26, 30, 42], "get_rots_ms": [0, 19, 26, 30, 42], "grid_1d": [0, 19], "grid_2d": [0, 19, 37], "grid_3d": [0, 19], "register_rot": [0, 19, 26, 30, 42], "uniform_random_angl": [0, 19], "filter_to_fb_mat": [0, 49], "log": [0, 4, 22, 23, 24, 26, 27, 30, 32, 33, 34, 35, 36, 38, 40, 42, 43, 49], "logfilterbycount": [0, 19], "msg_cach": [0, 19], "getconsolelogginglevel": [0, 19], "getfilelogginglevel": [0, 19], "get_full_vers": [0, 19], "setconsolelogginglevel": [0, 19], "setfilelogginglevel": [0, 19], "tqdm": [0, 19, 28], "trang": [0, 19, 28], "matlab_compat": [0, 49], "m_flatten": [0, 19], "m_reshap": [0, 19], "stable_eigsh": [0, 19], "matrix": [0, 1, 2, 3, 4, 6, 8, 13, 14, 16, 17, 35, 36, 42, 47, 49], "acorr": [0, 19], "ainner": [0, 19], "anorm": [0, 19, 35, 40], "best_rank1_approxim": [0, 19], "fix_sign": [0, 19], "im_to_vec": [0, 19], "make_symmat": [0, 19], "mat_to_vec": [0, 19], "mdim_mat_fun_conj": [0, 19], "roll_dim": [0, 19], "symmat_to_vec": [0, 19], "symmat_to_vec_iso": [0, 6, 19], "unroll_dim": [0, 19], "vec_to_im": [0, 19], "vec_to_mat": [0, 19], "vec_to_symmat": [0, 19], "vec_to_symmat_iso": [0, 19], "vec_to_vol": [0, 19], "vecmat_to_volmat": [0, 19], "vol_to_vec": [0, 19], "volmat_to_vecmat": [0, 19], "misc": [0, 33, 49], "j_conjug": [0, 19], "abs2": [0, 19], "all_pair": [0, 19], "all_triplet": [0, 19], "bump_3d": [0, 19], "circ": [0, 19], "cyclic_rot": [0, 19], "fuzzy_mask": [0, 19], "gaussian_1d": [0, 19], "gaussian_2d": [0, 19, 34], "gaussian_3d": [0, 19], "importlib_path": [0, 19], "inverse_r": [0, 19], "powerset": [0, 19], "sha256sum": [0, 19], "support_mask": [0, 19], "multiprocess": [0, 49], "mem_based_cpu_suggest": [0, 19], "num_procs_suggest": [0, 19], "physical_core_cpu_suggest": [0, 19], "virtual_core_cpu_suggest": [0, 19], "random": [0, 1, 4, 10, 17, 20, 27, 30, 34, 36, 37, 47, 49], "choic": [0, 17, 19, 27], "rand": [0, 17, 19], "randi": [0, 19], "randn": [0, 19], "relion_interop": [0, 49], "relionstarfil": [0, 19], "get_merged_data_block": [0, 19], "dict_to_relion_typ": [0, 19], "resolution_estim": [0, 49], "fouriercorrel": [0, 19], "analyze_correl": [0, 19], "correl": [0, 2, 4, 9, 19, 20, 34, 36, 37], "plot": [0, 4, 9, 19, 20, 22, 26, 33, 35, 37, 40, 45], "fourierringcorrel": [0, 19], "dim": [0, 12, 14, 16, 19], "fouriershellcorrel": [0, 19], "about_axi": [0, 19, 38], "angle_dist": [0, 19], "apply_registr": [0, 19], "common_lin": [0, 19], "find_registr": [0, 19], "from_eul": [0, 19], "from_matrix": [0, 19], "from_rotvec": [0, 19, 20], "generate_random_rot": [0, 19, 27], "invert": [0, 6, 19, 22, 43], "matric": [0, 1, 3, 6, 9, 14, 17, 19, 20, 27, 35], "mse": [0, 19, 26, 42], "regist": [0, 4, 19, 42, 46], "type": [0, 1, 6, 9, 13, 14, 17, 20, 27, 37, 49], "complex_typ": [0, 19], "real_typ": [0, 19], "utest_toler": [0, 19], "unit": [0, 3, 9, 20, 27, 30, 48, 49], "ratio_to_decibel": [0, 19], "voltage_to_wavelength": [0, 19], "wavelength_to_voltag": [0, 19], "volum": [0, 3, 6, 8, 9, 14, 16, 17, 19, 29, 35, 41, 42, 43, 44, 47, 49], "basisvolum": [0, 20], "bispecvolum": [0, 20], "cartesianvolum": [0, 20], "fbbasisvolum": [0, 20], "polarvolum": [0, 20], "astyp": [0, 20, 33, 36], "flatten": [0, 3, 19, 20], "from_vec": [0, 20], "fsc": [0, 20], "load": [0, 8, 17, 19, 20, 22, 23, 24, 26, 35, 37, 39, 42, 43, 45], "to_vec": [0, 20], "qr_vols_forward": [0, 20], "rotated_grid": [0, 20], "rotated_grids_3d": [0, 20], "volume_synthesi": [0, 17, 49], "asymmetricvolum": [0, 17, 20], "cnsymmetricvolum": [0, 20], "n_blob": [0, 20], "symmetry_group": [0, 20], "dnsymmetricvolum": [0, 20], "gaussianblobsvolum": [0, 20], "gener": [0, 1, 2, 3, 7, 9, 10, 14, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50], "legacyvolum": [0, 20, 36], "osymmetricvolum": [0, 20], "syntheticvolumebas": [0, 20], "tsymmetricvolum": [0, 20], "aspireexcept": [0, 49], "base": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 24, 26, 27, 28, 30, 34, 37, 38, 40, 42, 46, 48, 50], "dimensionsincompat": [0, 49], "errortoobig": [0, 49], "unknownformat": [0, 49], "wronginput": [0, 49], "handle_except": [0, 49], "exc_typ": 0, "exc_valu": 0, "exc_traceback": 0, "handl": [0, 15, 19, 45, 46], "ani": [0, 3, 4, 9, 10, 13, 17, 27, 28, 46, 48], "top": [0, 4, 27, 45], "level": [0, 4, 9, 14, 19, 27, 28, 46, 50], "unhandl": 0, "tri": 0, "gather": 0, "addit": [0, 4, 9, 10, 14, 17, 20, 22, 23, 24, 26, 27, 30, 35, 36, 37, 48], "context": [0, 8, 9, 19, 36, 46], "inform": [0, 1, 4, 6, 15, 17, 19, 35, 46], "rais": [0, 8, 10, 11, 13, 14, 19], "paramet": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 30, 36, 37, 38, 42, 50], "object": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 33, 37, 38], "valu": [0, 1, 2, 3, 4, 6, 7, 8, 9, 13, 14, 15, 17, 19, 20, 26, 27, 28, 30, 35, 37, 40, 42, 43, 50], "an": [0, 1, 2, 3, 4, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 42, 43, 45, 46, 48, 50], "instanc": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 30, 33, 34, 45, 46], "The": [0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 28, 30, 33, 34, 35, 36, 37, 42, 46, 48, 50], "traceback": 0, "associ": [0, 3, 4, 17, 20, 22, 26, 27], "also": [0, 3, 4, 9, 17, 22, 23, 26, 27, 28, 30, 32, 33, 34, 36, 37, 46, 50], "avail": [0, 8, 11, 14, 17, 19, 22, 23, 24, 26, 27, 34, 37, 46, 48, 50], "__traceback__": 0, "return": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 27, 30, 32, 33, 36, 37, 38, 43, 45, 46], "On": [0, 11, 17], "us": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 40, 42, 43, 45, 46, 47, 48, 50], "diagnost": [0, 4, 27, 37], "ha": [0, 13, 14, 15, 17, 19, 20, 21, 27, 28, 30, 33, 34, 35, 37, 46, 48], "been": [0, 4, 11, 17, 19, 20, 27, 33], "class": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 25, 28, 29, 32, 33, 35, 37, 38, 41, 44, 45, 47], "src": [1, 3, 4, 6, 8, 10, 14, 16, 17, 19, 22, 23, 24, 26, 27, 28, 30, 34, 36, 37, 38, 46, 48], "n_rad": 1, "none": [1, 2, 3, 4, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26], "n_theta": [1, 22, 23, 24, 26, 30, 42], "360": [1, 4, 34], "n_check": 1, "max_shift": [1, 24], "0": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 16, 17, 19, 20, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 50], "15": [1, 2, 15, 30, 32, 34, 37, 43, 48], "shift_step": 1, "1": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 48], "defin": [1, 3, 4, 6, 8, 9, 10, 12, 14, 15, 17, 19, 20, 30, 37, 42, 46, 48], "3d": [1, 2, 3, 11, 16, 19, 20, 22, 23, 24, 26, 27, 29, 30, 35, 41, 43, 44, 45], "orient": [1, 17, 19, 22, 23, 24, 26, 27, 29, 41, 43, 44, 47], "common": [1, 9, 17, 19, 20, 28, 29, 30, 37, 41, 46, 47, 50], "line": [1, 19, 30, 47, 50], "method": [1, 3, 4, 6, 7, 8, 9, 10, 14, 15, 17, 18, 19, 20, 22, 23, 24, 26, 27, 30, 32, 33, 36, 37, 39, 42, 46, 47, 50], "initi": [1, 3, 4, 8, 9, 10, 14, 15, 17, 18, 19, 26, 34, 36, 37, 43], "2d": [1, 3, 4, 6, 8, 9, 11, 13, 14, 19, 27, 29, 30, 33, 36, 37, 40, 41, 43, 44, 46], "number": [1, 2, 3, 4, 6, 7, 8, 9, 13, 14, 15, 17, 19, 20, 26, 27, 30, 32, 35, 36, 37, 38, 42, 43], "point": [1, 3, 11, 14, 15, 19, 33, 34, 39, 46], "radial": [1, 3, 4, 7, 14, 19, 27, 30, 33], "direct": [1, 3, 4, 6, 7, 9, 16, 19, 27, 28, 40, 47, 50], "If": [1, 3, 4, 6, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 26, 28, 33, 48], "default": [1, 2, 3, 4, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 22, 26, 27, 30, 34, 36, 37, 38, 43, 46, 48, 50], "ceil": 1, "half": [1, 3, 7, 9, 19], "resolut": [1, 3, 4, 7, 8, 9, 10, 14, 17, 19, 20, 22, 23, 24, 26, 27, 30, 33, 37, 38, 42, 45, 50], "theta": [1, 3, 7, 19, 34, 38], "thi": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 46, 48, 50], "must": [1, 2, 3, 4, 9, 15, 17, 19, 20, 27, 28, 50], "even": [1, 15, 19, 20], "i": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 46, 48, 50], "For": [1, 2, 3, 4, 6, 9, 11, 13, 14, 15, 17, 19, 27, 28, 30, 33, 34, 35, 37, 46, 48, 50], "each": [1, 2, 3, 4, 6, 7, 8, 9, 11, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, 27, 28, 33, 35, 36, 37, 38, 39, 46, 50], "find": [1, 3, 7, 8, 17, 19, 20, 28, 36, 37, 46, 48], "its": [1, 3, 9, 13, 14, 17, 18, 19, 20, 33, 50], "less": [1, 3, 9, 17, 27], "than": [1, 3, 8, 9, 17, 28], "total": [1, 9, 17, 19, 20, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45], "subset": [1, 17, 19, 45, 46], "determin": [1, 6, 8, 9, 11, 17, 19, 47, 50], "maximum": [1, 3, 6, 7, 9, 15, 17, 26, 35, 37, 40, 42, 43], "rang": [1, 3, 4, 8, 11, 19, 20, 27, 33, 37, 39], "proport": [1, 10, 17], "pixel": [1, 2, 3, 4, 7, 8, 9, 14, 17, 19, 20, 26, 27, 33, 35, 37, 42, 43, 50], "from": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 42, 45, 46, 47, 48, 50], "fourier": [1, 3, 4, 6, 8, 9, 11, 16, 19, 20, 27, 37, 45], "stack": [1, 3, 4, 9, 11, 17, 19, 20, 22, 23, 24, 26, 27, 30, 34, 38, 40, 45, 46, 50], "all": [1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 17, 19, 20, 22, 23, 24, 28, 30, 34, 35, 40, 46, 48, 50], "subclass": [1, 3, 4, 8, 10, 20, 27, 46], "should": [1, 3, 4, 6, 8, 9, 10, 11, 12, 14, 15, 17, 19, 20, 27, 28, 29, 30, 33, 37, 38, 43, 46, 48], "implement": [1, 3, 4, 6, 7, 9, 10, 14, 15, 17, 19, 20, 27, 29, 33, 35, 37, 43, 46], "function": [1, 3, 4, 6, 7, 8, 9, 12, 14, 15, 17, 19, 20, 25, 27, 29, 30, 33, 35, 41, 42, 44, 47], "equations_factor": 1, "max_memori": 1, "4000": [1, 4], "comput": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 26, 30, 33, 34, 37, 46, 47], "x": [1, 2, 3, 4, 7, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 26, 27, 33, 35, 37, 40, 42, 43, 45, 48], "y": [1, 3, 4, 9, 14, 17, 19, 20, 26, 27, 28, 33, 37, 45], "least": [1, 3, 6, 16, 36], "squar": [1, 3, 6, 7, 9, 14, 15, 16, 17, 19, 27, 33, 35, 36, 37], "equat": [1, 3, 6, 36], "ax": [1, 3, 9, 12, 15, 19, 20, 33, 37, 45], "b": [1, 3, 6, 14, 15, 17, 19, 33, 37, 50], "A": [1, 2, 3, 4, 6, 8, 9, 10, 11, 14, 15, 17, 19, 20, 30, 36, 37, 46, 50], "left": [1, 4, 17, 19, 27, 28, 33], "hand": [1, 6, 14, 15, 17, 27], "side": [1, 6, 9, 14, 15], "spars": [1, 3, 13, 19], "repres": [1, 2, 3, 4, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 27, 28, 36, 45, 50], "precomput": [1, 3, 8], "coeffici": [1, 3, 4, 6, 9, 14, 16, 22, 26, 40, 46], "right": [1, 4, 6, 14, 15, 19, 27, 28, 33, 48], "1d": [1, 3, 11, 13, 14, 17, 19, 37, 46], "along": [1, 4, 6, 9, 12, 14, 17, 19, 20, 27, 28, 30, 37, 45, 46, 48, 50], "between": [1, 2, 3, 4, 7, 9, 14, 19, 20, 35, 40], "two": [1, 3, 4, 9, 14, 17, 19, 20, 27, 33, 37, 46], "rai": [1, 28, 37], "one": [1, 3, 4, 6, 9, 14, 17, 19, 20, 27, 28, 33, 36, 45, 48, 50], "other": [1, 4, 8, 9, 13, 14, 17, 19, 20, 27, 28, 30, 37, 46], "j": [1, 3, 4, 6, 19, 21, 47, 50], "row": [1, 3, 7, 8, 9, 13, 14, 17, 19], "contain": [1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 19, 20, 25, 27, 28, 29, 30, 46, 50], "four": [1, 17], "unknown": 1, "pair": [1, 4, 9, 19], "detail": [1, 4, 8, 9, 14, 21, 27, 28, 37, 48], "can": [1, 2, 3, 6, 9, 10, 14, 15, 17, 19, 20, 22, 23, 24, 27, 28, 30, 33, 34, 35, 36, 37, 38, 42, 43, 46, 48, 50], "found": [1, 2, 4, 6, 9, 16, 17, 27, 28, 30, 48, 50], "book": 1, "chapter": 1, "below": [1, 3, 6, 8, 15, 21, 27, 36, 43, 46, 48], "shkolniski": [1, 3, 4, 21, 47, 50], "singer": [1, 2, 3, 4, 6, 21, 47, 50], "center": [1, 2, 3, 6, 16, 17, 19, 33, 36, 37, 50], "mass": [1, 14], "cryo": [1, 2, 4, 6, 17, 22, 23, 24, 25, 26, 27, 37, 42, 46, 47, 50], "em": [1, 2, 4, 6, 17, 22, 23, 24, 25, 26, 27, 37, 42, 46, 47, 50], "theori": [1, 10, 47], "model": [1, 2, 17, 22, 23, 24, 26, 37], "nanoscal": 1, "electron": [1, 7, 14, 19], "microscopi": 1, "vogt": 1, "w": [1, 3, 7, 14, 17, 36], "dahmen": 1, "p": [1, 2, 3, 15, 19], "binev": 1, "ed": 1, "nanostructur": 1, "scienc": [1, 27, 47, 50], "technologi": [1, 21], "seri": 1, "springer": 1, "2012": [1, 47, 50], "pp": [1, 3], "147": [1, 30, 32], "177": [1, 30, 32], "factor": [1, 3, 4, 9, 14, 19, 20], "rescal": [1, 19], "ar": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 25, 27, 28, 30, 32, 33, 34, 35, 36, 37, 40, 43, 45, 46, 48, 50], "check": [1, 3, 4, 9, 10, 11, 13, 14, 20, 27, 35, 36, 40, 42, 48], "exact": [1, 35], "system": [1, 4, 14, 15, 19, 48], "2n": 1, "2": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 45, 47, 48], "mai": [1, 2, 3, 4, 9, 14, 15, 17, 19, 22, 26, 27, 28, 32, 35, 37, 45, 46, 50], "too": [1, 2, 27, 33, 37, 50], "big": [1, 2], "larg": [1, 2, 3, 4, 15, 17, 22, 24, 26, 27, 33], "algorithm": [1, 3, 4, 6, 15, 27, 30, 34, 46, 50], "time": [1, 3, 6, 9, 14, 19, 22, 23, 24, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46], "result": [1, 2, 3, 4, 6, 7, 13, 14, 15, 16, 19, 22, 23, 26, 27, 30, 32, 34, 37, 48, 50], "memori": [1, 4, 8, 9, 13, 15, 17, 19, 22, 24, 26, 27, 33, 50], "requir": [1, 2, 4, 10, 15, 19, 27, 34, 37, 46, 48], "megabyt": 1, "otherwis": [1, 2, 4, 9, 13, 14, 15, 19, 50], "reduc": [1, 3, 4, 8, 19, 35, 45, 46], "approxim": [1, 3, 14, 19, 35, 36], "fit": [1, 9, 19, 27, 33, 37], "new": [1, 4, 8, 9, 13, 14, 15, 17, 19, 20, 27, 30, 43], "symmetri": [1, 19, 20, 24, 35], "epsilon": [1, 3, 11], "001": 1, "max_it": [1, 3, 6, 15, 35], "1000": [1, 26], "degree_r": 1, "seed": [1, 4, 10, 17, 19, 20, 27, 33, 34, 36, 38], "molecul": 1, "c3": [1, 20], "c4": [1, 20, 24], "cyclic": [1, 19, 20], "relat": [1, 3, 4, 19, 27, 32, 37], "public": [1, 3], "list": [1, 3, 4, 6, 8, 11, 13, 14, 17, 37, 38], "g": [1, 9, 11, 14, 19, 33], "pragier": [1, 21], "approach": [1, 4, 23, 27, 46], "symmetr": [1, 3, 6, 7, 9, 19, 20, 35], "invers": [1, 7, 14, 17, 19, 37, 50], "problem": [1, 4, 19, 46, 48], "35": [1, 30, 32], "124005": 1, "2019": [1, 4, 7], "view": [1, 4, 9, 20, 27, 28, 37, 42, 43, 46, 47, 48, 50], "synchron": [1, 22, 23, 24, 26, 30, 42, 47, 50], "siam": [1, 3, 4, 47, 50], "5": [1, 2, 3, 4, 7, 8, 9, 17, 26, 27, 30, 32, 33, 34, 35, 37, 40, 42, 43, 47], "1088": [1, 47, 50], "1110": [1, 47, 50], "r": [1, 3, 7, 15, 17, 19, 30, 32, 33, 37], "coifman": 1, "f": [1, 3, 7, 9, 13, 14, 19, 20, 22, 23, 24, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 40, 42, 43, 48], "sigworth": 1, "d": [1, 3, 7, 19, 25, 26, 27, 30, 35, 36, 37, 42, 43, 47], "chester": 1, "detect": [1, 11, 17, 37], "consist": [1, 4, 12, 14, 15, 17, 19, 27, 33, 46], "vote": [1, 22, 23, 24, 26, 30, 42, 50], "journal": [1, 2, 3], "structur": [1, 2, 3, 9, 13, 14, 15, 17, 19, 26, 27, 29, 30, 47, 50], "biologi": [1, 2], "169": [1, 30, 32], "312": 1, "322": 1, "2010": 1, "metadata": [1, 4, 8, 14, 17, 27], "string": [1, 9, 11, 13, 15, 17, 19, 20, 46], "toler": [1, 6, 19, 50], "power": [1, 4, 7, 10, 14, 17, 19, 30, 46], "iter": [1, 3, 4, 6, 7, 9, 15, 17, 19, 27], "degre": [1, 3, 37], "plane": [1, 38], "option": [1, 2, 3, 4, 8, 9, 10, 11, 13, 14, 17, 19, 20, 32, 37, 38, 47], "rng": [1, 4, 38], "static": [1, 12, 14, 19], "cl_angl": 1, "arrai": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 29, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46], "n_imgx3x3": 1, "rot": [1, 19, 27, 38], "order": [1, 3, 4, 7, 8, 13, 17, 19, 20, 26, 28, 40, 46], "rots_gt": 1, "everi": [1, 2, 14, 15, 17, 46], "might": [1, 13, 28, 33, 35], "version": [1, 8, 13, 15, 19, 28, 37, 46], "ground": 1, "truth": 1, "s_i": 1, "where": [1, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 19, 20, 28], "so": [1, 3, 4, 6, 9, 13, 14, 16, 17, 19, 26, 27, 28, 34, 35, 36, 37, 40, 43, 46], "onli": [1, 3, 4, 9, 11, 13, 14, 17, 19, 20, 27, 28, 30, 32, 33, 34, 35, 36, 46, 48], "singl": [1, 2, 3, 6, 7, 8, 9, 11, 15, 17, 19, 20, 39, 46, 50], "global": [1, 11, 19, 22, 23, 30, 42, 43], "need": [1, 4, 9, 11, 13, 14, 19, 22, 28, 35, 36, 43, 46, 48, 50], "error": [1, 3, 8, 13, 15, 19, 28, 35, 36, 50], "analysi": [1, 3, 4, 6, 27, 46], "asssoci": 1, "underli": [1, 4, 14, 17, 19, 27, 33, 34, 35, 46], "n_points_spher": 1, "500": [1, 7, 36], "equator_threshold": 1, "10": [1, 3, 6, 7, 8, 9, 13, 14, 22, 26, 27, 30, 32, 33, 34, 38, 40, 43, 44, 45, 46, 47, 48, 50], "cn": [1, 20], "4": [1, 2, 20, 27, 30, 32, 33, 34, 35, 37, 39, 40, 43, 45, 47], "candid": 1, "threshold": [1, 2, 3, 4, 8], "remov": [1, 3, 9, 13, 19, 20, 22, 26, 33, 36, 37, 48], "within": [1, 4, 9, 19, 20, 28, 37], "being": [1, 17, 27, 33, 46], "exclud": [1, 4], "induc": [1, 19, 35], "angular": [1, 3, 19], "distanc": [1, 4, 8, 14, 17, 19, 33, 46], "In": [1, 3, 6, 8, 9, 14, 15, 17, 20, 22, 23, 24, 26, 27, 30, 33, 34, 37, 43, 46, 48], "relative_rot": 1, "given": [1, 2, 3, 4, 6, 7, 14, 15, 16, 17, 18, 19, 27, 35, 36, 50], "set": [1, 2, 3, 4, 6, 7, 9, 10, 13, 14, 17, 19, 20, 22, 23, 24, 26, 27, 28, 30, 35, 37, 38, 40, 42, 43, 46, 50], "rel": [1, 3, 6, 10, 15, 17, 28, 36, 46], "produc": [1, 10, 17, 27, 30], "3": [1, 3, 4, 7, 9, 11, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 47, 48], "c1": 1, "c2": [1, 20], "length": [1, 3, 4, 9, 11, 14, 17, 19, 20], "increment": [1, 14, 17, 18, 19], "accumul": 1, "outer": [1, 4, 6, 37], "product": [1, 4, 6, 9, 14, 19, 20], "entri": [1, 2, 4, 9, 14, 17, 20, 22, 23, 24, 27, 34], "conjug": [1, 6, 15, 19, 36], "alia": 1, "float64": [1, 6, 19, 20, 26, 27, 33, 35, 36, 37, 38, 39], "v": [1, 3, 4, 14, 19, 26, 36, 37, 38, 50], "run": [1, 7, 8, 9, 19, 22, 23, 24, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 48, 50], "sum": [1, 3, 6, 14, 17, 22, 26, 27, 45], "calcul": [1, 2, 3, 6, 8, 10, 11, 19, 33, 36, 37, 40, 46], "eigenvector": [1, 3, 17, 19, 36, 47, 50], "ss11": [1, 47, 50], "constructor": [1, 4, 6, 8, 9, 36], "perform": [1, 2, 3, 4, 6, 8, 9, 12, 13, 17, 19, 22, 23, 24, 26, 27, 30, 34, 37, 42, 43, 46, 48, 50], "deriv": [1, 3, 4, 8, 14, 38], "reconstitut": 1, "describ": [1, 3, 6, 9, 16, 19, 20, 46, 50], "refer": [1, 2, 3, 4, 7, 8, 9, 17, 19, 27, 28, 37, 43, 46], "free": 1, "through": [1, 6, 9, 10, 19, 20, 28, 37], "eigenvestor": 1, "harmon": [1, 3], "28": [1, 30, 32, 33], "296": 1, "oreint": 1, "unsquar": 1, "deviat": [1, 2, 9, 18, 19, 26, 35, 42], "l": [1, 4, 6, 7, 9, 10, 14, 16, 17, 19, 20, 23, 26, 27, 34, 35, 36, 37, 38, 42, 43, 45], "wang": [1, 21], "z": [1, 3, 4, 19, 20, 27, 30, 37, 38, 45], "wen": 1, "6": [1, 3, 6, 16, 19, 20, 28, 30, 32, 34, 37, 40, 43, 47], "2450": 1, "2483": 1, "2013": [1, 3], "semi": [1, 19], "definit": [1, 3, 19], "program": [1, 7, 47, 50], "construct": [1, 3, 4, 19, 20, 27, 30, 33, 36, 37], "pre": [1, 48, 50], "input": [1, 3, 4, 6, 8, 13, 15, 19, 22, 24, 26, 34, 37, 43, 46, 50], "orient_method": 1, "origin": [1, 4, 8, 13, 14, 15, 16, 17, 19, 22, 26, 27, 30, 33, 34, 38, 40, 43, 46, 50], "after": [1, 2, 4, 7, 8, 9, 15, 19, 27, 34, 35, 42, 43, 50], "specifi": [1, 2, 3, 4, 6, 8, 9, 14, 15, 17, 19, 20, 28, 36, 40, 42, 48, 50], "mixin": [1, 3, 4], "which": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 14, 15, 17, 19, 20, 27, 28, 30, 33, 34, 36, 37, 38, 45, 46, 48, 50], "share": 1, "clsynvot": 1, "particle_s": [2, 17, 32, 50], "output_dir": [2, 7, 50], "min_particle_s": [2, 32], "max_particle_s": [2, 32], "query_image_s": 2, "minimum_overlap_amount": 2, "tau1": [2, 32], "tau2": [2, 32], "container_s": 2, "450": 2, "svm": 2, "model_opt": 2, "mrc_margin_left": 2, "99": [2, 8, 30, 32, 36], "mrc_margin_right": 2, "100": [2, 4, 22, 24, 27, 28, 30, 32, 33, 34, 36, 37, 39, 43, 45], "mrc_margin_top": 2, "mrc_margin_bottom": 2, "mrc_shrink_factor": 2, "mrc_gauss_filter_s": 2, "mrc_gauss_filter_sigma": 2, "response_thresh_norm_factor": 2, "20": [2, 4, 9, 13, 26, 30, 32, 34, 45], "conv_map_nthread": 2, "n_process": 2, "instanti": [2, 7, 8, 9, 10, 14, 17, 18, 27, 30, 34, 38, 46], "configur": [2, 4, 10, 11, 19, 22, 23, 24, 26, 27, 29, 30, 31, 41, 46, 48, 50], "some": [2, 3, 4, 13, 17, 19, 22, 23, 24, 26, 27, 28, 29, 30, 33, 36, 37, 39, 41, 46, 48], "discuss": [2, 27, 29, 33, 34, 37, 41], "automat": [2, 10, 22, 24, 26, 27, 37, 47, 48, 50], "particl": [2, 3, 6, 17, 19, 22, 23, 24], "low": [2, 3, 7, 27, 36, 47, 50], "effort": [2, 47, 50], "framework": [2, 27, 47, 50], "heimowitz": [2, 7, 21, 47, 50], "ayelet": [2, 7, 21, 47, 50], "and\u00e9n": [2, 21], "joakim": [2, 21, 47, 50], "amit": [2, 7, 21, 47, 50], "vol": [2, 4, 17, 20, 26, 27, 30, 35, 36, 38, 42, 43, 45], "204": [2, 32], "No": [2, 9, 37, 46, 48, 50], "11": [2, 19, 27, 28, 30, 31, 32, 36, 37, 40, 44, 46, 48], "2018": [2, 47, 50], "215": [2, 32], "227": [2, 32], "remain": 2, "have": [2, 3, 4, 11, 14, 17, 19, 20, 27, 28, 30, 33, 34, 37, 38, 46, 48, 50], "local": [2, 3, 19, 27, 28, 48], "dir": [2, 28, 37], "One": [2, 14, 19, 33], "gaussian_mixtur": 2, "gaussian_naive_bay": 2, "xgboost": 2, "thunder_svm": 2, "dictionari": [2, 3, 6, 9, 15, 17, 19], "concurr": 2, "process": [2, 4, 6, 8, 9, 19, 20, 22, 24, 26, 27, 29, 32, 33, 36, 47, 50], "spawn": [2, 17], "improv": [2, 46, 47, 48], "veri": [2, 28, 50], "machin": [2, 4, 22, 24, 27, 28, 34, 48], "micro_img": [2, 32], "micrograph": [2, 7, 17, 19, 37, 50], "suitabl": [2, 17, 32, 34], "render": [2, 37, 40, 48], "jupyt": [2, 22, 23, 24, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 48], "notebook": [2, 22, 23, 24, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 48], "jpg": [2, 32], "etc": [2, 13, 14, 19, 38, 45, 46], "displai": [2, 27, 28, 32, 33, 45, 50], "rectangl": 2, "folder": [2, 17, 19, 28, 48, 50], "create_jpg": [2, 32], "fals": [2, 3, 4, 6, 7, 9, 11, 13, 14, 15, 17, 19, 20, 22, 26, 27, 28, 34, 35, 37, 38], "filepath": [2, 9, 17, 18, 19, 20], "file": [2, 7, 8, 9, 17, 18, 19, 20, 27, 28, 31, 35, 37, 42, 43, 44, 45, 48, 50], "identifi": [2, 4, 34, 46], "take": [2, 3, 4, 9, 14, 15, 17, 19, 27, 28, 33, 35, 36, 37, 45, 46, 48, 50], "correspond": [2, 3, 4, 8, 9, 14, 15, 16, 17, 19, 22, 23, 24, 26, 27, 30, 33, 34, 37, 39, 43, 45, 46, 50], "disk": [2, 3, 4, 10, 20, 27, 28], "typic": [2, 4, 9, 14, 19, 27, 36, 37, 50], "classmethod": [2, 10, 20], "img": [2, 4, 9, 27, 33, 34, 37], "block_siz": [2, 7], "extract": [2, 3, 6, 7, 17, 36, 47], "queri": [2, 17, 19], "window": [2, 7, 9, 27, 48], "step": [2, 9, 36, 37], "4d": 2, "query_s": 2, "choos": [2, 9], "same": [2, 4, 8, 9, 16, 17, 19, 27, 28, 35, 40, 43, 46, 48], "e": [2, 3, 9, 11, 14, 19, 48], "region": 2, "first": [2, 3, 4, 13, 19, 22, 23, 24, 26, 27, 30, 33, 34, 35, 37, 38, 40, 46], "block": [2, 6, 7, 14, 18, 19, 22, 26, 35], "exampl": [2, 4, 8, 9, 14, 17, 19, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 35, 36, 38, 39, 40, 42, 43, 45, 46, 47, 48, 50], "size_filt": 2, "std": 2, "pass": [2, 3, 4, 6, 7, 9, 10, 13, 14, 15, 19, 20, 27, 28, 33, 34, 36, 37, 38], "sigma": [2, 8, 9, 19, 34, 37], "bw_mask_p": 2, "bw_mask_n": 2, "get": [2, 4, 9, 14, 17, 19, 22, 23, 24, 26, 27, 29, 30, 33, 34, 35, 37, 38, 40, 42, 47], "train": 2, "binari": [2, 48], "featur": [2, 4, 13, 27, 46], "vector": [2, 3, 4, 6, 9, 14, 15, 17, 19, 20, 30, 36], "label": [2, 17, 19, 28, 33, 37], "standard": [2, 3, 9, 18, 19], "intens": [2, 9], "varianc": [2, 3, 4, 6, 8, 10, 17, 20, 26, 27, 33, 34, 36, 37, 38, 43, 46], "possibl": [2, 4, 6, 13, 19], "max_siz": 2, "min_siz": 2, "moa": 2, "filenam": [2, 17, 19, 20, 28], "output_directori": 2, "doe": [2, 4, 9, 13, 17, 28, 46, 48], "actual": [2, 4, 19, 27, 37, 46], "help": [2, 34, 50], "segment": 2, "star": [2, 8, 17, 18, 19, 22, 23, 24, 26, 27, 37, 45, 50], "dismiss": 2, "score": [2, 4, 17, 37], "particle_window": 2, "non_noise_window": 2, "map": [2, 3, 4, 6, 8, 16, 17, 19, 26, 27, 30, 34, 35, 42, 43, 46], "neither": 2, "nor": 2, "tupl": [2, 3, 4, 7, 9, 11, 13, 17, 19, 20], "mask": [2, 4, 17, 19, 20, 46], "discard": [2, 9], "suspect": [2, 22, 23, 24, 26], "artifact": [2, 48], "cross": [2, 4, 19, 37], "read": [2, 3, 9, 17, 19, 20], "bin": [2, 33, 37], "distinguish": 2, "either": [2, 9, 11, 14, 17, 18, 19, 20, 48], "ell_max": 3, "float32": [3, 7, 14, 19, 20, 27, 30, 33, 35, 36, 42], "current": [3, 4, 8, 9, 14, 15, 18, 19, 27, 28, 34, 46, 48, 50], "cubic": [3, 20], "support": [3, 4, 8, 13, 14, 17, 19, 20, 27, 48], "ell": [3, 19], "element": [3, 14, 19, 20, 27], "np": [3, 13, 14, 17, 19, 20, 22, 23, 26, 27, 30, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45], "inf": [3, 13, 14], "includ": [3, 6, 12, 13, 14, 15, 19, 22, 27, 30, 34, 37, 50], "concentr": 3, "nyquist": [3, 14, 20], "frequenc": [3, 6, 7, 10, 14, 16, 19, 20], "dimens": [3, 4, 6, 9, 11, 12, 13, 14, 15, 16, 19, 20, 27, 32, 33, 37], "while": [3, 9, 14, 19, 27, 28, 29, 41, 46], "second": [3, 7, 19, 22, 23, 24, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46], "self": [3, 4, 6, 8, 14, 17, 20], "count": [3, 4, 19, 46], "": [3, 4, 9, 10, 11, 13, 14, 15, 17, 19, 20, 25, 27, 28, 29, 30, 32, 33, 34, 36, 38, 43, 45, 46, 48], "sz": [3, 11], "whose": [3, 8, 10, 19, 20], "match": [3, 4, 11, 13, 14, 17, 20, 38], "equal": [3, 6, 9, 14, 16, 17, 20], "obtain": [3, 6, 8, 15, 17, 35, 43], "those": [3, 27, 30, 35, 37, 46, 48, 50], "similar": [3, 4, 9, 13, 19, 27, 37, 46], "more": [3, 4, 6, 9, 14, 17, 20, 21, 27, 28, 34, 37, 45, 46, 48, 50], "accuraci": [3, 17, 36], "cg": 3, "linear": [3, 4, 7, 14, 15, 19, 35, 47], "last": [3, 9, 15, 20], "three": [3, 19, 20, 27, 45, 46, 47, 50], "desir": [3, 4, 10, 11, 12, 17, 19, 20, 22, 23, 24, 26, 27, 30, 32, 35, 37, 38, 42, 43, 46, 48, 50], "These": [3, 6, 9, 11, 14, 15, 17, 27, 28, 30, 34, 35], "creat": [3, 7, 8, 9, 10, 15, 17, 19, 22, 23, 24, 25, 26, 27, 28, 33, 34, 37, 38, 43, 45, 46, 48], "multidimension": [3, 9, 19, 20], "chang": [3, 9, 14, 19, 27, 28, 30, 34], "column": [3, 7, 8, 9, 13, 14, 17, 19, 36, 37, 40], "normal": [3, 6, 7, 9, 14, 17, 19, 27, 33, 35, 36, 37, 38, 43, 50], "bessel": [3, 6, 27, 45], "spheric": [3, 7, 14, 19, 26, 35, 37, 42, 43], "prolat": [3, 7, 27], "spheroid": [3, 7, 27], "wave": [3, 27], "pswf": [3, 27, 40], "real": [3, 8, 11, 19, 22, 23, 24, 33, 37, 40, 50], "upper": [3, 9, 33], "bound": 3, "r0": [3, 19], "themselv": 3, "nu": 3, "z0": 3, "newton": 3, "raphson": 3, "guess": 3, "like": [3, 4, 7, 9, 11, 14, 19, 21, 22, 26, 27, 28, 33, 43, 50], "root": [3, 19, 28, 48], "k": [3, 4, 8, 11, 14, 17, 19, 20, 33, 36], "j_nu": 3, "adapt": 3, "zerobess": 3, "m": [3, 4, 16, 19, 28], "jona": 3, "lundgren": 3, "splinefit": 3, "gmail": [3, 21], "com": [3, 21, 33, 48], "posit": [3, 4, 6, 9, 14, 18, 19], "1e7": 3, "saniti": [3, 27], "sequenc": [3, 7], "postul": 3, "true": [3, 4, 6, 7, 8, 9, 11, 13, 14, 15, 17, 19, 20, 22, 23, 24, 26, 28, 30, 32, 33, 35, 36, 37], "c": [3, 7, 9, 13, 14, 17, 19, 20, 21, 26, 33, 35, 36, 37, 42, 43, 46], "ndeg": 3, "legendr": 3, "gauss": 3, "quadratur": 3, "node": 3, "interv": [3, 17], "truncat": [3, 4, 36], "integr": [3, 7, 14, 27], "suppos": [3, 28], "you": [3, 4, 11, 21, 22, 26, 27, 28, 32, 33, 34, 37, 45, 46, 48, 50], "continu": [3, 22, 23, 24, 26, 27, 30], "simpli": [3, 17, 27, 28, 34, 48], "2rapper": 3, "polynomi": 3, "leggauss": 3, "endpoint": [3, 34, 38], "over": [3, 4, 6, 16, 17, 20, 27, 28, 33], "satisfi": 3, "alpha": [3, 4, 14, 20, 26, 35, 37, 42, 43], "beta": [3, 26, 50], "jacobi": 3, "yoel": [3, 21, 47, 50], "paper": [3, 4, 14], "eq": [3, 4], "page": [3, 21, 47], "int": [3, 4, 9, 13, 17, 19, 33], "float": [3, 8, 9, 13, 17, 19, 33, 39], "ndarrai": [3, 9, 14, 17, 18, 19, 20, 45], "_n": 3, "phi": 3, "we": [3, 4, 6, 8, 9, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 39, 40, 43, 45, 46, 48, 50], "want": [3, 8, 13, 17, 18, 27, 28, 33, 34, 37, 46, 48, 50], "latitud": 3, "pi": [3, 11, 14, 20, 34, 37, 38], "longitud": 3, "j_ell": 3, "t1": 3, "t2": 3, "big_n": 3, "range_arrai": 3, "approx_length": 3, "ndim": [3, 13], "uniqu": [3, 9, 14, 17, 27, 36], "polar": [3, 4, 9, 19, 20], "rectangular": [3, 19], "cube": 3, "odd": 3, "grid": [3, 4, 9, 14, 19, 20, 35, 37, 42, 46], "specif": [3, 9, 17, 22, 23, 24, 27, 28, 30, 37, 46, 48], "expans": [3, 6, 19, 29, 35, 41, 44], "inherit": 3, "zhao": [3, 4, 21], "invari": [3, 4, 6, 30, 34, 46], "eigenimag": 3, "optic": 3, "societi": 3, "america": 3, "30": [3, 7, 30, 32, 34, 37, 39], "871": 3, "877": 3, "integ": [3, 4, 6, 8, 9, 11, 17, 19, 20], "case": [3, 4, 6, 7, 9, 10, 14, 15, 17, 19, 20, 27, 33, 34, 37, 43, 46, 48, 50], "assum": [3, 4, 9, 19, 20, 33, 46], "part": [3, 19, 46, 50], "coef": [3, 4], "filter_nonzero_freq": 3, "freq_cutoff": 3, "bispectum": 3, "unique_radial_indic": 3, "complex": [3, 4, 13, 19], "tril": [3, 19], "high": [3, 4, 7, 22, 24, 30, 46], "frequeci": [3, 4], "abov": [3, 4, 9, 27, 28, 34, 40, 50], "off": [3, 4, 22, 23, 24, 26, 43, 46], "represent": [3, 4, 7, 14, 19, 20, 30, 33, 34, 47], "when": [3, 4, 8, 9, 10, 13, 14, 15, 17, 19, 20, 22, 26, 27, 28, 30, 34, 37, 46, 50], "compar": [3, 9, 20, 26, 27, 30, 34, 37, 50], "literatur": 3, "There": [3, 19], "coeffic": 3, "complex_coef": 3, "todo": [3, 8, 10, 19, 20], "instead": [3, 4, 6, 9, 14, 19, 27, 33, 36, 38, 48], "fast": [3, 4, 27, 28, 35], "princip": [3, 4], "compon": [3, 4, 11, 22, 23, 24, 26, 30, 46, 47, 48], "ieee": [3, 4, 14], "transact": [3, 4], "12": [3, 6, 30, 32, 33, 35, 36, 40, 45], "2016": [3, 6], "bandlimit": 3, "1e": [3, 6, 11, 15, 16, 27, 35, 38], "match_fb": 3, "interpol": [3, 14], "chebyshev": 3, "follow": [3, 8, 14, 17, 19, 27, 28, 30, 36, 37, 38, 43, 46, 48, 50], "marshal": 3, "o": [3, 20, 27, 28, 30, 32, 35, 37, 38, 39, 40, 42, 43, 45, 48], "mickelin": 3, "convolut": [3, 6, 16, 27], "submit": 3, "http": [3, 7, 9, 14, 19, 22, 23, 24, 26, 27, 30, 33, 47, 48, 50], "arxiv": [3, 47, 50], "org": [3, 7, 9, 19, 47, 50], "pdf": [3, 37], "2207": 3, "13674": 3, "fle": [3, 27], "band": [3, 4, 19], "precis": [3, 6, 11, 14, 28, 35, 42], "multipl": [3, 9, 14, 15, 17, 19, 20, 46], "datatyp": [3, 14, 38], "flag": [3, 19, 26, 30, 42, 47, 48], "ident": [3, 6, 9, 14, 17, 19, 20, 35, 38], "heurist": 3, "procedur": [3, 9, 48], "carri": 3, "out": [3, 9, 17, 23, 27, 33, 35, 37, 46, 48, 50], "across": [3, 4, 27, 46], "coeff": [3, 4, 6], "param": [3, 4, 9, 11, 14, 15, 19, 27, 37], "num_imag": 3, "max": [3, 4, 17, 33, 35, 37, 40, 50], "limit": [3, 4, 8, 19, 48, 50], "radial_img": 3, "convolv": [3, 6, 16, 27], "nre": 3, "target_point": 3, "known_point": 3, "numspars": 3, "barycentr": 3, "known": [3, 10, 17, 26, 27, 30, 37, 46], "target": [3, 10, 17, 26, 27, 30, 34], "around": [3, 27, 30, 33, 48], "via": [3, 17, 19, 20, 22, 23, 24, 27, 28, 30, 34, 45], "lagrang": 3, "jean": 3, "paul": 3, "berrut": 3, "lloyd": 3, "trefethen": 3, "review": [3, 28], "2004": 3, "46": [3, 30, 32], "501": 3, "517": 3, "peopl": 3, "math": [3, 6, 19], "ox": 3, "ac": [3, 21, 22, 23, 24, 26, 27, 30], "uk": [3, 22, 23, 24, 26, 27, 30], "see": [3, 4, 6, 7, 8, 9, 14, 15, 17, 19, 27, 33, 48], "remark": 3, "gamma_trunc": 3, "arbitrari": [3, 19, 27, 28], "bori": 3, "landa": 3, "space": [3, 4, 8, 11, 15, 17, 19, 20, 35, 37, 46], "sci": [3, 47, 50], "508": 3, "534": 3, "2017": 3, "scheme": [3, 46], "essenti": [3, 9], "anal": 3, "43": [3, 23, 30, 32], "381": 3, "403": 3, "disc": [3, 10, 37], "dimension": [3, 11, 12, 14, 16, 19, 47, 50], "22": [3, 30, 32], "235": [3, 32], "256": [3, 32, 50], "2007": 3, "1e6": 3, "control": [3, 4, 19, 22, 26, 27, 28, 30, 38, 46], "smaller": [3, 17, 22, 23, 24], "close": [3, 13, 17, 35], "guarante": 3, "yet": [3, 14, 15, 19, 27], "longer": 3, "vice": 3, "versa": 3, "note": [3, 4, 6, 7, 8, 9, 10, 16, 17, 19, 26, 27, 30, 32, 35, 37, 40, 43, 46], "due": 3, "consider": 3, "do": [3, 9, 14, 22, 26, 27, 35, 37, 48, 50], "exce": 3, "ratio": [3, 4, 7, 10, 17, 19, 35], "rate": 3, "therefor": [3, 36], "oversampl": 3, "intern": [3, 4, 6, 7, 9, 14, 17, 27, 30, 33, 34, 36, 42, 46], "batch_siz": [3, 4, 6, 8, 16, 17, 45], "512": [3, 4, 7, 8, 10, 16, 17, 34, 37, 43], "analaysi": 3, "extens": [3, 27, 46, 47, 50], "provid": [3, 4, 9, 10, 14, 17, 19, 20, 27, 33, 34, 35, 37, 38, 46, 48, 50], "asf": 3, "bbasis2d": 3, "combin": [3, 4, 8, 19, 34, 46, 47], "corespond": 3, "princicp": 3, "eigen": [3, 6, 19, 36], "decomposit": [3, 14], "domain": [3, 14], "reshap": [3, 9, 19, 20], "form": [3, 6, 9, 14, 17, 19, 35, 46], "usual": [3, 9, 17, 22, 23, 24, 26, 27], "assign": [3, 4, 8, 14, 17, 18, 22, 23, 24, 26, 30, 35, 36, 43, 46], "clean": [3, 6, 9, 27, 38], "cov2d": [3, 6, 8, 22, 26, 27], "skip": 3, "noisi": [3, 8, 27, 33], "batch": [3, 4, 6, 8, 10, 11, 17, 27, 33, 45], "implot": 3, "visual": [3, 30], "ceof": 3, "express": [3, 6, 16, 46], "cartesian": [3, 4, 9, 19, 20], "back": [3, 14, 22, 23, 24, 26, 30, 34, 35], "len": [3, 11, 14, 19, 33, 37], "nrad": 3, "ntheta": 3, "8": [3, 4, 17, 30, 32, 34, 36, 40, 48, 50], "phi_approximate_error": 3, "eigenvalu": [3, 8, 14, 17, 19, 36], "rcut": 3, "alpha_n": 3, "d_vec": 3, "band_limit": 3, "b_n": 3, "n_mn": 3, "denot": [3, 19], "l_c": 3, "respect": [3, 9, 34, 46], "t_nn": 3, "t_nm": 3, "shown": 3, "full": [3, 4, 9, 14, 17, 19, 22, 23, 24, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 50], "mat": [3, 19], "bn": 3, "argmax": 3, "descend": [3, 46], "ruturn": 3, "arg": [3, 4, 6, 8, 9, 10, 11, 14, 17, 19, 20, 28], "kwarg": [3, 4, 6, 8, 9, 10, 11, 14, 17, 19], "expect": [3, 4, 6, 9, 10, 19, 27, 30, 34, 35, 36, 37, 46, 50], "radian": [3, 4, 7, 14, 17, 19, 37], "refl": [3, 4], "counter": [3, 19], "clockwis": [3, 19], "exponenti": 3, "It": [3, 4, 9, 17, 19, 27, 32, 35, 46, 50], "kept": [3, 13], "code": [3, 4, 8, 9, 13, 14, 19, 20, 21, 22, 23, 24, 26, 27, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 48], "document": [3, 6, 8, 17, 18, 28, 37, 46, 47], "purpos": [3, 19, 27, 35], "To": [3, 4, 12, 21, 27, 28, 30, 34, 46, 48], "invok": [3, 17, 28, 50], "reflect": [3, 4, 6, 8, 17, 35, 46], "about": [3, 13, 17, 19, 20, 21, 38], "bool": [3, 4, 9, 11, 13, 14], "composite_basi": 4, "alignment_basi": 4, "num_proc": [4, 8, 22, 23, 24, 26, 34], "perfom": 4, "stage": [4, 27, 35, 46, 50], "dure": [4, 8, 9, 15, 17, 19, 20, 27, 28, 30, 34, 46], "composit": 4, "eg": 4, "hi": [4, 26, 27], "ffb2d": 4, "user": [4, 9, 10, 19, 27, 28, 30, 34, 37, 46, 48], "attempt": [4, 8, 9, 13, 17, 20, 22, 23, 24, 26, 27, 28, 37, 46], "suggest": [4, 19, 50], "resourc": [4, 19, 27, 48], "alreadi": [4, 9, 20, 37, 46], "thread": [4, 17, 37], "abstract": [4, 9, 10, 20], "basis_coeffici": 4, "properti": [4, 8, 9, 10, 14, 17, 18, 19, 20, 27], "n_nbor": [4, 8, 17, 22, 23, 24, 26, 30, 34, 46], "measur": [4, 46], "ccw": 4, "translat": [4, 9, 17, 38], "best": [4, 11, 17, 19, 46], "index": [4, 6, 8, 9, 16, 17, 18, 19, 35, 38, 46, 47], "extend": [4, 13, 14, 34, 46], "n_img": [4, 22, 23, 24, 30, 33, 38], "abc": [4, 9, 17, 20], "algo": 4, "radic": 4, "differ": [4, 6, 9, 10, 14, 15, 17, 20, 22, 26, 27, 33, 35, 36, 37, 40, 46, 47, 50], "synthet": [4, 17, 20, 25, 27, 30], "whether": [4, 6, 9, 11, 13, 15, 17, 19], "n_clase": 4, "could": [4, 9, 28], "avoid": [4, 8, 20, 22, 27, 46], "recomput": [4, 22, 46], "coef_count": 4, "n_angl": 4, "brute": [4, 8, 34], "forc": [4, 8, 13, 27, 34, 48], "member": 4, "yield": [4, 6, 14, 17, 19], "largest": [4, 19], "dot": 4, "radiu": [4, 8, 9, 10, 17, 19], "potenti": [4, 9, 22, 26], "expens": [4, 46], "search": [4, 37, 47], "x_shift": 4, "y_shift": 4, "bfr": 4, "16": [4, 20, 23, 30, 32, 36, 45], "alignment_src": 4, "reddychatterji": 4, "befor": [4, 8, 9, 16, 17, 27, 28, 33], "adopt": 4, "reddi": 4, "chatterji": 4, "1996": 4, "techniqu": [4, 27, 37, 46], "registr": [4, 46], "ON": 4, "NO": 4, "august": 4, "intention": 4, "citat": 4, "rigid": 4, "rangan": 4, "spivak": 4, "anden": 4, "barnett": 4, "h": [4, 28, 48], "Then": [4, 19, 26, 27, 33, 34, 37, 38, 46, 50], "nearest": [4, 8, 23, 46], "neighbor": [4, 8, 22, 23, 24, 26, 34, 46], "nn": 4, "area": [4, 13, 46, 47], "activ": [4, 9, 46, 48, 50], "research": [4, 46], "here": [4, 8, 17, 19, 22, 23, 24, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 40, 45, 46, 48], "naiv": 4, "concret": [4, 10, 20, 46], "entir": [4, 17, 23, 27, 46], "dataset": [4, 6, 13, 16, 17, 22, 24, 27, 30, 33, 34, 37, 46, 50], "n_class": [4, 22, 23, 24, 26, 30, 34], "debug": [4, 8, 19, 28, 34, 50], "develop": [4, 9, 21, 27, 28, 34, 37, 40, 46, 47, 48], "addition": [4, 9, 48], "few": [4, 13, 37], "histor": 4, "aid": 4, "central": [4, 37], "replic": 4, "behavior": [4, 19, 22, 26, 28], "matlab": [4, 15, 19], "cryo_sort_stack_bandpass": 4, "imagequalitymixin": 4, "bump": [4, 19, 20], "interfac": [4, 9, 10, 12, 27, 29, 33, 45, 46], "qualiti": [4, 30], "favor": 4, "anoth": [4, 17, 27, 46, 50], "proper": 4, "metric": 4, "_quality_scor": 4, "_select": 4, "argument": [4, 6, 8, 9, 12, 15, 17, 19, 36, 46, 47], "call": [4, 9, 14, 15, 17, 19, 20, 27, 28, 32, 46, 50], "sane": [4, 30], "boolean": [4, 8, 9, 11, 13, 14, 17, 19, 20, 22, 26], "lowest": [4, 35], "rir": [4, 30], "small": [4, 17, 26, 27, 28, 30, 33, 37, 46, 50], "rotation": [4, 6, 30, 34, 46], "quality_funct": [4, 23], "heap_size_limit_byt": 4, "2000000000": 4, "becaus": [4, 9, 10, 13, 14, 27, 30, 33, 43, 46, 48], "heap": 4, "maintain": [4, 8, 46], "recommend": [4, 15, 27, 48], "img_siz": [4, 22, 23, 24, 26, 27, 35, 36, 37, 40, 42, 43], "sort": [4, 23, 30, 34, 46], "callabl": 4, "snr": [4, 10, 17, 30, 38, 46], "byte": 4, "2gb": 4, "id": 4, "exclude_k": 4, "super": 4, "cryo_select_subset": 4, "overload": [4, 28], "ve": [4, 21, 27], "seen": [4, 19, 46], "well": [4, 9, 14, 19, 20, 27, 39], "main": [4, 46], "advantag": [4, 9, 27, 46], "gain": 4, "access": [4, 22, 23, 24, 27, 30, 38], "convers": [4, 13, 19, 27, 45, 46], "highest": [4, 23, 46], "contrast": [4, 7, 8, 14, 22, 23, 26, 27, 29, 35, 41, 42, 43, 44, 46, 47], "ramp": [4, 9], "de": 4, "_function": 4, "request": [4, 13, 14, 30, 34], "lxl": 4, "freq": 4, "sample_n": [4, 17], "num_it": 4, "qr": 4, "data": [4, 6, 7, 8, 9, 13, 14, 17, 19, 20, 25, 29, 30, 32, 33, 35, 39, 40, 42, 43, 45, 46, 50], "halko": 4, "martinsson": 4, "tygert": 4, "2011": [4, 47, 50], "applic": [4, 19, 27, 37, 46], "singular": 4, "do_cross_corr_transl": 4, "publish": 4, "scikit": [4, 13, 48], "impliment": 4, "fix": [4, 19], "onc": [4, 15, 27, 33, 37], "reus": [4, 28], "m_img": 4, "trnaslat": 4, "infer": 4, "pca_basi": 4, "fspca_compon": [4, 30], "3333333333333333": 4, "bispectrum_compon": [4, 30], "300": [4, 7, 39], "bispectrum_freq_cutoff": 4, "large_pca_implement": 4, "legaci": [4, 20], "nn_implement": [4, 23], "bispectrum_implement": 4, "At": [4, 9, 19, 37], "consum": [4, 10, 27, 33, 38, 46], "2014": 4, "optin": [4, 10], "keep": [4, 9, 17, 20, 36], "fscpa": 4, "400": [4, 37], "riir": 4, "sampl": [4, 6, 13, 19, 27, 32, 34, 35, 50], "50000": [4, 37], "chunk": [4, 17, 30], "taken": [4, 19], "coef_b": 4, "coef_b_r": 4, "modular": [4, 27, 34, 46], "thei": [4, 9, 13, 19, 27, 28, 33, 34, 37, 45, 46], "swap": [4, 27, 33], "distribut": [4, 9, 14, 17, 19, 30, 35, 36, 37, 48], "min": [4, 19, 33, 37], "additon": 4, "privat": 4, "dist": 4, "both": [4, 6, 8, 9, 13, 17, 19, 27, 28, 35, 46, 48], "n_compon": [4, 13], "howev": [4, 28, 48], "sinc": [4, 13, 15, 17, 19, 33, 35, 36, 43], "would": [4, 9, 11, 13, 19, 21, 27, 28, 33, 36, 37, 38, 46, 48, 50], "smallest": [4, 8, 17], "m_featur": 4, "non": [6, 11, 13, 14, 15, 16, 19, 47], "ing": [6, 16], "appropri": [6, 16, 46, 48], "whole": [6, 16], "pack": [6, 19], "isometr": [6, 19], "b_coeff": [6, 16], "tol": [6, 13, 16], "05": [6, 16, 30, 32, 44], "regular": [6, 14, 16, 19, 20], "mean_vol": [6, 8, 17], "noise_vari": [6, 26, 36, 37, 38, 43], "shrink_method": 6, "subtract": [6, 7, 9, 14], "correct": [6, 9, 22, 23, 24, 26, 27], "contribut": [6, 18, 21, 33, 46], "8192": [6, 45], "batchwis": 6, "equivari": 6, "done": [6, 17, 28, 30, 35, 37, 42], "moder": 6, "achiev": [6, 19], "decompos": 6, "bhamr": 6, "zhang": 6, "struct": [6, 15], "biol": 6, "195": [6, 30, 32], "27": [6, 30, 32], "81": [6, 30, 32], "doi": [6, 47, 50], "1016": 6, "jsb": 6, "04": [6, 30, 32, 44], "013": 6, "By": [6, 13, 27, 28, 48], "mean_coeff": [6, 35], "covar_est_opt": [6, 35], "diagon": [6, 8, 14, 17, 19, 35], "overrid": [6, 17, 50], "kei": [6, 15, 22, 23, 24, 26, 28, 30], "shrinker": [6, 35], "shrinkag": 6, "verbos": [6, 15, 28, 35, 50], "gradient": [6, 7, 15, 36], "250": [6, 32, 35], "iter_callback": [6, 15, 35], "callback": 6, "end": [6, 7, 9, 15, 17, 22, 23, 24, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 48], "store_iter": [6, 15, 35], "store": [6, 8, 13, 14, 15, 16, 17, 19, 27, 28, 30, 35, 45], "intermedi": [6, 15], "rel_toler": [6, 15, 35], "stop": [6, 15, 34], "make": [6, 12, 13, 19, 27, 28, 33, 34, 37, 48], "semidefinit": [6, 14, 47, 50], "ctf_fb": 6, "ctf_idx": 6, "covar_coeff": [6, 35], "wiener": [6, 8], "cwf": [6, 27, 35], "cft": 6, "unfilt": [6, 35], "certain": [6, 17, 50], "white": [6, 10, 26, 27, 30], "do_refl": 6, "As": [6, 17, 27, 28, 48], "effect": [6, 13, 14, 17, 19, 26, 30, 35, 37], "account": [6, 20, 35], "b_nois": 6, "shrink": 6, "gamma": 6, "frobenius_norm": [6, 35], "covar_in": 6, "neglect": 6, "sep": 7, "author": [7, 10, 47], "moscovich": [7, 21], "garrett": [7, 21], "wright": [7, 21], "feb": 7, "2021": 7, "pixel_s": [7, 9, 14, 17, 19, 20, 22, 23, 24, 26, 27, 30, 35, 37, 39, 42, 43, 45, 50], "amplitude_contrast": [7, 37], "voltag": [7, 14, 19, 26, 35, 37, 39, 42, 43], "psd_size": [7, 37], "num_tap": [7, 37], "\u00e5": 7, "angstrom": [7, 9, 14, 17, 19, 20, 26, 27, 30, 35, 37, 39, 42, 43], "aberr": [7, 14, 26, 35, 37, 42, 43], "mm": [7, 37], "microscop": 7, "psd": 7, "amplitude_spectrum": 7, "linprog_method": 7, "n_low_freq_cutoff": 7, "14": [7, 30, 32, 37], "background": [7, 9, 17, 19, 43, 50], "spectrum": [7, 33, 36, 37], "solver": 7, "scipi": [7, 9, 12, 19, 28, 33, 36, 37, 48], "linprog": 7, "cutoff": [7, 9, 19, 20], "loop": [7, 14, 28], "signal": [7, 10, 11, 14, 17, 19, 35, 37, 47], "background_p1": 7, "max_col": 7, "variabl": [7, 22, 26, 27, 28, 43, 46], "without": [7, 17, 19, 34, 35, 37, 46], "ffbbasi": [7, 35], "ellipt": 7, "tapers_1d": 7, "multi": [7, 12], "df1": 7, "df2": 7, "angle_ast": 7, "g_min": 7, "g_max": 7, "lmbd": 7, "ascent": 7, "defocu": [7, 14, 26, 27, 30, 35, 36, 37, 42, 43], "perpendicular": [7, 20, 37], "axi": [7, 9, 12, 13, 14, 19, 20, 22, 26, 27, 30, 37, 38, 40, 45], "magnitud": [7, 46], "spatial": [7, 14, 46], "phase": [7, 14, 22, 24, 26, 27, 43, 50], "minimun": 7, "wavelength": [7, 19], "transfer": [7, 14, 27, 29, 41, 44, 47], "look": [7, 22, 26, 27, 33, 48], "blocksiz": 7, "min_defocu": 7, "max_defocu": 7, "10000": [7, 26, 37, 45], "astigmat": [7, 37], "present": [7, 27, 37, 40], "specrtum": 7, "start": [7, 8, 10, 15, 17, 23, 26, 27, 29, 30, 33, 34, 38, 40, 43, 46, 47], "scan": 7, "low_freq_cutoff": 7, "df": 7, "nw": 7, "discret": [7, 19, 36], "dpss": 7, "doc": [7, 9, 19, 48], "html": [7, 9, 14, 19, 48], "bandwidth": 7, "name": [7, 9, 11, 13, 14, 17, 19, 21, 28, 37, 48, 50], "params_dict": 7, "data_fold": [7, 17, 22, 23, 24, 27, 37, 45, 50], "07": [7, 14, 30, 31, 32, 37, 44], "save_ctf_imag": 7, "save_noise_imag": 7, "paramat": [7, 8, 37], "experiment": [7, 8, 25, 34, 46, 50], "img_src": 8, "energy_threshold": 8, "compact": [8, 20], "c_limit": 8, "r_limit": 8, "class_selector": [8, 23], "tabl": [8, 17, 19, 27], "layout": [8, 13, 17], "hold": [8, 9, 17, 20, 27], "zeroth": [8, 17], "manag": [8, 9, 17, 19, 28, 33, 36, 46, 48], "reprsent": [8, 17], "columm": [8, 17], "50": [8, 15, 23, 30, 32, 34, 36, 37], "averager_src": [8, 22, 26], "fly": [8, 17], "compress": [8, 14, 46], "previou": [8, 37], "most": [8, 27, 28, 33, 37, 46, 50], "reason": [8, 9, 19, 22, 23, 24, 26, 27, 30, 34, 37, 48], "classavgsourcev11": 8, "processor": [8, 19, 34], "serial": 8, "core": [8, 19], "ceat": 8, "explicitli": [8, 27, 48], "explicit": [8, 10], "accept": [8, 9, 13, 27, 50], "dispatch": 8, "latest": [8, 14, 46], "istart": 8, "denos": 8, "var_nois": 8, "covar_opt": [8, 35], "sim": [8, 20, 26, 27, 35, 36, 42], "eig_vol": [8, 17], "lambda": [8, 9, 14], "eigenvolum": [8, 17], "formula": 8, "alpha_": 8, "h_": 8, "y_": 8, "p_": 8, "sth": 8, "onto": 8, "span": [8, 17], "better": [8, 19, 20, 35, 43], "place": [8, 13, 14, 19, 20, 33], "wrapper": [9, 11, 12, 17, 19, 20, 27, 33, 45], "task": [9, 20, 27, 29, 37, 41, 46], "n_imag": [9, 39], "singleton": [9, 20], "cast": [9, 20], "abbrevi": [9, 20], "rot_matric": [9, 20], "im": [9, 17, 19, 39], "corresond": 9, "ds_re": [9, 20], "ring": [9, 37], "frac": [9, 19, 20], "operatornam": [9, 19, 20], "sum_i": [9, 19, 20], "mathcal": [9, 19, 20], "_1": [9, 19, 20], "_2": [9, 19, 20], "tradition": [9, 19, 20], "143": [9, 19, 20, 30, 32], "impli": [9, 11, 19, 20, 46], "equival": [9, 14, 19, 20], "screen": [9, 20], "estimated_resolut": [9, 20], "mrcs_filepath": 9, "overwrit": [9, 15, 17, 20, 22, 23, 24, 26, 30], "altern": [9, 19, 22, 26, 30, 46], "period": 9, "boundari": 9, "figsiz": 9, "colorbar": [9, 35, 37, 43], "figur": 9, "inch": 9, "consult": [9, 17], "matplotlib": [9, 19, 22, 26, 27, 32, 33, 34, 35, 37, 40, 43, 45], "pyplot": [9, 19, 22, 26, 27, 32, 33, 34, 35, 37, 40, 43, 45], "intend": [9, 20, 45, 46, 48], "bg_radiu": 9, "do_ramp": 9, "consid": [9, 10, 17, 28], "constant": [9, 14, 19, 37], "modifi": [9, 17, 19, 28], "stacker": 9, "act": [9, 27], "images_to_stack": 9, "median": 9, "poisson": 9, "reject": [9, 13], "robust": 9, "chauvenet": 9, "outlier": 9, "rejection_sigma": 9, "exist": [9, 30], "presenc": 9, "outsid": [9, 30], "per": [9, 17, 27, 33], "gaussian": [9, 10, 19, 20, 27, 30, 36, 37], "fwhm": 9, "fwtm": 9, "lai": 9, "tenth": 9, "wing": 9, "clip": 9, "locat": [9, 17, 28, 50], "peak": [9, 19], "respons": [9, 19, 27, 46], "ensur": [9, 13], "fw": 9, "probabl": [9, 33], "pedest": 9, "incorpor": 9, "easili": [9, 33, 34, 37, 43], "ad": [9, 17, 27, 37], "futur": [9, 14, 27, 46], "presrib": 9, "fall": [9, 14], "width": [9, 19], "percentil": 9, "winsor": 9, "except": [9, 18, 19, 49], "admit": [9, 13, 32], "replac": [9, 17, 27], "prescrib": [9, 14, 17, 20, 38, 50], "stat": [9, 18], "mstat": 9, "trim": 9, "allow": [9, 13, 17, 20, 22, 26, 27, 28, 35, 38, 46, 50], "lower": [9, 17, 19, 27, 33, 46], "addend": 9, "densiti": [9, 22, 43], "predefin": 9, "work": [9, 14, 27, 28, 30, 33, 36, 37, 46, 48], "unique_xform": 9, "individu": [9, 14, 28], "incom": [9, 10], "extra": 9, "layer": [9, 50], "capabl": 9, "deal": [9, 27], "effici": [9, 27, 33], "manner": 9, "group": [9, 20, 26, 35, 42, 43, 48], "invoc": 9, "minim": [9, 19, 36], "lambda_fun": 9, "keyword": [9, 19, 36], "directori": [9, 17, 19, 27, 50], "depth": [9, 14], "unspecifi": 9, "scalar": [9, 14, 17], "made": [9, 19], "up": [9, 14, 17, 19, 22, 23, 24, 27, 29, 33, 34, 35, 36, 37, 46], "just": [9, 13, 33, 43], "mode": [9, 32, 37, 48], "client": 9, "major": [9, 19, 36], "transpar": [9, 37], "signific": [9, 45, 48], "repeatedli": 9, "especi": 9, "joblib": 9, "behind": [9, 27, 33, 37, 45, 46], "scene": [9, 27, 33, 37, 45, 46], "anyth": [9, 17], "spit": 9, "whatev": 9, "larger": [9, 14, 27], "encount": [9, 19, 27], "runtim": 9, "thin": [9, 17, 27], "ever": 9, "ignor": [9, 17], "altogeth": [9, 19], "won": [9, 27], "care": 9, "what": [9, 22, 26, 27, 33, 34, 37, 46, 48], "someth": [9, 27, 33, 48], "vari": 9, "depend": [9, 17, 19, 22, 23, 24, 46, 48], "inner": [9, 19], "u": [9, 10, 14, 19, 21, 27, 35, 37, 38, 46], "temporarili": 9, "tweak": 9, "attribut": [9, 10, 15, 17], "enter": 9, "exit": [9, 17, 19], "regardless": [9, 17], "bgradiu": 10, "batchsiz": [10, 36], "anisotrop": [10, 27], "give": [10, 19, 20, 28], "demand": 10, "complement": 10, "inscrib": [10, 17], "how": [10, 13, 22, 23, 24, 26, 27, 34, 36], "var": [10, 14, 27, 33, 34, 35, 38, 43], "increas": [10, 14, 37, 43], "noise_filt": [10, 17, 26, 27, 33], "encourag": [10, 46, 48], "relev": [10, 27, 37], "decreas": [10, 14, 15], "requires_signal_pow": 10, "complet": [10, 33, 46], "wa": [10, 27, 28, 30, 36, 37, 46], "uniform": [11, 19, 33], "geometri": 11, "fourier_pt": 11, "arrang": [11, 27, 38], "ntransform": 11, "vol_f": 11, "num_pt": 11, "nfft": 11, "backend": [11, 28, 45, 47], "sig_f": 11, "08": [11, 30, 31, 32], "against": [11, 19], "particular": [11, 50], "raise_error": 11, "runtimeerror": [11, 17], "default_plan_class": 11, "popul": [11, 17, 27, 36, 46], "complexpca": [12, 13], "check_arrai": [12, 13], "custom": [12, 19, 22, 23, 26, 28, 30, 33, 34, 46, 48], "among": [12, 27], "pyfftw": [12, 28], "worker": 12, "occur": [12, 34, 46], "unshift": 12, "unifi": 12, "pyfft": 12, "go": [13, 22, 23, 24, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 48], "refus": 13, "complic": 13, "portion": 13, "becom": 13, "don": [13, 17], "mix": [13, 37, 46], "crash": 13, "unfortun": [13, 27], "wrap": [13, 19], "theirs": 13, "now": [13, 22, 23, 24, 26, 27, 30, 33, 34, 35, 43, 46, 48], "svd_solver": 13, "auto": [13, 17, 27, 34], "iterated_pow": 13, "n_oversampl": 13, "power_iteration_norm": 13, "random_st": 13, "accept_spars": 13, "accept_large_spars": 13, "force_all_finit": 13, "ensure_2d": 13, "allow_nd": 13, "ensure_min_sampl": 13, "ensure_min_featur": 13, "warn_on_dtyp": 13, "allow_complex": 13, "finit": [13, 14], "convert": [13, 14, 18, 19, 20, 35, 39], "failur": 13, "format": [13, 17, 28, 46], "csc": 13, "csr": 13, "coo": 13, "bsr": 13, "suppli": [13, 15, 17, 19, 30, 46], "caus": [13, 17], "32": [13, 22, 23, 24, 26, 27, 30, 32], "bit": 13, "preserv": 13, "unless": [13, 15, 19], "fortran": [13, 40], "style": [13, 19], "noth": 13, "trigger": [13, 14], "nan": [13, 14], "cannot": [13, 19], "infinit": 13, "sure": [13, 28, 34, 48], "minimum": [13, 26, 35, 37, 42, 43], "enforc": [13, 36], "dataconversionwarn": 13, "deprec": [13, 19, 33, 36], "21": [13, 30, 32, 34], "23": [13, 30, 32], "str": [13, 17, 19, 22, 23, 24, 27], "warn": [13, 19, 20, 28], "messag": [13, 19, 28], "array_convert": 13, "notimplementederror": 14, "nblock": 14, "syntact": 14, "sugar": 14, "elementwis": 14, "absolut": [14, 17, 28], "inplac": 14, "rh": 14, "blk": 14, "blk_diag": 14, "fulli": [14, 46], "conjunct": [14, 46], "situat": [14, 17], "immedi": 14, "blk_partit": 14, "python": [14, 17, 19, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 48], "facilit": 14, "diag": [14, 17, 19, 36], "val": 14, "unari": 14, "negat": [14, 19], "recalcul": 14, "next": [14, 22, 23, 24, 26, 37], "ie": [14, 17, 27], "lazili": 14, "involv": [14, 17], "separ": [14, 19, 37], "subract": 14, "xfer_fn_arrai": 14, "setup": [14, 22, 23, 24, 26, 30, 33, 48], "directli": [14, 17, 19, 27, 28], "usag": [14, 17, 27, 29, 41, 43, 50], "200": [14, 26, 30, 32, 35, 37, 42, 43], "defocus_u": [14, 37, 39], "15000": [14, 27, 30, 37], "defocus_v": [14, 37, 39], "defocus_ang": [14, 37], "26": [14, 30, 32, 34, 37, 44], "kv": [14, 19, 26, 35, 37, 39, 42, 43], "envelop": [14, 17, 37], "decai": [14, 17, 37], "dilat": 14, "filter_in": 14, "omega": 14, "arbritrari": 14, "down": [14, 46, 50], "fbasi": [14, 19], "compos": [14, 20], "filt": [14, 35], "gridpoint": 14, "wavelet": 14, "earthmov": 14, "emd": [14, 22, 23, 24, 26, 27, 30], "sameer": 14, "shirdhonkar": 14, "david": 14, "jacob": 14, "earth": 14, "mover": 14, "2008": 14, "confer": 14, "vision": 14, "pattern": [14, 28, 48], "recognit": 14, "cvpr": 14, "technic": 14, "report": [14, 34], "car": 14, "tr": 14, "1025": 14, "4908": 14, "umiac": 14, "06": [14, 30, 31, 32, 42, 44], "arr": 14, "coif3": 14, "embed": 14, "l1": [14, 19], "strongli": [14, 48], "accur": [14, 28], "log2": 14, "pywavelet": 14, "sym3": 14, "sym5": 14, "pywt": 14, "readthedoc": 14, "io": 14, "en": 14, "ref": 14, "built": [14, 27, 30, 33, 37, 48, 50], "wavelist": 14, "seem": [14, 19], "empir": 14, "a_fun": 15, "cg_opt": 15, "init": 15, "again": [15, 35, 36, 37, 46], "extent": 15, "progress": [15, 19, 28, 37], "termin": [15, 28], "info": [15, 17, 19, 22, 23, 24, 26, 28, 32, 34, 35, 36, 40, 42, 43], "precondition": [15, 16, 35], "px": 15, "reach": 15, "under": [15, 27, 37], "field": [15, 17, 19], "amount": [15, 45], "residu": 15, "obj": [15, 17], "att_val": 15, "fill": [15, 34], "stai": 15, "hasattr": 15, "els": 15, "setattr": 15, "circul": 16, "vol_coeff": 16, "mxmxm": 16, "six": 16, "max_row": [17, 22, 23, 24, 27, 37, 45], "box": [17, 37], "path_to_mrc": 17, "path_to_coord": 17, "crop": [17, 19, 33], "text": [17, 37], "coord": [17, 50], "mandatori": [17, 50], "coupl": 17, "broadli": 17, "wai": [17, 19, 27, 33, 37, 38, 46, 50], "sometim": [17, 46], "extern": [17, 48], "filetyp": 17, "adher": 17, "put": 17, "_imag": 17, "them": [17, 19, 21, 23, 33, 34, 38, 46, 50], "manipul": 17, "datafram": 17, "path": [17, 18, 19, 22, 23, 24, 27, 28, 30, 32, 35, 37, 38, 39, 40, 42, 43, 45, 48, 50], "import": [17, 28, 30, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 45], "api": [17, 19, 47], "conform": [17, 19], "_cached_im": 17, "parent": 17, "bypass": 17, "serv": [17, 27], "doubl": 17, "though": 17, "primit": [17, 29], "written": [17, 18, 27], "begin": [17, 22, 23, 24, 26, 30, 33, 48], "underscor": 17, "_": [17, 22, 23, 24, 26, 28], "sever": [17, 27, 33, 40, 48, 50], "_rlndefocusu": 17, "_rlndefocusv": 17, "support_radiu": [17, 19], "energi": 17, "circl": [17, 19, 37], "image_accessor": 17, "signal_power_method": 17, "noise_pow": 17, "practic": [17, 27, 30, 34, 37, 40, 46], "metadata_field": 17, "default_valu": 17, "as_dict": 17, "miss": [17, 21], "latter": 17, "typecast": 17, "caution": [17, 28], "is_dict": 17, "wish": [17, 46, 48], "num": [17, 34, 38], "subscript": 17, "starfile_filepath": 17, "save_mod": 17, "image_sourc": 17, "filename_indic": 17, "unchang": [17, 19], "index_map": [17, 26], "func": 17, "decor": 17, "deepcopi": 17, "unmodifi": 17, "mutat": [17, 30], "lost": 17, "n_worker": 17, "slice": [17, 18, 27, 37], "minumum": 17, "_rlnimagenam": 17, "augment": 17, "resolv": [17, 19, 22, 23, 24, 28], "referenc": 17, "dict": [17, 18, 19], "our": [17, 21, 22, 23, 24, 26, 27, 30, 33, 34, 35, 37, 43, 47, 48], "own": [17, 27, 28, 30, 33, 34, 37, 46, 48, 50], "conveni": [17, 19], "1024": [17, 27, 30, 35, 36, 37], "unique_filt": [17, 26, 27, 30, 35, 36, 37, 42, 43], "noise_add": [17, 26, 27, 30, 33, 35, 38, 43], "realist": [17, 26, 27, 34], "euler": [17, 19, 27, 38], "variou": [17, 27, 29, 30, 34, 37, 45], "corrupt": [17, 30], "agre": 17, "th": [17, 20], "randomli": [17, 30, 38, 42], "overridden": [17, 34], "n_vol": [17, 20], "eigendecomposit": [17, 19, 36], "eigs_tru": 17, "lambdas_tru": 17, "vol_idx": [17, 36], "cluster": [17, 27, 36], "adjust": [17, 30], "term": [17, 46], "correctli": [17, 48], "permut": 17, "discord": 17, "coords_est": [17, 36], "affin": 17, "covar_est": [17, 36], "eigs_est": [17, 36], "lambdas_est": [17, 36], "mean_est": [17, 36, 45], "vol_tru": 17, "vol_est": 17, "volmat_tru": 17, "volmat_est": 17, "readi": [18, 27], "receiv": 18, "curren": 18, "simplest": [18, 19, 46], "array_slic": 18, "mrcobj": 18, "statist": [18, 47], "header": 18, "mrcfile": [18, 32], "ordereddict": [18, 19], "retriev": [18, 46], "gemmi": 18, "col": 19, "mostli": [19, 27], "geometr": 19, "natur": [19, 46], "azimuth": [19, 37], "co": 19, "ordin": 19, "elev": 19, "r1": 19, "r2": 19, "fill_valu": 19, "pad": 19, "q_mat": [19, 26, 30, 42], "orthogon": [19, 45], "3x3": [19, 27], "conjugaci": 19, "regrot": [19, 26, 30, 42], "rots_reg": 19, "rots_ref": 19, "yx": 19, "xy": 19, "stabl": 19, "meshgrid": 19, "zyx": 19, "xyz": 19, "o_mat": 19, "h_fun": 19, "nonradi": 19, "miscellan": 19, "logger": [19, 22, 23, 24, 26, 28, 32, 34, 35, 36, 38, 40, 42, 43], "max_count": 19, "repetit": 19, "insid": [19, 34, 35], "record": 19, "Will": 19, "hash": 19, "9214569846597413734": 19, "7774949968435255185": 19, "2308425733409080574": 19, "1221966620669721857": 19, "1789194590235032483": 19, "2990099392958978495": 19, "7959067382171470795": 19, "streamhandl": [19, 28], "consol": [19, 28], "console_level": [19, 28], "dynam": [19, 27], "session": [19, 28, 37], "cli": [19, 47], "critic": [19, 28, 37], "filehandl": [19, 28], "log_file_level": [19, 28], "much": 19, "git": [19, 48], "never": 19, "maj": 19, "bld": 19, "setuptool": 19, "rev": 19, "possibli": 19, "git_tag": 19, "git_rev": 19, "dirti": 19, "tag": 19, "commit": 19, "revis": 19, "suffix": 19, "level_nam": 19, "supersed": 19, "config": [19, 28], "tqdm_disabl": [19, 28], "bar": [19, 28], "compat": 19, "subsequ": 19, "caller": 19, "new_shap": 19, "ambigu": 19, "linalg": 19, "eigsh": 19, "repeat": [19, 27], "utilti": 19, "euclidean": 19, "rank": [19, 23, 36], "partial": 19, "sig_sz": 19, "determinist": [19, 34], "roll": 19, "hermitian": 19, "is_symmat": 19, "d1": 19, "d2": 19, "n_1": 19, "n_d1": 19, "m_1": 19, "m_d2": 19, "fun": 19, "triangular": 19, "constitut": 19, "lot": [19, 27], "acrobat": 19, "happen": [19, 33], "swapax": 19, "triu": 19, "reweight": 19, "frobeniu": 19, "unrol": 19, "vec": [19, 20], "occupi": 19, "l2": 19, "modulu": 19, "return_map": 19, "item": [19, 28], "spread": 19, "x0": 19, "y0": 19, "height": 19, "cordin": 19, "2pi": [19, 20], "x3x3": 19, "risetim": 19, "fuzzi": 19, "rise": 19, "erf": 19, "mu": [19, 34], "exp": [19, 27, 33], "mu_x": 19, "sigma_x": 19, "mu_i": 19, "sigma_i": 19, "mu_z": 19, "sigma_z": 19, "workaround": 19, "importlib": 19, "safe": 19, "9": [19, 30, 32, 34, 40], "546": 19, "open": [19, 30, 32], "statement": 19, "pathlib": [19, 22, 23, 24], "cover": [19, 28], "sha256": 19, "hex": 19, "hard": [19, 37], "soft": 19, "comparison": [19, 26, 33], "clone": [19, 48], "cpu": 19, "physic": 19, "virtual": 19, "reproduc": [19, 38], "pop": 19, "repro": 19, "prefer": 19, "i_max": 19, "doesn": 19, "imax": 19, "movi": 19, "broadcast": [19, 46], "7": [19, 26, 27, 30, 32, 34, 35, 36, 37, 40, 42, 43, 47, 48], "save_to_fil": 19, "_as_gen": 19, "savefig": 19, "paran": 19, "array_lik": 19, "realtyp": 19, "complextyp": 19, "test": [19, 20, 22, 23, 24, 27, 33, 34, 38, 46, 47], "decibel": 19, "rule": 19, "n1": 20, "shell": 20, "permiss": 20, "problemat": 20, "specifii": 20, "zero_nyquist": 20, "ith": 20, "tranpos": 20, "docstr": 20, "64": [20, 26, 30, 32, 35, 37], "asymmetr": [20, 34], "blob": [20, 36], "sphere": 20, "duplic": 20, "_symmetrize_gaussian": 20, "fold": 20, "dihedr": 20, "dn": 20, "octahedr": 20, "opposit": 20, "vertic": 20, "octahedron": 20, "midpoint": 20, "face": [20, 33], "edg": [20, 37], "tetrahedr": 20, "tetrahedron": 20, "vertex": 20, "aspir": [21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50], "grow": 21, "team": 21, "collabor": 21, "learn": 21, "pleas": 21, "visit": 21, "webpag": 21, "collect": [21, 27, 30, 38, 46, 48], "githubid": 21, "email": 21, "affili": 21, "janden": 21, "kth": 21, "se": 21, "royal": 21, "institut": 21, "vineet": 21, "bansal": 21, "vineetbans": 21, "vineetb": 21, "princeton": [21, 37], "edu": 21, "univers": 21, "robbi": 21, "brook": 21, "rbrook": 21, "cs123k": 21, "josh": 21, "carmichael": 21, "ayeltg": 21, "ayeleth": 21, "ariel": 21, "il": 21, "chri": 21, "langfield": 21, "cal2254": 21, "columbia": 21, "mosco": 21, "tauex": 21, "tau": 21, "tel": 21, "aviv": 21, "gabi": 21, "pgabi": 21, "gabipragi": 21, "itai": 21, "sason": 21, "itaysason": 21, "mail": 21, "yoelsh": 21, "amitsing": 21, "garrettwrong": 21, "gbwright": 21, "junchao": 21, "xia": 21, "junchaoxia": 21, "junchaoxiacn": 21, "openey": 21, "mar": 21, "cohen": 21, "lanhui": 21, "jane": 21, "your": [21, 27, 28, 33, 34, 46, 48], "contact": 21, "ll": [21, 22, 23, 24, 26, 27, 30, 33, 34, 37, 39, 40, 43, 45], "happi": [21, 33], "download": [22, 23, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45], "introduc": [22, 23, 24, 26, 27, 33], "www": [22, 23, 24, 26, 27, 30], "ebi": [22, 23, 24, 26, 27, 30], "emdb": [22, 23, 24, 26, 27, 30, 37], "2660": [22, 26, 27, 30], "packag": [22, 23, 24, 26, 28, 29, 30, 35, 40, 47, 49], "throughout": [22, 23, 24, 26, 37], "experi": [22, 23, 24, 26, 27, 30, 33, 35, 42, 46, 47], "plt": [22, 26, 27, 32, 33, 34, 35, 37, 40, 43, 45], "getlogg": [22, 23, 24, 26, 32, 34, 35, 36, 38, 40, 42, 43], "__name__": [22, 23, 24, 26, 32, 34, 35, 36, 38, 40, 42, 43], "interact": [22, 26, 27, 37], "draw": [22, 26], "do_cov2d": [22, 26], "2000": [22, 23, 24, 26, 39], "mani": [22, 23, 24, 26, 32, 33, 34, 36, 46], "starfile_in": [22, 23, 24, 50], "shiny_2sets_fixed9": 22, "volume_output_filenam": [22, 23, 24], "10028_abinitio_c": 22, "_m": [22, 23, 24, 26], "34": [22, 30, 32], "chosen": [22, 23, 24, 30, 37], "peek": [22, 26, 27, 33, 34, 38], "aiso_noise_estim": [22, 24, 26, 27], "profil": [22, 26, 33, 37], "inspect": [22, 26, 27], "imshow": [22, 26, 32, 33, 34, 35, 37, 40, 43, 45], "convent": 22, "anywai": 22, "speed": [22, 24, 33, 36], "remaind": [22, 26], "classification_src": [22, 26], "custom_averag": 22, "cwf_denois": [22, 26], "speedup": [22, 26], "demonstr": [22, 23, 25, 26, 27, 29, 31, 32, 33, 34, 37, 39, 41, 43], "avg": [22, 23, 24, 26, 30, 34], "parallel": [22, 24, 26, 37], "experimental_10028_class_averag": 22, "cl": [22, 23, 24, 26], "orient_est": [22, 23, 24, 26, 30, 42], "72": [22, 23, 24, 30, 32], "rots_est": [22, 23, 24, 26, 30, 42], "estimated_volum": [22, 23, 24, 26, 30], "script": [22, 23, 24, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 48, 50], "minut": [22, 23, 24, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 48], "000": [22, 23, 24, 26, 37], "experimental_abinitio_pipeline_10028": 22, "py": [22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45], "ipynb": [22, 23, 24, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45], "galleri": [22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 48], "sphinx": [22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 48], "polish": 23, "8012": 23, "shiny_correctpaths_cleanedcorruptstack": 23, "10073_abinitio_c": 23, "sklearn": 23, "assembl": 23, "network": [23, 46], "savez": 23, "experimental_10073_class_averages_class_indic": 23, "npz": 23, "experimental_10073_class_averages_selection_indic": 23, "npy": [23, 27, 39, 40], "experimental_10073_class_averages_glob": 23, "experimental_abinitio_pipeline_10073": 23, "8511": 24, "particle_stack": 24, "10081_abinitio_c": 24, "experimental_10081_class_averag": 24, "experimental_abinitio_pipeline_10081": 24, "tool": [25, 29, 33, 37, 47, 48], "initio": [25, 27, 29, 31], "empiar": [25, 26, 27, 37, 50], "10028": [25, 37], "10073": 25, "10081": 25, "num_img": [26, 27, 35, 36, 42, 43], "medium": 26, "20000": [26, 37], "129": [26, 30, 32, 40], "30000": 26, "5e": 26, "fairli": 26, "ftp": [26, 30], "pub": [26, 30], "databas": [26, 30], "emd_2660": [26, 27, 30], "gz": [26, 30], "og_v": 26, "def": [26, 27, 30, 33, 37], "noise_funct": [26, 27, 33], "f1": 26, "violet": 26, "ish": 26, "f2": 26, "custom_nois": [26, 27], "65": [26, 30, 32, 35, 43], "defocus_min": [26, 27, 30, 35, 42, 43], "5e4": [26, 35, 36, 42, 43], "defocus_max": [26, 27, 30, 35, 42, 43], "defocus_ct": [26, 27, 30, 35, 42, 43], "ctf_filter": [26, 27, 30, 35, 37, 43], "linspac": [26, 27, 30, 34, 35, 36, 38, 42, 43], "final": 26, "simulated_abinitio_pipeline_class_averag": 26, "stash": [26, 30], "later": [26, 27, 30, 33, 34, 35, 43], "remap": [26, 27, 34], "true_rot": [26, 30], "180": [26, 30, 32, 34], "mse_reg": [26, 30, 42], "fn": [26, 30], "estimated_volume_n": 26, "_c": 26, "simulated_abinitio_pipelin": [26, 30], "basic": [27, 29, 35, 36, 40, 41, 42, 44, 50], "topic": 27, "mat586": 27, "linux": [27, 28, 48], "mac": [27, 48], "anaconda": [27, 48], "instruct": [27, 48], "readm": [27, 48], "comprehens": 27, "maco": 27, "divers": 27, "platform": [27, 28, 48], "wouldn": 27, "netbook": 27, "tiger": 27, "adroit": 27, "della": 27, "modul": [27, 28, 30, 33, 47, 48, 50], "anaconda3": 27, "2020": 27, "link": [27, 46], "environ": 27, "tinker": 27, "scientif": 27, "interoper": 27, "sophist": [27, 28], "design": [27, 33, 43, 46], "exchang": 27, "descript": 27, "fundament": 27, "img_data": [27, 39], "print": [27, 28, 37], "100x100": 27, "often": [27, 37, 46], "behav": 27, "38229887": 27, "55409384": 27, "15769736": 27, "69234929": 27, "57583895": 27, "70847272": 27, "50926075": 27, "52141428": 27, "11485996": 27, "17939128": 27, "86974964": 27, "36835034": 27, "71175066": 27, "79680887": 27, "58201521": 27, "3956752": 27, "34885281": 27, "27812652": 27, "20594021": 27, "22441702": 27, "3566536": 27, "26262359": 27, "63788692": 27, "18022401": 27, "72883259": 27, "20076218": 27, "6741106": 27, "0248655": 27, "4787772": 27, "31604728": 27, "74468691": 27, "64176966": 27, "70711463": 27, "08316752": 27, "04118787": 27, "56105326": 27, "01512668": 27, "01753513": 27, "1966889": 27, "24458375": 27, "23761611": 27, "36394374": 27, "10314594": 27, "15884074": 27, "65114716": 27, "41600924": 27, "50505872": 27, "52556461": 27, "12595024": 27, "69921626": 27, "27778572": 27, "08264599": 27, "50160082": 27, "95467099": 27, "75143857": 27, "07837103": 27, "91745034": 27, "78555183": 27, "09711339": 27, "79898581": 27, "00438537": 27, "14705819": 27, "06758828": 27, "17944226": 27, "50565845": 27, "40090514": 27, "62299861": 27, "96389976": 27, "43351566": 27, "56457813": 27, "62011188": 27, "57048012": 27, "31243204": 27, "84541958": 27, "81205921": 27, "25398817": 27, "27955491": 27, "15113667": 27, "00177831": 27, "285361": 27, "43982087": 27, "80414185": 27, "0874887": 27, "81650229": 27, "76265771": 27, "98468138": 27, "30943181": 27, "58222221": 27, "6421066": 27, "1479219": 27, "85475845": 27, "18747685": 27, "52416701": 27, "60340148": 27, "88213638": 27, "94379662": 27, "08598547": 27, "82421695": 27, "64247771": 27, "31949309": 27, "13357652": 27, "50728318": 27, "76897238": 27, "20291649": 27, "04352893": 27, "70822419": 27, "76012976": 27, "11003625": 27, "responsibli": 27, "ask": [27, 28], "ten": [27, 34], "special": [27, 50], "similarli": [27, 28], "repo": [27, 48], "file_path": [27, 30, 32, 35, 38, 39, 40, 42, 43, 45], "join": [27, 28, 30, 32, 35, 37, 38, 39, 40, 42, 43, 45], "getcwd": [27, 30, 32, 35, 38, 39, 40, 42, 43, 45], "clean70sribosome_vol_65p": [27, 35, 38, 42, 43], "interest": [27, 36], "pdbe": 27, "unzip": 27, "simplifi": 27, "thing": [27, 33, 34], "quit": 27, "ship": [27, 28, 33, 48], "good": [27, 37, 40, 50], "v2": 27, "vol_d": 27, "short": [27, 29], "voxel": 27, "quick": [27, 30], "orthograph": 27, "orthographic_project": 27, "bring": [27, 30, 33, 46], "manual": [27, 37, 43, 48], "sai": [27, 33], "rodrigu": 27, "num_rot": 27, "12345": [27, 38], "34373102": 27, "62564886": 27, "7002946": 27, "61950386": 27, "7115173": 27, "33159938": 27, "70573646": 27, "3198542": 27, "63216245": 27, "3189953": 27, "88963485": 27, "3267902": 27, "67460066": 27, "02905637": 27, "7376108": 27, "6656996": 27, "45574725": 27, "5908794": 27, "65x65": 27, "neat": 27, "tutori": [27, 28, 30, 33, 37, 39, 47, 48], "systemat": 27, "section": [27, 28, 37, 40, 43], "advanc": [27, 34, 46, 48], "omit": 27, "diagram": 27, "ffb": [27, 35, 40], "slower": [27, 37], "recent": 27, "laplacian": 27, "eigenfunct": 27, "incomplet": 27, "slate": 27, "releas": [27, 46], "ostensibli": 27, "notabl": 27, "wide": 27, "varieti": [27, 33, 38], "higher": [27, 37], "bracket": 27, "syntax": [27, 43], "familiar": 27, "opaqu": [27, 46], "ideal": [27, 37], "creation": 27, "lo": 27, "had": 27, "recreat": 27, "distinct": [27, 46], "42": [27, 30, 32, 43], "1374932": 27, "9594606": 27, "24603027": 27, "9659938": 27, "07497529": 27, "24745627": 27, "21897836": 27, "27168727": 27, "93714166": 27, "37807834": 27, "132081": 27, "9163031": 27, "40860063": 27, "8643426": 27, "29318497": 27, "83072394": 27, "48524892": 27, "27282083": 27, "86643094": 27, "48816934": 27, "10482421": 27, "09854265": 27, "37300435": 27, "92258173": 27, "48947603": 27, "7890237": 27, "37128803": 27, "35693905": 27, "45857018": 27, "81382304": 27, "47638273": 27, "6600464": 27, "58085996": 27, "803526": 27, "5950228": 27, "01714141": 27, "15889233": 27, "93312883": 27, "32252717": 27, "87645537": 27, "01707341": 27, "48118034": 27, "45450988": 27, "35913652": 27, "8151329": 27, "32674402": 27, "8130629": 27, "48183718": 27, "38360518": 27, "58002734": 27, "7186204": 27, "8637624": 27, "04996968": 27, "5014156": 27, "34698084": 27, "1871273": 27, "9190145": 27, "5046363": 27, "78870445": 27, "35112315": 27, "79053557": 27, "5856011": 27, "1792341": 27, "8140751": 27, "09364705": 27, "57315964": 27, "37379512": 27, "6708314": 27, "64051735": 27, "44447604": 27, "7356735": 27, "5111023": 27, "45521852": 27, "5792567": 27, "6761936": 27, "29612732": 27, "81470734": 27, "49855846": 27, "8396932": 27, "02671366": 27, "54240364": 27, "93491715": 27, "32658473": 27, "13882485": 27, "21361442": 27, "83031636": 27, "5147267": 27, "28337044": 27, "45157185": 27, "84604025": 27, "43646738": 27, "00271971": 27, "89971596": 27, "24721187": 27, "9618694": 27, "11701906": 27, "865091": 27, "27349547": 27, "420497": 27, "06204434": 27, "68872344": 27, "7223645": 27, "9629127": 27, "23171897": 27, "13822247": 27, "26258263": 27, "686998": 27, "6775574": 27, "9549782": 27, "15465972": 27, "2531738": 27, "02725631": 27, "8954967": 27, "44423273": 27, "2954212": 27, "417332": 27, "8593953": 27, "9362025": 27, "29906207": 27, "1846258": 27, "32780164": 27, "553521": 27, "7656113": 27, "12677105": 27, "77728784": 27, "6162408": 27, "8579973": 27, "321847": 27, "40031877": 27, "46083617": 27, "13809928": 27, "8766748": 27, "2268714": 27, "93666595": 27, "26680756": 27, "88663757": 27, "37402767": 27, "27198744": 27, "45935175": 27, "64413124": 27, "6116297": 27, "05357084": 27, "6672318": 27, "7429212": 27, "74606377": 27, "6106348": 27, "26554468": 27, "55859023": 27, "35687232": 27, "748745": 27, "36244422": 27, "7069422": 27, "60734415": 27, "16853625": 27, "61572605": 27, "7697252": 27, "9855458": 27, "11886839": 27, "12070518": 27, "01717467": 27, "7789427": 27, "6268599": 27, "7561905": 27, "33249253": 27, "563582": 27, "5429612": 27, "79951745": 27, "2568366": 27, "3651974": 27, "50022054": 27, "785118": 27, "77301854": 27, "58071446": 27, "25536844": 27, "25237784": 27, "08780504": 27, "9636367": 27, "5820204": 27, "8093584": 27, "07868452": 27, "28316504": 27, "7468036": 27, "6017491": 27, "8560133": 27, "08614567": 27, "5097256": 27, "43250299": 27, "6594417": 27, "6148803": 27, "14112386": 27, "9097205": 27, "3905032": 27, "8198382": 27, "3284985": 27, "46899253": 27, "5549318": 27, "2539634": 27, "7921826": 27, "456592": 27, "85562974": 27, "2437653": 27, "4374926": 27, "02264298": 27, "89893687": 27, "7746767": 27, "5170929": 27, "36399308": 27, "90090746": 27, "11707234": 27, "4179232": 27, "10193092": 27, "8789243": 27, "4659422": 27, "4218718": 27, "4623701": 27, "7798962": 27, "3212181": 27, "4951543": 27, "80724293": 27, "94361854": 27, "2393791": 27, "22865206": 27, "08001903": 27, "8351765": 27, "54412967": 27, "97377276": 27, "06877314": 27, "21687981": 27, "22443582": 27, "13386007": 27, "96525127": 27, "03735181": 27, "98861104": 27, "14578445": 27, "3553472": 27, "9034085": 27, "23996124": 27, "5433438": 27, "4085248": 27, "7334064": 27, "76059574": 27, "13023247": 27, "63602954": 27, "61806667": 27, "37726": 27, "68968725": 27, "56937826": 27, "8197457": 27, "06184895": 27, "54203504": 27, "4309197": 27, "7214612": 27, "29776493": 27, "94447404": 27, "13894197": 27, "9458294": 27, "31160298": 27, "09116108": 27, "129394": 27, "10427082": 27, "9860957": 27, "19716634": 27, "21056637": 27, "9574901": 27, "7070152": 27, "64604855": 27, "2876643": 27, "6791575": 27, "73367774": 27, "0214946": 27, "5650243": 27, "2975922": 27, "7695365": 27, "7782365": 27, "11755076": 27, "616871": 27, "27403557": 27, "94742846": 27, "16517805": 27, "28065482": 27, "8733582": 27, "39809337": 27, "47991556": 27, "4868837": 27, "72981185": 27, "83121234": 27, "013774": 27, "55578446": 27, "8024307": 27, "02780645": 27, "5960972": 27, "1587728": 27, "9529598": 27, "25818375": 27, "5752358": 27, "30181855": 27, "7602692": 27, "32265848": 27, "30083787": 27, "8974342": 27, "05781392": 27, "9526389": 27, "29855752": 27, "94474816": 27, "04444793": 27, "32476965": 27, "4935579": 27, "7422682": 27, "4532532": 27, "85551316": 27, "5081454": 27, "09942588": 27, "15651786": 27, "4368365": 27, "8858194": 27, "8976416": 27, "2857157": 27, "33556828": 27, "41022733": 27, "26334086": 27, "8731352": 27, "1610996": 27, "92142177": 27, "35359412": 27, "9217232": 27, "19335265": 27, "3362159": 27, "33698434": 27, "02991741": 27, "9410348": 27, "19201028": 27, "9806731": 27, "03758125": 27, "24043691": 27, "61969984": 27, "74710256": 27, "35552713": 27, "7724179": 27, "5262804": 27, "90321124": 27, "13907799": 27, "40603787": 27, "79218084": 27, "47242948": 27, "38634163": 27, "16552027": 27, "4430016": 27, "88110876": 27, "5874117": 27, "76194483": 27, "27274075": 27, "71742296": 27, "624828": 27, "30804914": 27, "68107444": 27, "7220424": 27, "12162399": 27, "14643046": 27, "29706025": 27, "9435642": 27, "87354153": 27, "40243074": 27, "27381516": 27, "33415928": 27, "9048438": 27, "26380917": 27, "35392484": 27, "13895038": 27, "9248946": 27, "48421115": 27, "11260304": 27, "8676751": 27, "27090228": 27, "96224743": 27, "02630238": 27, "83195645": 27, "24779108": 27, "49643534": 27, "10466753": 27, "18718329": 27, "9767329": 27, "49893624": 27, "83970237": 27, "21438888": 27, "86029494": 27, "509767": 27, "00550296": 27, "62265253": 27, "1254365": 27, "7723791": 27, "46602726": 27, "7334752": 27, "49480575": 27, "6285876": 27, "66804177": 27, "39824337": 27, "07320143": 27, "99607444": 27, "04977208": 27, "4329861": 27, "01321644": 27, "9013037": 27, "8984234": 27, "08752733": 27, "43031895": 27, "06439321": 27, "97830254": 27, "19692044": 27, "938444": 27, "12647285": 27, "32144594": 27, "33937648": 27, "16409987": 27, "92622614": 27, "32914323": 27, "8692355": 27, "36890975": 27, "34743685": 27, "2517924": 27, "9032653": 27, "87803894": 27, "4254765": 27, "21912868": 27, "03135481": 27, "12190165": 27, "99204683": 27, "20567426": 27, "9705069": 27, "12575543": 27, "97811806": 27, "20798153": 27, "00535803": 27, "7707965": 27, "4763445": 27, "42304692": 27, "4696665": 27, "8735372": 27, "12785189": 27, "43044877": 27, "10014319": 27, "89704245": 27, "62561727": 27, "6937239": 27, "3568615": 27, "5623879": 27, "08402125": 27, "8225936": 27, "54066896": 27, "7153234": 27, "44270706": 27, "0384063": 27, "82296616": 27, "5667907": 27, "98650855": 27, "12155963": 27, "10965481": 27, "15914106": 27, "5549324": 27, "8165318": 27, "71410507": 27, "68704677": 27, "13424107": 27, "28213766": 27, "45796394": 27, "8430109": 27, "6406655": 27, "5641239": 27, "52087617": 27, "6900714": 27, "31053716": 27, "65373397": 27, "5909326": 27, "76325965": 27, "26121518": 27, "41785175": 27, "56656986": 27, "7102102": 27, "56709814": 27, "23533636": 27, "7893139": 27, "71543354": 27, "3340903": 27, "6136274": 27, "40811095": 27, "9126886": 27, "02109447": 27, "12042121": 27, "97353137": 27, "1942559": 27, "98601013": 27, "09457708": 27, "13725594": 27, "1152508": 27, "20806682": 27, "9713009": 27, "26161245": 27, "60064805": 27, "75550044": 27, "5359779": 27, "74138415": 27, "40382826": 27, "80267465": 27, "29928502": 27, "51588935": 27, "4752947": 27, "37172344": 27, "7974438": 27, "1643763": 27, "852889": 27, "4955409": 27, "86433524": 27, "36660883": 27, "3442711": 27, "83131063": 27, "47794443": 27, "28371063": 27, "4780851": 27, "35454985": 27, "80357265": 27, "28347355": 27, "80365634": 27, "5232392": 27, "5751311": 27, "03900156": 27, "817131": 27, "27594915": 27, "93107": 27, "23866446": 27, "7701144": 27, "36274996": 27, "5247249": 27, "6807762": 27, "6099538": 27, "4055862": 27, "07149926": 27, "6063983": 27, "79194": 27, "7289936": 27, "51013476": 27, "45643273": 27, "27400538": 27, "6167242": 27, "73795146": 27, "63375145": 27, "46136382": 27, "6208885": 27, "72338104": 27, "63780457": 27, "2644337": 27, "02657236": 27, "9912923": 27, "12897094": 27, "27007505": 27, "11709963": 27, "955692": 27, "96247256": 27, "06022682": 27, "2646117": 27, "75919664": 27, "46289822": 27, "4575431": 27, "21626568": 27, "4836275": 27, "84813535": 27, "61388075": 27, "7428524": 27, "2670594": 27, "13419726": 27, "7730551": 27, "6199814": 27, "01575051": 27, "62389755": 27, "7813474": 27, "99082947": 27, "11461972": 27, "07154934": 27, "7969387": 27, "5938283": 27, "11070973": 27, "44239753": 27, "6985636": 27, "5623996": 27, "41130662": 27, "39922032": 27, "8194205": 27, "2271311": 27, "6608967": 27, "71528107": 27, "9729143": 27, "12155605": 27, "19662634": 27, "04300295": 27, "74056715": 27, "670605": 27, "8058346": 27, "03859079": 27, "5908818": 27, "50750047": 27, "4691095": 27, "7227583": 27, "3050801": 27, "88229644": 27, "35843983": 27, "84541976": 27, "47147918": 27, "25094387": 27, "48244947": 27, "47254407": 27, "737526": 27, "22914612": 27, "74458677": 27, "62696296": 27, "17157505": 27, "919783": 27, "35293233": 27, "95262057": 27, "24622187": 27, "17857464": 27, "25114956": 27, "30557165": 27, "9184497": 27, "03022777": 27, "19667654": 27, "98000234": 27, "96350527": 27, "25516328": 27, "0809276": 27, "26597717": 27, "9466837": 27, "18178587": 27, "9041375": 27, "4069089": 27, "1302327": 27, "2578785": 27, "276723": 27, "9257014": 27, "34063777": 27, "8705455": 27, "3551287": 27, "76876014": 27, "6344005": 27, "0808938": 27, "632561": 27, "7356355": 27, "24229503": 27, "09420373": 27, "23743702": 27, "96682435": 27, "04193976": 27, "00535577": 27, "9991058": 27, "7404277": 27, "6712408": 27, "03467938": 27, "6708263": 27, "74122": 27, "02418612": 27, "6622805": 27, "6703488": 27, "33468935": 27, "2214073": 27, "6018422": 27, "7673101": 27, "7157956": 27, "43407184": 27, "5470085": 27, "00894121": 27, "96657425": 27, "2562309": 27, "2980998": 27, "24716657": 27, "92197895": 27, "9544928": 27, "06813876": 27, "29034555": 27, "09509465": 27, "9904526": 27, "09980346": 27, "64432764": 27, "13766429": 27, "75225693": 27, "75881416": 27, "00722948": 27, "6512671": 27, "93059725": 27, "34470695": 27, "12314969": 27, "2402517": 27, "32136244": 27, "91597235": 27, "27616635": 27, "8819883": 27, "38187546": 27, "48192862": 27, "10002194": 27, "87048286": 27, "66315746": 27, "60768265": 27, "43697143": 27, "57268405": 27, "7878562": 27, "22652936": 27, "90507764": 27, "29453734": 27, "30672824": 27, "39986134": 27, "83494043": 27, "37813416": 27, "14472517": 27, "46488953": 27, "87346": 27, "48447588": 27, "70774704": 27, "51417625": 27, "8526892": 27, "25072426": 27, "4583214": 27, "19545916": 27, "66047823": 27, "7249581": 27, "64288104": 27, "45185107": 27, "6184938": 27, "23015156": 27, "6562045": 27, "71862775": 27, "73057115": 27, "6043395": 27, "31786725": 27, "30517054": 27, "8374807": 27, "4533178": 27, "89213204": 27, "0849021": 27, "44372523": 27, "33312368": 27, "53983116": 27, "773053": 27, "32206497": 27, "9112062": 27, "25686076": 27, "869473": 27, "17734958": 27, "46104652": 27, "37455428": 27, "37182042": 27, "8493872": 27, "3610673": 27, "7101037": 27, "6044693": 27, "7567135": 27, "60192007": 27, "2551017": 27, "5449909": 27, "36530122": 27, "7546787": 27, "27847555": 27, "90301734": 27, "3271255": 27, "5723424": 27, "11749125": 27, "811554": 27, "7712817": 27, "41322574": 27, "48411667": 27, "3412885": 27, "83527166": 27, "43109557": 27, "17580529": 27, "50726277": 27, "84366876": 27, "9233714": 27, "21214558": 27, "3199681": 27, "2919039": 27, "9513335": 27, "09877586": 27, "5871929": 27, "25977072": 27, "76663136": 27, "75498116": 27, "16578221": 27, "63444436": 27, "1322668": 27, "75247324": 27, "645205": 27, "2528478": 27, "60377645": 27, "75599074": 27, "9584224": 27, "26313114": 27, "11040162": 27, "62349445": 27, "19195779": 27, "75789636": 27, "7480926": 27, "13520728": 27, "6496741": 27, "2271831": 27, "9720449": 27, "05930121": 27, "33402812": 27, "42084855": 27, "84339297": 27, "6074924": 27, "7802727": 27, "14875284": 27, "720679": 27, "4626672": 27, "5162954": 27, "7137928": 27, "55692726": 27, "424655": 27, "4062189": 27, "8231522": 27, "39674512": 27, "57051384": 27, "11069094": 27, "8137945": 27, "04948919": 27, "98905236": 27, "13901873": 27, "8053667": 27, "04280363": 27, "59122956": 27, "5907075": 27, "14122052": 27, "7944315": 27, "87180173": 27, "4881775": 27, "04055187": 27, "41275278": 27, "6874722": 27, "597509": 27, "26381218": 27, "5376473": 27, "8008361": 27, "44658735": 27, "04983776": 27, "89335096": 27, "64957654": 27, "6685733": 27, "3620222": 27, "615313": 27, "74197435": 27, "26620296": 27, "68048185": 27, "72213393": 27, "12436624": 27, "31681323": 27, "13690118": 27, "938556": 27, "6607373": 27, "67807126": 27, "32194036": 27, "29298428": 27, "08057309": 27, "95271623": 27, "15083717": 27, "98785996": 27, "03715903": 27, "94414425": 27, "132818": 27, "30158085": 27, "19727235": 27, "42594904": 27, "8829785": 27, "97395647": 27, "18783951": 27, "12698455": 27, "1117693": 27, "8850332": 27, "4519114": 27, "58162045": 27, "6032319": 27, "545737": 27, "80308783": 27, "53260213": 27, "2671795": 27, "12948951": 27, "59367186": 27, "7942205": 27, "43661723": 27, "6471804": 27, "62491834": 27, "77699894": 27, "621401": 27, "10066503": 27, "45347333": 27, "4416088": 27, "77417284": 27, "05435671": 27, "76187783": 27, "64543587": 27, "69972587": 27, "49019638": 27, "51970303": 27, "71234053": 27, "42337883": 27, "5597511": 27, "sim_even": 27, "sim_odd": 27, "shuffl": [27, 34], "shuffled_ind": 27, "sim_shuffled_subset": 27, "underneath": 27, "reli": [27, 36, 48], "direcli": 27, "target_noise_vari": 27, "white_noise_add": [27, 38], "791403467902967e": 27, "09": [27, 30, 32], "easi": 27, "rather": 27, "let": [27, 30, 33, 34], "know": [27, 36, 37, 46], "proce": 27, "noise_estim": [27, 33, 36, 45], "00": [27, 28, 30, 31, 32, 33, 34, 36, 37, 43, 44, 45], "99it": [27, 30, 34], "783558076899453e": 27, "execut": [27, 31, 44, 50], "54it": [27, 30, 32], "53it": [27, 30, 32], "still": [27, 46], "dramat": [27, 46], "awar": 27, "25000": [27, 30], "accessor": 27, "uncorrupt": 27, "abl": [27, 28], "five": 27, "try": [27, 28, 33, 45], "sample_relion_data": [27, 37, 45, 50], "explor": 27, "cacheabl": 27, "focus": 27, "flow": 27, "move": [27, 33, 40], "exhaust": [27, 37], "meanvolumeestim": 27, "281": [27, 31], "aspire_introduct": [27, 31], "confus": 28, "librari": [28, 48], "config_default": 28, "yaml": 28, "mkl": 28, "log_dir": 28, "subfold": 28, "log_except": 28, "prefix": 28, "log_prefix": 28, "appear": 28, "timestamp": 28, "tmp": [28, 37], "temp_dir": 28, "dev": [28, 48], "shm": 28, "scratch": 28, "home": [28, 33, 36], "preced": [28, 50], "content": [28, 49], "enviorn": 28, "aspiredir": 28, "my_proj": 28, "aspire_log": 28, "export": 28, "pwd": 28, "set_fil": 28, "some_experimental_config": 28, "Or": [28, 39], "sleep": 28, "33": [28, 30, 32, 42, 43], "01": [28, 30, 32, 34, 36, 43, 44], "02": [28, 30, 32, 34, 36, 37], "67": [28, 30, 32], "03": [28, 30, 32, 34, 36, 37, 44], "config_dir": 28, "startup": 28, "snapshot": 28, "as_filenam": 28, "runner": [28, 33, 36], "dump": 28, "destin": 28, "elsewher": 28, "stream": [28, 30], "sens": 28, "modif": 28, "dt": 28, "howto": 28, "knowledg": 28, "conf": 28, "handler": 28, "consolehandl": 28, "formatt": 28, "simpleformatt": 28, "logger_root": 28, "handler_consolehandl": 28, "sy": 28, "stdout": 28, "handler_filehandl": 28, "dt_stamp": 28, "formatter_simpleformatt": 28, "asctim": 28, "levelnam": 28, "expos": [28, 34, 46], "981": [28, 31], "newcom": 29, "overview": 29, "80": [30, 32, 34, 39], "ribosom": [30, 35, 40, 42, 43], "url": [30, 47, 50], "save_path": 30, "chunk_siz": 30, "wb": 30, "fd": 30, "iter_cont": 30, "original_vol": 30, "41": [30, 32, 44], "downsampled_80s_ribosome_s": 30, "feed": 30, "class_averag": [30, 34, 44], "2500": [30, 37], "76it": [30, 32, 34], "40": [30, 32, 34, 43], "79it": [30, 32], "60": [30, 32, 34, 36, 38], "80it": [30, 32, 34], "81it": [30, 32], "89it": [30, 32, 34], "85it": [30, 32, 34], "customiz": [30, 34, 46], "protocol": 30, "notion": 30, "were": [30, 32, 33, 37, 40, 46], "91": [30, 32], "95": [30, 32], "77it": [30, 32], "78it": [30, 32, 34], "96it": [30, 32, 34], "88it": [30, 32], "31it": [30, 32], "75it": [30, 32], "92it": [30, 32, 34], "70": [30, 32, 34, 35, 40, 42, 43], "05it": 30, "20it": [30, 32], "90": [30, 32, 34, 36], "29it": [30, 32, 34], "32it": [30, 32], "60it": [30, 32], "19": [30, 32], "37it": 30, "18": [30, 32], "82it": [30, 34], "10it": [30, 32], "04it": 30, "22it": [30, 32], "13it": [30, 32], "emploi": [30, 50], "61it": [30, 34], "45it": [30, 32, 36, 45], "24it": [30, 32], "30it": [30, 32], "42it": [30, 32], "39it": [30, 32, 36], "33it": [30, 32], "36it": [30, 32, 34], "13": [30, 32, 34, 37], "19it": [30, 32, 34], "21it": [30, 32], "17": [30, 32, 35, 44], "28it": 30, "23it": [30, 32], "26it": [30, 32], "27it": 30, "24": [30, 32, 37], "25": [30, 31, 32, 34, 35, 45], "40it": [30, 32], "29": [30, 32, 36], "43it": [30, 32], "31": [30, 32, 37], "36": [30, 32, 42], "37": [30, 32], "38": [30, 32, 43], "25it": 30, "39": [30, 32], "47it": [30, 32], "44": [30, 32], "48it": [30, 32], "45": [30, 32, 37, 43], "41it": [30, 32], "47": [30, 32, 43], "48": [30, 32, 37], "49": [30, 32], "51": [30, 32], "52": [30, 32], "53": [30, 32], "54": [30, 32], "17it": [30, 32], "55": [30, 32], "56": [30, 32], "16it": [30, 32], "57": [30, 32], "58": [30, 32], "59": [30, 32], "34it": 30, "61": [30, 32], "62": [30, 32], "63": [30, 32, 45], "66": [30, 32], "38it": [30, 32], "68": [30, 32], "69": [30, 32], "71": [30, 32], "73": [30, 32], "74": [30, 32], "75": [30, 32, 34], "76": [30, 32], "77": [30, 32], "78": [30, 32], "35it": [30, 34], "79": [30, 32], "82": [30, 32], "83": [30, 32], "84": [30, 32], "85": [30, 32], "86": [30, 32], "87": [30, 32], "88": [30, 32], "89": [30, 32], "92": [30, 32, 36], "93": [30, 32], "94": [30, 32], "96": [30, 32], "97": [30, 32], "98": [30, 32, 36], "101": [30, 32], "102": [30, 32], "103": [30, 32], "104": [30, 32], "105": [30, 32], "14it": [30, 32], "106": [30, 32], "107": [30, 32], "108": [30, 32], "109": [30, 32], "110": [30, 32], "111": [30, 32], "112": [30, 32], "113": [30, 32], "114": [30, 32], "115": [30, 32], "116": [30, 32], "117": [30, 32], "118": [30, 32], "119": [30, 32], "120": [30, 32], "121": [30, 32], "122": [30, 32], "123": [30, 32, 33, 34, 50], "124": [30, 32], "125": [30, 32], "126": [30, 32], "127": [30, 32], "128": [30, 32, 33, 42], "130": [30, 32], "131": [30, 32], "132": [30, 32], "133": [30, 32], "134": [30, 32], "135": [30, 32], "136": [30, 32], "137": [30, 32], "138": [30, 32], "139": [30, 32], "140": [30, 32], "141": [30, 32], "142": [30, 32], "144": [30, 31, 32], "145": [30, 32], "03it": [30, 32, 34], "146": [30, 32], "98it": [30, 32, 33, 34], "09it": [30, 32], "148": [30, 32], "12it": [30, 32], "149": [30, 32], "150": [30, 32], "151": [30, 32], "152": [30, 32], "153": [30, 32], "154": [30, 32], "155": [30, 32], "156": [30, 32], "157": [30, 32], "158": [30, 32], "159": [30, 32], "160": [30, 32], "161": [30, 32], "162": [30, 32], "163": [30, 32], "164": [30, 32], "165": [30, 32], "166": [30, 32], "167": [30, 32], "168": [30, 32], "170": [30, 32], "171": [30, 32], "172": [30, 32], "173": [30, 32], "174": [30, 32], "175": [30, 32], "176": [30, 32], "178": [30, 32], "179": [30, 32], "181": [30, 32], "182": [30, 32], "183": [30, 32], "184": [30, 32], "185": [30, 32], "186": [30, 32], "187": [30, 32], "188": [30, 32], "189": [30, 32], "51it": [30, 32], "190": [30, 32], "50it": [30, 32], "191": [30, 32], "192": [30, 32], "193": [30, 32], "194": [30, 32], "196": [30, 32], "197": [30, 32], "198": [30, 32], "199": [30, 32], "15it": [30, 32], "84it": [30, 32], "90it": [30, 32], "01it": [30, 32, 34], "56it": [30, 32], "07it": [30, 32], "70it": [30, 32], "08it": [30, 32], "06it": [30, 32], "18it": [30, 32], "62it": [30, 32, 34], "46it": [30, 32, 34], "52it": [30, 32], "55it": [30, 32], "00it": [30, 34], "87it": 30, "94it": [30, 32, 34], "73it": [30, 32], "57it": [30, 32], "63it": [30, 32], "65it": [30, 32, 34], "032957152189134344": 30, "meta": 30, "71it": [30, 32], "69it": [30, 32, 34], "49it": [30, 32], "44it": [30, 32], "95it": 30, "58it": [30, 32], "67it": [30, 32, 34], "83it": [30, 32], "59it": [30, 32], "97it": [30, 33, 34], "74it": [30, 32], "confirm": [30, 37], "projections_est": 30, "pipeline_demo": [30, 31], "406": 31, "auto_tutori": 31, "mb": [31, 44], "introduct": [31, 47], "raw": 32, "dirnam": [32, 35, 38, 39, 40, 42, 43, 45], "falcon_2012_06_12": 32, "14_33_35_0": 32, "titl": [32, 33, 34, 35, 37, 40, 43, 45], "cmap": [32, 33, 34, 35, 37, 40, 43, 45], "grai": [32, 33, 34, 35, 37, 40, 43, 45], "apple_pick": [32, 44], "710": 32, "7100": 32, "particles_img": 32, "64it": 32, "11it": 32, "72it": 32, "68it": [32, 34], "91it": 32, "66it": [32, 34], "201": 32, "202": 32, "203": 32, "205": 32, "206": 32, "207": 32, "208": 32, "209": 32, "210": 32, "211": 32, "212": 32, "213": 32, "214": 32, "216": 32, "217": 32, "218": 32, "219": [32, 42, 44], "220": 32, "221": 32, "222": 32, "223": 32, "224": 32, "225": 32, "226": 32, "228": 32, "229": 32, "230": 32, "231": 32, "232": 32, "233": 32, "234": 32, "236": 32, "237": 32, "238": 32, "239": 32, "240": 32, "241": 32, "242": 32, "243": 32, "244": 32, "245": 32, "246": 32, "247": 32, "248": 32, "249": 32, "251": 32, "252": 32, "253": 32, "254": 32, "255": 32, "observ": 32, "img_dim": 32, "782": [32, 44], "portrait": 33, "grayscal": 33, "stock_img": 33, "n_pixel": 33, "basic_image_arrai": [33, 44], "deprecationwarn": [33, 36], "v1": 33, "toolkit": 33, "light": 33, "new_resolut": 33, "prescib": 33, "img_with_nois": 33, "fig": [33, 37], "subplot": [33, 34, 35, 37, 40, 43, 45], "cm": 33, "set_titl": [33, 37], "tight_layout": [33, 34, 35, 40, 43, 45], "great": 33, "enough": 33, "imgs_data": 33, "kind": 33, "And": [33, 38, 47, 50], "imgs_with_nois": 33, "slightli": 33, "enumer": [33, 34, 37], "img_with_noise_f": 33, "imgs_src": 33, "orgin": 33, "further": [33, 35, 37, 46], "noisy_imgs_copi": 33, "charact": 33, "corner": [33, 37], "crude": 33, "stackoverflow": 33, "question": 33, "21242011": 33, "radial_profil": 33, "binsum": 33, "bincount": 33, "ravel": 33, "pickout": 33, "color": 33, "whitened_img_with_noise_f": 33, "linestyl": 33, "gca": 33, "legend": [33, 37], "loc": 33, "bbox_to_anchor": 33, "592": [33, 44], "pil": 34, "pilimag": 34, "hint": 34, "byo": 34, "round_disc": 34, "oval_disc": 34, "richer": 34, "oval_disc2": 34, "strateg": 34, "yoval_discl": 34, "yoval_discr": 34, "flipud": 34, "concaten": [34, 40], "classround": 34, "classov": 34, "classyoval": 34, "classyovalr": 34, "asarrai": 34, "fromarrai": 34, "concatent": 34, "example_arrai": 34, "1234567": 34, "cook": 34, "nice": 34, "simplif": 34, "02it": 34, "noisy_im": 34, "recast": 34, "noisy_src": 34, "noisei": 34, "noise_src": 34, "selector": [34, 47], "review_class": 34, "neighor": 34, "original_image_idx": 34, "est_rot": 34, "est_shift": 34, "est_correl": 34, "unalign": 34, "nbr": 34, "original_img_0_idx": 34, "original_img_nbr_idx": 34, "lookup": 34, "original_img_0": 34, "original_img_nbr": 34, "rotated_img_nbr": 34, "xlabel": 34, "est": [34, 37], "wholli": 34, "easier": [34, 37], "understand": 34, "avg_src": 34, "649": [34, 44], "illustr": [35, 36, 38, 40, 42, 43], "3957e": 35, "h_idx": 35, "8x8": [35, 50], "h_ctf_fb": 35, "imgs_clean": 35, "imgs_ctf_clean": 35, "power_clean": 35, "sn_ratio": 35, "imgs_nois": 35, "exactli": 35, "orthonorm": 35, "coeff_clean": 35, "coeff_nois": 35, "constrain": 35, "consequ": 35, "constraint": 35, "undo": 35, "mean_coeff_est": 35, "covar_coeff_est": 35, "coeff_est": 35, "imgs_est": 35, "covar_coeff_diff": 35, "diff_mean": 35, "diff_covar": 35, "rmse": [35, 40], "nrmse_im": 35, "idm": [35, 43], "assert": [35, 36, 40, 42, 43], "562": [35, 44], "cov2d_simul": [35, 44], "vq": 36, "kmeans2": 36, "num_eig": 36, "num_vol": 36, "expend": 36, "mean_estim": [36, 45], "mean_kernel": 36, "covar_estim": 36, "eigs_est_trunc": 36, "lambdas_est_trunc": 36, "eigenbasi": 36, "plu": 36, "squeez": 36, "404": 36, "favour": 36, "subset_by_index": 36, "eigh": 36, "sig_len": 36, "mean_perf": 36, "closer": 36, "impos": 36, "condit": 36, "covar_perf": 36, "eigs_perf": 36, "clustering_accuraci": 36, "centroid": 36, "belong": 36, "clustered_coords_est": 36, "coords_perf": 36, "rel_err": 36, "corr": [36, 47, 50], "824": [36, 44], "cov3d_simul": [36, 44], "lectur": 37, "math586": 37, "tempfil": 37, "temporarydirectori": 37, "rcparam": 37, "ndimag": 37, "demo": 37, "radial_ctf_filt": 37, "10000a": 37, "1um": 37, "rctf_fn": 37, "horizont": [37, 43], "chose": 37, "extrem": 37, "percent": 37, "ctf_sign": 37, "generate_example_imag": 37, "g2d": 37, "smooth": 37, "blur": 37, "toward": 37, "defoci": 37, "5000": 37, "imgs_f": 37, "phase_flipped_imgs_f": 37, "empty_lik": 37, "luxuri": 37, "phase_flipped_img": 37, "incorrect": 37, "earlier": 37, "erron": 37, "bad_est_ctf_filt": 37, "14000": 37, "bad_ctf_fn": 37, "idealized_flipped_fn": 37, "incorrect_flipped_fn": 37, "ax1": 37, "ax2": 37, "sharex": 37, "sharei": 37, "suptitl": [37, 45], "test_img": 37, "radial_ctf_est": 37, "10049": 37, "428799986654": 37, "9944": 37, "074073978953": 37, "23587408389534217": 37, "previous": 37, "est_ctf": 37, "est_ctf_fn": 37, "9996": 37, "751436982802": 37, "estimated_flipped_fn": 37, "doubt": 37, "commonli": 37, "338": [37, 45, 50], "9982": 37, "aspire_ctf_valid": 37, "ctffind": 37, "welcom": 37, "compil": [37, 48], "jan": 37, "2023": 37, "diagnostic_output": 37, "acceler": [37, 48], "ye": 37, "rad": 37, "expert": 37, "resampl": 37, "openmp": 37, "0h": 37, "00m45": 37, "dfmid1": 37, "dfmid2": 37, "angast": 37, "cc": 37, "56503": 37, "diagnosi": 37, "020": 37, "035": 37, "011": 37, "pif": 37, "56568": 37, "thon": 37, "did": 37, "alias": 37, "summari": 37, "txt": 37, "diagnostic_output_avrot": 37, "ctffind_plot_result": 37, "sh": 37, "kev": 37, "um": 37, "successfulli": 37, "000000": 37, "502930": 37, "035256": 37, "565683": 37, "980663": 37, "586": [37, 44], "60x60x60": 38, "amplifi": 38, "wrt": 38, "amplif": 38, "dirty_ari": 38, "clean_ari": 38, "similari": 38, "759": [38, 44], "generating_volume_project": [38, 44], "monument": 39, "600": 39, "uint8": 39, "tell": [39, 50], "defous_u": 39, "1500": 39, "480": [39, 44], "image_class": [39, 44], "timeit": 40, "example_data_np_arrai": 40, "slowest": 40, "org_imag": 40, "fb_basi": 40, "tstart": 40, "default_tim": 40, "fb_coeff": 40, "tstop": 40, "dtime": 40, "finish": 40, "4f": 40, "fb_imag": 40, "fb_meanmax": 40, "fb_nrmse_im": 40, "ffb_basi": 40, "ffb_coeff": 40, "ffb_imag": 40, "diff": 40, "ffb_meanmax": 40, "ffb_nrmse_im": 40, "pswf_basi": 40, "pswf_coeff": 40, "pswf_imag": 40, "pswf_meanmax": 40, "pswf_nrmse_im": 40, "fpswf": 40, "fpswf_basi": 40, "fpswf_coeff": 40, "fpswf_imag": 40, "fpswf_meanmax": 40, "fpswf_nrmse_im": 40, "025": 40, "wise": 40, "985": [40, 44], "image_expans": [40, 44], "necessari": [42, 43], "rots_tru": 42, "orient3d_simul": [42, 44], "prior": [43, 46], "ds_img_siz": 43, "4e": 43, "0e5": 43, "graph": 43, "accomplish": [43, 46], "source_": 43, "That": [43, 46], "leav": 43, "untouch": 43, "imgs_od": 43, "source_pf": 43, "source_d": 43, "source_nb": 43, "source_wt": 43, "source_rc": 43, "reassign": 43, "immut": 43, "source_copi": 43, "imgs_seq_od": 43, "imgs_seq_pf": 43, "imgs_seq_d": 43, "imgs_seq_nb": 43, "imgs_seq_wt": 43, "imgs_seq_rc": 43, "imgs_chain": 43, "allclos": 43, "005": [43, 44], "preprocess_imgs_sim": [43, 44], "740": 44, "auto_tutorials_tutori": 44, "297": [44, 45], "prep": 45, "subplots_adjust": 45, "broad": 46, "solut": 46, "tailor": 46, "aggreg": 46, "togeth": 46, "cohes": 46, "jump": 46, "sensibl": 46, "input_src": 46, "broken": 46, "come": 46, "flavor": 46, "primarili": 46, "computation": 46, "classic": 46, "bandpass": 46, "mind": 46, "leverag": 46, "subcompon": 46, "criterion": 46, "mimick": 46, "intuit": 46, "fact": 46, "locu": 46, "closest": 46, "inferior": 46, "aggress": 46, "tunabl": 46, "handi": 46, "interchang": 46, "alwai": 46, "arithmet": 46, "maxim": 46, "aim": 47, "mathemat": 47, "softwar": [47, 48], "molecular": 47, "computer": 47, "tomographi": 47, "convex": 47, "nonlinear": 47, "reduct": 47, "algebra": 47, "instal": [47, 50], "conda": 47, "gpu": 47, "architectur": [47, 48], "handens18": [47, 50], "\u00e9": [47, 50], "1802": [47, 50], "00469": [47, 50], "ss12": [47, 50], "1137": [47, 50], "120863642": [47, 50], "543": [47, 50], "572": [47, 50], "090767777": [47, 50], "who": 48, "pypi": 48, "suffici": 48, "site": 48, "hardwar": 48, "although": 48, "confid": 48, "python3": 48, "miniconda": 48, "click": 48, "pip": 48, "edit": 48, "pytest": 48, "github": 48, "computationalcryoem": 48, "cd": 48, "fresh": 48, "offer": 48, "yml": 48, "intel": 48, "x86_64": 48, "amd": 48, "openbla": 48, "m1": 48, "outlin": 48, "laptop": 48, "env": 48, "aspire_acc": 48, "driver": 48, "nvidia": 48, "smi": 48, "gpu_102": 48, "gpu_110": 48, "gpu_111": 48, "gpu_11x": 48, "third": 48, "parti": 48, "repositori": 48, "tradit": 48, "noplot": 48, "traditon": 48, "pars": 48, "apidoc": 48, "distclean": 48, "subpackag": 49, "submodul": 49, "action": 50, "substitut": 50, "gb": 50, "galactosidas": 50, "falcon": 50, "ii": 50, "mkdir": 50, "apple_output": 50, "mrc_path": 50, "my": 50, "coord_path": 50, "starfile_out": 50, "my_dataset_stack": 50, "path_to_input_data_fold": 50, "preprocess_output": 50, "weiner": 50, "denoise_output": 50, "denoised_imag": 50, "contan": 50, "orient3d_output": 50, "exercis": 50, "max_resolut": 50, "cg_tol": 50, "pai": 50, "attent": 50, "long": 50, "liber": 50, "unrealist": 50, "converg": 50, "deactiv": 50, "behaviour": 50, "itself": 50}, "objects": {"": [[0, 0, 0, "-", "aspire"]], "aspire": [[1, 0, 0, "-", "abinitio"], [2, 0, 0, "-", "apple"], [3, 0, 0, "-", "basis"], [4, 0, 0, "-", "classification"], [5, 0, 0, "-", "commands"], [6, 0, 0, "-", "covariance"], [7, 0, 0, "-", "ctf"], [8, 0, 0, "-", "denoising"], [0, 0, 0, "-", "exceptions"], [9, 0, 0, "-", "image"], [10, 0, 0, "-", "noise"], [11, 0, 0, "-", "nufft"], [12, 0, 0, "-", "numeric"], [14, 0, 0, "-", "operators"], [15, 0, 0, "-", "optimization"], [16, 0, 0, "-", "reconstruction"], [17, 0, 0, "-", "source"], [18, 0, 0, "-", "storage"], [19, 0, 0, "-", "utils"], [20, 0, 0, "-", "volume"]], "aspire.abinitio": [[1, 0, 0, "-", "commonline_base"], [1, 0, 0, "-", "commonline_c3_c4"], [1, 0, 0, "-", "commonline_cn"], [1, 0, 0, "-", "commonline_ev"], [1, 0, 0, "-", "commonline_gcar"], [1, 0, 0, "-", "commonline_lud"], [1, 0, 0, "-", "commonline_sdp"], [1, 0, 0, "-", "commonline_sync"], [1, 0, 0, "-", "orientation_src"], [1, 0, 0, "-", "sync_voting"]], "aspire.abinitio.commonline_base": [[1, 1, 1, "", "CLOrient3D"]], "aspire.abinitio.commonline_base.CLOrient3D": [[1, 2, 1, "", "build_clmatrix"], [1, 2, 1, "", "estimate_rotations"], [1, 2, 1, "", "estimate_shifts"], [1, 2, 1, "", "save_rotations"]], "aspire.abinitio.commonline_c3_c4": [[1, 1, 1, "", "CLSymmetryC3C4"]], "aspire.abinitio.commonline_c3_c4.CLSymmetryC3C4": [[1, 2, 1, "", "cl_angles_to_ind"], [1, 2, 1, "", "estimate_rotations"], [1, 2, 1, "", "g_sync"]], "aspire.abinitio.commonline_cn": [[1, 1, 1, "", "CLSymmetryCn"], [1, 1, 1, "", "MeanOuterProductEstimator"]], "aspire.abinitio.commonline_cn.CLSymmetryCn": [[1, 2, 1, "", "estimate_rotations"], [1, 2, 1, "", "generate_candidate_rots"], [1, 2, 1, "", "relative_rots_to_cl_indices"]], "aspire.abinitio.commonline_cn.MeanOuterProductEstimator": [[1, 3, 1, "", "dtype"], [1, 2, 1, "", "push"], [1, 2, 1, "", "synchronized_mean"]], "aspire.abinitio.commonline_ev": [[1, 1, 1, "", "CommLineEV"]], "aspire.abinitio.commonline_ev.CommLineEV": [[1, 2, 1, "", "estimate"], [1, 2, 1, "", "output"]], "aspire.abinitio.commonline_gcar": [[1, 1, 1, "", "CommLineGCAR"]], "aspire.abinitio.commonline_gcar.CommLineGCAR": [[1, 2, 1, "", "estimate"], [1, 2, 1, "", "output"]], "aspire.abinitio.commonline_lud": [[1, 1, 1, "", "CommLineLUD"]], "aspire.abinitio.commonline_lud.CommLineLUD": [[1, 2, 1, "", "estimate"], [1, 2, 1, "", "output"]], "aspire.abinitio.commonline_sdp": [[1, 1, 1, "", "CommLineSDP"]], "aspire.abinitio.commonline_sdp.CommLineSDP": [[1, 2, 1, "", "estimate"], [1, 2, 1, "", "output"]], "aspire.abinitio.commonline_sync": [[1, 1, 1, "", "CLSyncVoting"]], "aspire.abinitio.commonline_sync.CLSyncVoting": [[1, 2, 1, "", "estimate_rotations"], [1, 2, 1, "", "syncmatrix_vote"]], "aspire.abinitio.orientation_src": [[1, 1, 1, "", "OrientEstSource"]], "aspire.abinitio.sync_voting": [[1, 1, 1, "", "SyncVotingMixin"]], "aspire.apple": [[2, 0, 0, "-", "apple"], [2, 0, 0, "-", "helper"], [2, 0, 0, "-", "picking"]], "aspire.apple.apple": [[2, 1, 1, "", "Apple"]], "aspire.apple.apple.Apple": [[2, 2, 1, "", "particle_image"], [2, 2, 1, "", "process_folder"], [2, 2, 1, "", "process_micrograph"], [2, 2, 1, "", "process_micrograph_centers"], [2, 2, 1, "", "process_micrograph_plots"], [2, 2, 1, "", "verify_input_values"]], "aspire.apple.helper": [[2, 1, 1, "", "PickerHelper"]], "aspire.apple.helper.PickerHelper": [[2, 2, 1, "", "extract_query"], [2, 2, 1, "", "extract_references"], [2, 2, 1, "", "extract_windows"], [2, 2, 1, "", "gaussian_filter"], [2, 2, 1, "", "get_training_set"], [2, 2, 1, "", "moments"], [2, 2, 1, "", "reference_size"]], "aspire.apple.picking": [[2, 1, 1, "", "Picker"]], "aspire.apple.picking.Picker": [[2, 2, 1, "", "extract_particles"], [2, 2, 1, "", "get_maps"], [2, 2, 1, "", "morphology_ops"], [2, 2, 1, "", "query_score"], [2, 2, 1, "", "read_mrc"], [2, 2, 1, "", "run_svm"]], "aspire.basis": [[3, 0, 0, "-", "basis"], [3, 0, 0, "-", "basis_utils"], [3, 0, 0, "-", "fb"], [3, 0, 0, "-", "fb_2d"], [3, 0, 0, "-", "fb_3d"], [3, 0, 0, "-", "ffb_2d"], [3, 0, 0, "-", "ffb_3d"], [3, 0, 0, "-", "fle_2d"], [3, 0, 0, "-", "fle_2d_utils"], [3, 0, 0, "-", "fpswf_2d"], [3, 0, 0, "-", "fpswf_3d"], [3, 0, 0, "-", "fspca"], [3, 0, 0, "-", "polar_2d"], [3, 0, 0, "-", "pswf_2d"], [3, 0, 0, "-", "pswf_3d"], [3, 0, 0, "-", "pswf_utils"], [3, 0, 0, "-", "steerable"]], "aspire.basis.basis": [[3, 1, 1, "", "Basis"]], "aspire.basis.basis.Basis": [[3, 2, 1, "", "evaluate"], [3, 2, 1, "", "evaluate_t"], [3, 2, 1, "", "expand"], [3, 2, 1, "", "indices"], [3, 2, 1, "", "mat_evaluate"], [3, 2, 1, "", "mat_evaluate_t"], [3, 2, 1, "", "norms"]], "aspire.basis.basis_utils": [[3, 4, 1, "", "all_besselj_zeros"], [3, 4, 1, "", "besselj_newton"], [3, 4, 1, "", "besselj_zeros"], [3, 4, 1, "", "check_besselj_zeros"], [3, 4, 1, "", "d_decay_approx_fun"], [3, 4, 1, "", "k_operator"], [3, 4, 1, "", "lgwt"], [3, 4, 1, "", "norm_assoc_legendre"], [3, 4, 1, "", "p_n"], [3, 4, 1, "", "real_sph_harmonic"], [3, 4, 1, "", "sph_bessel"], [3, 4, 1, "", "t_radial_part_mat"], [3, 4, 1, "", "t_x_derivative_mat"], [3, 4, 1, "", "t_x_mat"], [3, 4, 1, "", "t_x_mat_dot"], [3, 4, 1, "", "unique_coords_nd"]], "aspire.basis.fb": [[3, 1, 1, "", "FBBasisMixin"]], "aspire.basis.fb_2d": [[3, 1, 1, "", "FBBasis2D"]], "aspire.basis.fb_2d.FBBasis2D": [[3, 2, 1, "", "basis_norm_2d"], [3, 2, 1, "", "calculate_bispectrum"], [3, 2, 1, "", "indices"], [3, 2, 1, "", "norms"], [3, 2, 1, "", "to_complex"], [3, 2, 1, "", "to_real"]], "aspire.basis.fb_3d": [[3, 1, 1, "", "FBBasis3D"]], "aspire.basis.fb_3d.FBBasis3D": [[3, 2, 1, "", "basis_norm_3d"], [3, 2, 1, "", "indices"], [3, 2, 1, "", "norms"]], "aspire.basis.ffb_2d": [[3, 1, 1, "", "FFBBasis2D"]], "aspire.basis.ffb_2d.FFBBasis2D": [[3, 2, 1, "", "get_radial"]], "aspire.basis.ffb_3d": [[3, 1, 1, "", "FFBBasis3D"]], "aspire.basis.fle_2d": [[3, 1, 1, "", "FLEBasis2D"]], "aspire.basis.fle_2d.FLEBasis2D": [[3, 2, 1, "", "indices"], [3, 2, 1, "", "lowpass"], [3, 2, 1, "", "radial_convolve"]], "aspire.basis.fle_2d_utils": [[3, 4, 1, "", "barycentric_interp_sparse"], [3, 4, 1, "", "precomp_transform_complex_to_real"], [3, 4, 1, "", "transform_complex_to_real"]], "aspire.basis.fpswf_2d": [[3, 1, 1, "", "FPSWFBasis2D"]], "aspire.basis.fpswf_3d": [[3, 1, 1, "", "FPSWFBasis3D"]], "aspire.basis.fspca": [[3, 1, 1, "", "FSPCABasis"]], "aspire.basis.fspca.FSPCABasis": [[3, 2, 1, "", "build"], [3, 2, 1, "", "calculate_bispectrum"], [3, 2, 1, "", "eigen_images"], [3, 2, 1, "", "evaluate"], [3, 2, 1, "", "evaluate_to_image_basis"], [3, 2, 1, "", "expand"], [3, 2, 1, "", "expand_from_image_basis"], [3, 2, 1, "", "shift"], [3, 2, 1, "", "to_complex"], [3, 2, 1, "", "to_real"]], "aspire.basis.polar_2d": [[3, 1, 1, "", "PolarBasis2D"]], "aspire.basis.pswf_2d": [[3, 1, 1, "", "PSWFBasis2D"]], "aspire.basis.pswf_2d.PSWFBasis2D": [[3, 2, 1, "", "pswf_func2d"]], "aspire.basis.pswf_3d": [[3, 1, 1, "", "PSWFBasis3D"]], "aspire.basis.pswf_utils": [[3, 1, 1, "", "BNMatrix"]], "aspire.basis.pswf_utils.BNMatrix": [[3, 2, 1, "", "dense_mat"], [3, 2, 1, "", "get_eig_vectors"], [3, 2, 1, "", "shape"]], "aspire.basis.steerable": [[3, 1, 1, "", "SteerableBasis2D"]], "aspire.basis.steerable.SteerableBasis2D": [[3, 2, 1, "", "calculate_bispectrum"], [3, 2, 1, "", "complex_rotate"], [3, 2, 1, "", "rotate"], [3, 2, 1, "", "shift"]], "aspire.classification": [[4, 0, 0, "-", "averager2d"], [4, 0, 0, "-", "class2d"], [4, 0, 0, "-", "class_selection"], [4, 0, 0, "-", "legacy_implementations"], [4, 0, 0, "-", "reddy_chatterji"], [4, 0, 0, "-", "rir_class2d"]], "aspire.classification.averager2d": [[4, 1, 1, "", "AligningAverager2D"], [4, 1, 1, "", "Averager2D"], [4, 1, 1, "", "BFRAverager2D"], [4, 1, 1, "", "BFSRAverager2D"], [4, 1, 1, "", "BFSReddyChatterjiAverager2D"], [4, 1, 1, "", "EMAverager2D"], [4, 1, 1, "", "FTKAverager2D"], [4, 1, 1, "", "ReddyChatterjiAverager2D"]], "aspire.classification.averager2d.AligningAverager2D": [[4, 2, 1, "", "align"], [4, 2, 1, "", "average"]], "aspire.classification.averager2d.Averager2D": [[4, 2, 1, "", "average"]], "aspire.classification.averager2d.BFRAverager2D": [[4, 2, 1, "", "align"]], "aspire.classification.averager2d.BFSRAverager2D": [[4, 2, 1, "", "align"]], "aspire.classification.averager2d.BFSReddyChatterjiAverager2D": [[4, 2, 1, "", "align"], [4, 2, 1, "", "average"]], "aspire.classification.averager2d.ReddyChatterjiAverager2D": [[4, 2, 1, "", "align"], [4, 2, 1, "", "average"]], "aspire.classification.class2d": [[4, 1, 1, "", "Class2D"]], "aspire.classification.class2d.Class2D": [[4, 2, 1, "", "classify"]], "aspire.classification.class_selection": [[4, 1, 1, "", "BandedSNRImageQualityFunction"], [4, 1, 1, "", "BandpassImageQualityFunction"], [4, 1, 1, "", "BumpWeightedImageQualityMixin"], [4, 1, 1, "", "BumpWeightedVarianceImageQualityFunction"], [4, 1, 1, "", "ClassSelector"], [4, 1, 1, "", "DistanceClassSelector"], [4, 1, 1, "", "GlobalClassSelector"], [4, 1, 1, "", "GlobalWithRepulsionClassSelector"], [4, 1, 1, "", "GreedyClassRepulsionMixin"], [4, 1, 1, "", "ImageQualityFunction"], [4, 1, 1, "", "NeighborVarianceClassSelector"], [4, 1, 1, "", "NeighborVarianceWithRepulsionClassSelector"], [4, 1, 1, "", "RampWeightedImageQualityMixin"], [4, 1, 1, "", "RampWeightedVarianceImageQualityFunction"], [4, 1, 1, "", "RandomClassSelector"], [4, 1, 1, "", "TopClassSelector"], [4, 1, 1, "", "VarianceImageQualityFunction"], [4, 1, 1, "", "WeightedImageQualityMixin"]], "aspire.classification.class_selection.ClassSelector": [[4, 5, 1, "", "quality_scores"], [4, 2, 1, "", "select"]], "aspire.classification.class_selection.GlobalClassSelector": [[4, 5, 1, "", "heap_ids"], [4, 5, 1, "", "heap_idx_map"]], "aspire.classification.class_selection.WeightedImageQualityMixin": [[4, 2, 1, "", "weights"]], "aspire.classification.legacy_implementations": [[4, 4, 1, "", "bispec_2drot_large"], [4, 4, 1, "", "bispec_operator_1"], [4, 4, 1, "", "pca_y"]], "aspire.classification.reddy_chatterji": [[4, 4, 1, "", "reddy_chatterji_register"]], "aspire.classification.rir_class2d": [[4, 1, 1, "", "RIRClass2D"]], "aspire.classification.rir_class2d.RIRClass2D": [[4, 2, 1, "", "bispectrum"], [4, 2, 1, "", "classify"], [4, 2, 1, "", "nn_classification"], [4, 2, 1, "", "pca"]], "aspire.commands": [[5, 0, 0, "-", "apple"], [5, 0, 0, "-", "cov3d"], [5, 0, 0, "-", "denoise"], [5, 0, 0, "-", "estimate_ctf"], [5, 0, 0, "-", "extract_particles"], [5, 0, 0, "-", "orient3d"], [5, 0, 0, "-", "preprocess"]], "aspire.covariance": [[6, 0, 0, "-", "covar"], [6, 0, 0, "-", "covar2d"]], "aspire.covariance.covar": [[6, 1, 1, "", "CovarianceEstimator"]], "aspire.covariance.covar.CovarianceEstimator": [[6, 2, 1, "", "apply_kernel"], [6, 2, 1, "", "compute_kernel"], [6, 2, 1, "", "conj_grad"], [6, 2, 1, "", "estimate"], [6, 2, 1, "", "src_backward"]], "aspire.covariance.covar2d": [[6, 1, 1, "", "BatchedRotCov2D"], [6, 1, 1, "", "RotCov2D"], [6, 4, 1, "", "shrink_covar"]], "aspire.covariance.covar2d.BatchedRotCov2D": [[6, 2, 1, "", "get_covar"], [6, 2, 1, "", "get_cwf_coeffs"], [6, 2, 1, "", "get_mean"]], "aspire.covariance.covar2d.RotCov2D": [[6, 2, 1, "", "get_covar"], [6, 2, 1, "", "get_cwf_coeffs"], [6, 2, 1, "", "get_mean"], [6, 2, 1, "", "shrink_covar_backward"]], "aspire.ctf": [[7, 0, 0, "-", "ctf_estimator"]], "aspire.ctf.ctf_estimator": [[7, 1, 1, "", "CtfEstimator"], [7, 4, 1, "", "estimate_ctf"]], "aspire.ctf.ctf_estimator.CtfEstimator": [[7, 2, 1, "", "background_subtract_1d"], [7, 2, 1, "", "background_subtract_2d"], [7, 2, 1, "", "elliptical_average"], [7, 2, 1, "", "estimate_psd"], [7, 2, 1, "", "gd"], [7, 2, 1, "", "generate_ctf"], [7, 2, 1, "", "micrograph_to_blocks"], [7, 2, 1, "", "normalize_blocks"], [7, 2, 1, "", "opt1d"], [7, 2, 1, "", "pca"], [7, 2, 1, "", "preprocess_micrograph"], [7, 2, 1, "", "set_angle"], [7, 2, 1, "", "set_df1"], [7, 2, 1, "", "set_df2"], [7, 2, 1, "", "tapers"], [7, 2, 1, "", "write_star"]], "aspire.denoising": [[8, 0, 0, "-", "adaptive_support"], [8, 0, 0, "-", "class_avg"], [8, 0, 0, "-", "denoised_src"], [8, 0, 0, "-", "denoiser"], [8, 0, 0, "-", "denoiser_cov2d"]], "aspire.denoising.adaptive_support": [[8, 4, 1, "", "adaptive_support"]], "aspire.denoising.class_avg": [[8, 1, 1, "", "ClassAvgSource"], [8, 1, 1, "", "ClassAvgSourcev110"], [8, 1, 1, "", "DebugClassAvgSource"], [8, 4, 1, "", "DefaultClassAvgSource"]], "aspire.denoising.class_avg.ClassAvgSource": [[8, 5, 1, "", "class_distances"], [8, 5, 1, "", "class_indices"], [8, 5, 1, "", "class_refl"], [8, 5, 1, "", "n"], [8, 2, 1, "", "save"], [8, 5, 1, "", "selection_indices"]], "aspire.denoising.denoised_src": [[8, 1, 1, "", "DenoisedImageSource"]], "aspire.denoising.denoiser": [[8, 1, 1, "", "Denoiser"]], "aspire.denoising.denoiser.Denoiser": [[8, 2, 1, "", "denoise"], [8, 2, 1, "", "image"]], "aspire.denoising.denoiser_cov2d": [[8, 1, 1, "", "DenoiserCov2D"], [8, 4, 1, "", "src_wiener_coords"]], "aspire.denoising.denoiser_cov2d.DenoiserCov2D": [[8, 2, 1, "", "denoise"], [8, 2, 1, "", "images"]], "aspire.exceptions": [[0, 6, 1, "", "AspireException"], [0, 6, 1, "", "DimensionsIncompatible"], [0, 6, 1, "", "ErrorTooBig"], [0, 6, 1, "", "UnknownFormat"], [0, 6, 1, "", "WrongInput"], [0, 4, 1, "", "handle_exception"]], "aspire.image": [[9, 0, 0, "-", "image"], [9, 0, 0, "-", "image_stacker"], [9, 0, 0, "-", "xform"]], "aspire.image.image": [[9, 1, 1, "", "BasisImage"], [9, 1, 1, "", "BispecImage"], [9, 1, 1, "", "CartesianImage"], [9, 1, 1, "", "FBBasisImage"], [9, 1, 1, "", "Image"], [9, 1, 1, "", "PolarImage"], [9, 4, 1, "", "normalize_bg"]], "aspire.image.image.BasisImage": [[9, 2, 1, "", "evaluate"]], "aspire.image.image.BispecImage": [[9, 2, 1, "", "expand"]], "aspire.image.image.CartesianImage": [[9, 2, 1, "", "expand"]], "aspire.image.image.Image": [[9, 5, 1, "", "T"], [9, 2, 1, "", "asnumpy"], [9, 2, 1, "", "backproject"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "downsample"], [9, 2, 1, "", "filter"], [9, 2, 1, "", "flip"], [9, 2, 1, "", "frc"], [9, 2, 1, "", "norm"], [9, 5, 1, "", "res"], [9, 2, 1, "", "rotate"], [9, 2, 1, "", "save"], [9, 2, 1, "", "shift"], [9, 2, 1, "", "show"], [9, 5, 1, "", "size"], [9, 2, 1, "", "sqrt"], [9, 2, 1, "", "stack_reshape"], [9, 2, 1, "", "transpose"]], "aspire.image.image.PolarImage": [[9, 2, 1, "", "expand"]], "aspire.image.image_stacker": [[9, 1, 1, "", "ImageStacker"], [9, 1, 1, "", "MeanImageStacker"], [9, 1, 1, "", "MedianImageStacker"], [9, 1, 1, "", "PoissonRejectionImageStacker"], [9, 1, 1, "", "RobustChauvenetRejectionImageStacker"], [9, 1, 1, "", "SigmaRejectionImageStacker"], [9, 1, 1, "", "WinsorizedImageStacker"]], "aspire.image.xform": [[9, 1, 1, "", "Add"], [9, 1, 1, "", "Downsample"], [9, 1, 1, "", "FilterXform"], [9, 1, 1, "", "IndexedXform"], [9, 1, 1, "", "LambdaXform"], [9, 1, 1, "", "LinearIndexedXform"], [9, 1, 1, "", "LinearPipeline"], [9, 1, 1, "", "LinearXform"], [9, 1, 1, "", "Multiply"], [9, 1, 1, "", "Pipeline"], [9, 1, 1, "", "Shift"], [9, 1, 1, "", "SymmetricXform"], [9, 1, 1, "", "Xform"]], "aspire.image.xform.LinearXform": [[9, 2, 1, "", "adjoint"]], "aspire.image.xform.Pipeline": [[9, 2, 1, "", "add_xform"], [9, 2, 1, "", "add_xforms"], [9, 2, 1, "", "reset"]], "aspire.image.xform.Xform": [[9, 1, 1, "", "XformActiveContextManager"], [9, 2, 1, "", "disabled"], [9, 2, 1, "", "enabled"], [9, 2, 1, "", "forward"]], "aspire.noise": [[10, 0, 0, "-", "noise"]], "aspire.noise.noise": [[10, 1, 1, "", "AnisotropicNoiseEstimator"], [10, 1, 1, "", "BlueNoiseAdder"], [10, 1, 1, "", "CustomNoiseAdder"], [10, 1, 1, "", "NoiseAdder"], [10, 1, 1, "", "NoiseEstimator"], [10, 1, 1, "", "PinkNoiseAdder"], [10, 1, 1, "", "WhiteNoiseAdder"], [10, 1, 1, "", "WhiteNoiseEstimator"]], "aspire.noise.noise.AnisotropicNoiseEstimator": [[10, 2, 1, "", "estimate"], [10, 2, 1, "", "estimate_noise_psd"]], "aspire.noise.noise.CustomNoiseAdder": [[10, 5, 1, "", "noise_var"]], "aspire.noise.noise.NoiseAdder": [[10, 5, 1, "", "noise_var"]], "aspire.noise.noise.NoiseEstimator": [[10, 2, 1, "", "estimate"]], "aspire.noise.noise.WhiteNoiseAdder": [[10, 2, 1, "", "from_snr"], [10, 5, 1, "", "noise_var"], [10, 5, 1, "", "signal_power"]], "aspire.noise.noise.WhiteNoiseEstimator": [[10, 2, 1, "", "estimate"]], "aspire.nufft": [[11, 1, 1, "", "Plan"], [11, 4, 1, "", "all_backends"], [11, 4, 1, "", "anufft"], [11, 4, 1, "", "backend_available"], [11, 4, 1, "", "check_backends"], [11, 0, 0, "-", "finufft"], [11, 4, 1, "", "nufft"], [11, 0, 0, "-", "utils"]], "aspire.nufft.finufft": [[11, 1, 1, "", "FinufftPlan"]], "aspire.nufft.finufft.FinufftPlan": [[11, 2, 1, "", "adjoint"], [11, 2, 1, "", "transform"]], "aspire.nufft.utils": [[11, 4, 1, "", "nextpow2"]], "aspire.numeric": [[12, 0, 0, "-", "base_fft"], [13, 0, 0, "-", "complex_pca"], [12, 4, 1, "", "fft_object"], [12, 4, 1, "", "numeric_object"], [12, 0, 0, "-", "numpy"], [12, 0, 0, "-", "pyfftw_fft"], [12, 0, 0, "-", "scipy_fft"]], "aspire.numeric.base_fft": [[12, 1, 1, "", "FFT"]], "aspire.numeric.base_fft.FFT": [[12, 2, 1, "", "centered_fft"], [12, 2, 1, "", "centered_fft2"], [12, 2, 1, "", "centered_fftn"], [12, 2, 1, "", "centered_ifft"], [12, 2, 1, "", "centered_ifft2"], [12, 2, 1, "", "centered_ifftn"], [12, 2, 1, "", "fft"], [12, 2, 1, "", "fft2"], [12, 2, 1, "", "fftn"], [12, 2, 1, "", "fftshift"], [12, 2, 1, "", "ifft"], [12, 2, 1, "", "ifft2"], [12, 2, 1, "", "ifftn"], [12, 2, 1, "", "ifftshift"], [12, 2, 1, "", "mdim_fftshift"], [12, 2, 1, "", "mdim_ifftshift"]], "aspire.numeric.complex_pca": [[13, 0, 0, "-", "complex_pca"], [13, 0, 0, "-", "validation"]], "aspire.numeric.complex_pca.complex_pca": [[13, 1, 1, "", "ComplexPCA"]], "aspire.numeric.complex_pca.validation": [[13, 4, 1, "", "check_array"]], "aspire.numeric.numpy": [[12, 1, 1, "", "Numpy"]], "aspire.numeric.numpy.Numpy": [[12, 2, 1, "", "asnumpy"]], "aspire.numeric.pyfftw_fft": [[12, 1, 1, "", "PyfftwFFT"]], "aspire.numeric.pyfftw_fft.PyfftwFFT": [[12, 2, 1, "", "fft"], [12, 2, 1, "", "fft2"], [12, 2, 1, "", "fftn"], [12, 2, 1, "", "fftshift"], [12, 2, 1, "", "ifft"], [12, 2, 1, "", "ifft2"], [12, 2, 1, "", "ifftn"], [12, 2, 1, "", "ifftshift"]], "aspire.numeric.scipy_fft": [[12, 1, 1, "", "ScipyFFT"]], "aspire.numeric.scipy_fft.ScipyFFT": [[12, 2, 1, "", "fft"], [12, 2, 1, "", "fft2"], [12, 2, 1, "", "fftn"], [12, 2, 1, "", "fftshift"], [12, 2, 1, "", "ifft"], [12, 2, 1, "", "ifft2"], [12, 2, 1, "", "ifftn"], [12, 2, 1, "", "ifftshift"]], "aspire.operators": [[14, 0, 0, "-", "blk_diag_matrix"], [14, 0, 0, "-", "filters"], [14, 0, 0, "-", "wemd"]], "aspire.operators.blk_diag_matrix": [[14, 1, 1, "", "BlkDiagMatrix"]], "aspire.operators.blk_diag_matrix.BlkDiagMatrix": [[14, 5, 1, "", "T"], [14, 2, 1, "", "abs"], [14, 2, 1, "", "add"], [14, 2, 1, "", "append"], [14, 2, 1, "", "apply"], [14, 2, 1, "", "check_psd"], [14, 2, 1, "", "copy"], [14, 2, 1, "", "dense"], [14, 2, 1, "", "eigvals"], [14, 2, 1, "", "empty"], [14, 2, 1, "", "eye"], [14, 2, 1, "", "eye_like"], [14, 2, 1, "", "from_list"], [14, 5, 1, "", "is_square"], [14, 5, 1, "", "isfinite"], [14, 2, 1, "", "make_psd"], [14, 2, 1, "", "matmul"], [14, 2, 1, "", "mul"], [14, 2, 1, "", "neg"], [14, 2, 1, "", "norm"], [14, 2, 1, "", "ones"], [14, 5, 1, "", "partition"], [14, 2, 1, "", "pow"], [14, 2, 1, "", "rapply"], [14, 2, 1, "", "reset_cache"], [14, 2, 1, "", "solve"], [14, 2, 1, "", "sub"], [14, 2, 1, "", "transpose"], [14, 2, 1, "", "zeros"], [14, 2, 1, "", "zeros_like"]], "aspire.operators.filters": [[14, 1, 1, "", "ArrayFilter"], [14, 1, 1, "", "BlueFilter"], [14, 1, 1, "", "CTFFilter"], [14, 1, 1, "", "DualFilter"], [14, 1, 1, "", "Filter"], [14, 1, 1, "", "FunctionFilter"], [14, 1, 1, "", "IdentityFilter"], [14, 1, 1, "", "LambdaFilter"], [14, 1, 1, "", "MultiplicativeFilter"], [14, 1, 1, "", "PinkFilter"], [14, 1, 1, "", "PowerFilter"], [14, 1, 1, "", "RadialCTFFilter"], [14, 1, 1, "", "ScalarFilter"], [14, 1, 1, "", "ScaledFilter"], [14, 1, 1, "", "ZeroFilter"], [14, 4, 1, "", "evaluate_src_filters_on_grid"]], "aspire.operators.filters.ArrayFilter": [[14, 2, 1, "", "evaluate_grid"]], "aspire.operators.filters.CTFFilter": [[14, 2, 1, "", "scale"]], "aspire.operators.filters.DualFilter": [[14, 2, 1, "", "evaluate"]], "aspire.operators.filters.Filter": [[14, 2, 1, "", "dual"], [14, 2, 1, "", "evaluate"], [14, 2, 1, "", "evaluate_grid"], [14, 2, 1, "", "fb_mat"], [14, 2, 1, "", "scale"], [14, 5, 1, "", "sign"]], "aspire.operators.filters.PowerFilter": [[14, 2, 1, "", "evaluate_grid"]], "aspire.operators.wemd": [[14, 4, 1, "", "wemd_embed"], [14, 4, 1, "", "wemd_norm"]], "aspire.optimization": [[15, 0, 0, "-", "conj_grad"]], "aspire.optimization.conj_grad": [[15, 4, 1, "", "conj_grad"], [15, 4, 1, "", "fill_struct"]], "aspire.reconstruction": [[16, 0, 0, "-", "estimator"], [16, 0, 0, "-", "kernel"], [16, 0, 0, "-", "mean"]], "aspire.reconstruction.estimator": [[16, 1, 1, "", "Estimator"]], "aspire.reconstruction.estimator.Estimator": [[16, 2, 1, "", "apply_kernel"], [16, 2, 1, "", "compute_kernel"], [16, 2, 1, "", "conj_grad"], [16, 2, 1, "", "estimate"], [16, 2, 1, "", "src_backward"]], "aspire.reconstruction.kernel": [[16, 1, 1, "", "FourierKernel"], [16, 1, 1, "", "Kernel"]], "aspire.reconstruction.kernel.FourierKernel": [[16, 2, 1, "", "circularize"], [16, 2, 1, "", "circularize_1d"], [16, 2, 1, "", "convolve_volume"], [16, 2, 1, "", "convolve_volume_matrix"], [16, 2, 1, "", "is_centered"], [16, 2, 1, "", "toeplitz"]], "aspire.reconstruction.mean": [[16, 1, 1, "", "MeanEstimator"]], "aspire.reconstruction.mean.MeanEstimator": [[16, 2, 1, "", "compute_kernel"]], "aspire.source": [[17, 0, 0, "-", "coordinates"], [17, 0, 0, "-", "image"], [17, 0, 0, "-", "relion"], [17, 0, 0, "-", "simulation"]], "aspire.source.coordinates": [[17, 1, 1, "", "BoxesCoordinateSource"], [17, 1, 1, "", "CentersCoordinateSource"], [17, 1, 1, "", "CoordinateSource"]], "aspire.source.coordinates.CoordinateSource": [[17, 2, 1, "", "import_aspire_ctf"], [17, 2, 1, "", "import_relion_ctf"]], "aspire.source.image": [[17, 1, 1, "", "ArrayImageSource"], [17, 1, 1, "", "ImageSource"], [17, 1, 1, "", "IndexedSource"], [17, 4, 1, "", "as_copy"]], "aspire.source.image.ImageSource": [[17, 5, 1, "", "amplitudes"], [17, 5, 1, "", "angles"], [17, 2, 1, "", "cache"], [17, 5, 1, "", "class_distances"], [17, 5, 1, "", "class_indices"], [17, 5, 1, "", "class_refl"], [17, 2, 1, "", "downsample"], [17, 2, 1, "", "estimate_noise_power"], [17, 2, 1, "", "estimate_signal_mean_energy"], [17, 2, 1, "", "estimate_signal_power"], [17, 2, 1, "", "estimate_signal_var"], [17, 2, 1, "", "estimate_snr"], [17, 5, 1, "", "filter_indices"], [17, 2, 1, "", "get_metadata"], [17, 2, 1, "", "has_metadata"], [17, 2, 1, "", "im_backward"], [17, 5, 1, "", "images"], [17, 2, 1, "", "invert_contrast"], [17, 5, 1, "", "n"], [17, 5, 1, "", "n_ctf_filters"], [17, 2, 1, "", "normalize_background"], [17, 5, 1, "", "offsets"], [17, 2, 1, "", "phase_flip"], [17, 5, 1, "", "rotations"], [17, 2, 1, "", "save"], [17, 2, 1, "", "save_images"], [17, 2, 1, "", "save_metadata"], [17, 5, 1, "", "selection_indices"], [17, 2, 1, "", "set_metadata"], [17, 5, 1, "", "states"], [17, 2, 1, "", "update"], [17, 2, 1, "", "vol_forward"], [17, 2, 1, "", "whiten"]], "aspire.source.relion": [[17, 1, 1, "", "RelionSource"]], "aspire.source.relion.RelionSource": [[17, 2, 1, "", "populate_metadata"]], "aspire.source.simulation": [[17, 1, 1, "", "Simulation"]], "aspire.source.simulation.Simulation": [[17, 5, 1, "", "clean_images"], [17, 2, 1, "", "covar_true"], [17, 2, 1, "", "eigs"], [17, 2, 1, "", "eval_clustering"], [17, 2, 1, "", "eval_coords"], [17, 2, 1, "", "eval_covar"], [17, 2, 1, "", "eval_eigs"], [17, 2, 1, "", "eval_mean"], [17, 2, 1, "", "eval_vol"], [17, 2, 1, "", "eval_volmat"], [17, 2, 1, "", "mean_true"], [17, 5, 1, "", "projections"], [17, 2, 1, "", "true_signal_power"], [17, 2, 1, "", "true_snr"], [17, 2, 1, "", "vol_coords"]], "aspire.storage": [[18, 0, 0, "-", "mrc"], [18, 0, 0, "-", "starfile"]], "aspire.storage.mrc": [[18, 1, 1, "", "MrcStats"]], "aspire.storage.mrc.MrcStats": [[18, 5, 1, "", "amean"], [18, 5, 1, "", "arms"], [18, 2, 1, "", "push"], [18, 2, 1, "", "update_header"]], "aspire.storage.starfile": [[18, 1, 1, "", "StarFile"], [18, 6, 1, "", "StarFileError"]], "aspire.storage.starfile.StarFile": [[18, 2, 1, "", "get_block_by_index"], [18, 2, 1, "", "write"]], "aspire.utils": [[19, 0, 0, "-", "cell"], [19, 0, 0, "-", "coor_trans"], [19, 0, 0, "-", "filter_to_fb_mat"], [19, 0, 0, "-", "logging"], [19, 0, 0, "-", "matlab_compat"], [19, 0, 0, "-", "matrix"], [19, 0, 0, "-", "misc"], [19, 0, 0, "-", "multiprocessing"], [19, 0, 0, "-", "random"], [19, 0, 0, "-", "relion_interop"], [19, 0, 0, "-", "resolution_estimation"], [19, 0, 0, "-", "rotation"], [19, 0, 0, "-", "types"], [19, 0, 0, "-", "units"]], "aspire.utils.cell": [[19, 1, 1, "", "Cell2D"]], "aspire.utils.cell.Cell2D": [[19, 2, 1, "", "mat2cell"]], "aspire.utils.coor_trans": [[19, 4, 1, "", "cart2pol"], [19, 4, 1, "", "cart2sph"], [19, 4, 1, "", "common_line_from_rots"], [19, 4, 1, "", "crop_pad_2d"], [19, 4, 1, "", "crop_pad_3d"], [19, 4, 1, "", "get_aligned_rotations"], [19, 4, 1, "", "get_rots_mse"], [19, 4, 1, "", "grid_1d"], [19, 4, 1, "", "grid_2d"], [19, 4, 1, "", "grid_3d"], [19, 4, 1, "", "register_rotations"], [19, 4, 1, "", "uniform_random_angles"]], "aspire.utils.filter_to_fb_mat": [[19, 4, 1, "", "filter_to_fb_mat"]], "aspire.utils.logging": [[19, 1, 1, "", "LogFilterByCount"], [19, 4, 1, "", "getConsoleLoggingLevel"], [19, 4, 1, "", "getFileLoggingLevel"], [19, 4, 1, "", "get_full_version"], [19, 4, 1, "", "setConsoleLoggingLevel"], [19, 4, 1, "", "setFileLoggingLevel"], [19, 4, 1, "", "tqdm"], [19, 4, 1, "", "trange"]], "aspire.utils.logging.LogFilterByCount": [[19, 2, 1, "", "filter"], [19, 3, 1, "", "msg_cache"]], "aspire.utils.matlab_compat": [[19, 4, 1, "", "m_flatten"], [19, 4, 1, "", "m_reshape"], [19, 4, 1, "", "stable_eigsh"]], "aspire.utils.matrix": [[19, 4, 1, "", "acorr"], [19, 4, 1, "", "ainner"], [19, 4, 1, "", "anorm"], [19, 4, 1, "", "best_rank1_approximation"], [19, 4, 1, "", "eigs"], [19, 4, 1, "", "fix_signs"], [19, 4, 1, "", "im_to_vec"], [19, 4, 1, "", "make_psd"], [19, 4, 1, "", "make_symmat"], [19, 4, 1, "", "mat_to_vec"], [19, 4, 1, "", "mdim_mat_fun_conj"], [19, 4, 1, "", "roll_dim"], [19, 4, 1, "", "symmat_to_vec"], [19, 4, 1, "", "symmat_to_vec_iso"], [19, 4, 1, "", "unroll_dim"], [19, 4, 1, "", "vec_to_im"], [19, 4, 1, "", "vec_to_mat"], [19, 4, 1, "", "vec_to_symmat"], [19, 4, 1, "", "vec_to_symmat_iso"], [19, 4, 1, "", "vec_to_vol"], [19, 4, 1, "", "vecmat_to_volmat"], [19, 4, 1, "", "vol_to_vec"], [19, 4, 1, "", "volmat_to_vecmat"]], "aspire.utils.misc": [[19, 4, 1, "", "J_conjugate"], [19, 4, 1, "", "abs2"], [19, 4, 1, "", "all_pairs"], [19, 4, 1, "", "all_triplets"], [19, 4, 1, "", "bump_3d"], [19, 4, 1, "", "circ"], [19, 4, 1, "", "cyclic_rotations"], [19, 4, 1, "", "fuzzy_mask"], [19, 4, 1, "", "gaussian_1d"], [19, 4, 1, "", "gaussian_2d"], [19, 4, 1, "", "gaussian_3d"], [19, 4, 1, "", "importlib_path"], [19, 4, 1, "", "inverse_r"], [19, 4, 1, "", "powerset"], [19, 4, 1, "", "sha256sum"], [19, 4, 1, "", "support_mask"]], "aspire.utils.multiprocessing": [[19, 4, 1, "", "mem_based_cpu_suggestion"], [19, 4, 1, "", "num_procs_suggestion"], [19, 4, 1, "", "physical_core_cpu_suggestion"], [19, 4, 1, "", "virtual_core_cpu_suggestion"]], "aspire.utils.random": [[19, 1, 1, "", "Random"], [19, 4, 1, "", "choice"], [19, 4, 1, "", "rand"], [19, 4, 1, "", "randi"], [19, 4, 1, "", "randn"], [19, 4, 1, "", "random"]], "aspire.utils.relion_interop": [[19, 1, 1, "", "RelionStarFile"], [19, 4, 1, "", "dict_to_relion_types"]], "aspire.utils.relion_interop.RelionStarFile": [[19, 2, 1, "", "get_merged_data_block"]], "aspire.utils.resolution_estimation": [[19, 1, 1, "", "FourierCorrelation"], [19, 1, 1, "", "FourierRingCorrelation"], [19, 1, 1, "", "FourierShellCorrelation"]], "aspire.utils.resolution_estimation.FourierCorrelation": [[19, 2, 1, "", "analyze_correlations"], [19, 5, 1, "", "correlations"], [19, 2, 1, "", "plot"]], "aspire.utils.resolution_estimation.FourierRingCorrelation": [[19, 3, 1, "", "dim"]], "aspire.utils.resolution_estimation.FourierShellCorrelation": [[19, 3, 1, "", "dim"]], "aspire.utils.rotation": [[19, 1, 1, "", "Rotation"]], "aspire.utils.rotation.Rotation": [[19, 2, 1, "", "about_axis"], [19, 2, 1, "", "angle_dist"], [19, 5, 1, "", "angles"], [19, 2, 1, "", "apply_registration"], [19, 2, 1, "", "common_lines"], [19, 5, 1, "", "dtype"], [19, 2, 1, "", "find_registration"], [19, 2, 1, "", "from_euler"], [19, 2, 1, "", "from_matrix"], [19, 2, 1, "", "from_rotvec"], [19, 2, 1, "", "generate_random_rotations"], [19, 2, 1, "", "invert"], [19, 5, 1, "", "matrices"], [19, 2, 1, "", "mse"], [19, 2, 1, "", "register"]], "aspire.utils.types": [[19, 4, 1, "", "complex_type"], [19, 4, 1, "", "real_type"], [19, 4, 1, "", "utest_tolerance"]], "aspire.utils.units": [[19, 4, 1, "", "ratio_to_decibel"], [19, 4, 1, "", "voltage_to_wavelength"], [19, 4, 1, "", "wavelength_to_voltage"]], "aspire.volume": [[20, 0, 0, "-", "volume"], [20, 0, 0, "-", "volume_synthesis"]], "aspire.volume.volume": [[20, 1, 1, "", "BasisVolume"], [20, 1, 1, "", "BispecVolume"], [20, 1, 1, "", "CartesianVolume"], [20, 1, 1, "", "FBBasisVolume"], [20, 1, 1, "", "PolarVolume"], [20, 1, 1, "", "Volume"], [20, 4, 1, "", "qr_vols_forward"], [20, 4, 1, "", "rotated_grids"], [20, 4, 1, "", "rotated_grids_3d"]], "aspire.volume.volume.BasisVolume": [[20, 2, 1, "", "evaluate"]], "aspire.volume.volume.BispecVolume": [[20, 2, 1, "", "expand"]], "aspire.volume.volume.CartesianVolume": [[20, 2, 1, "", "expand"]], "aspire.volume.volume.PolarVolume": [[20, 2, 1, "", "expand"]], "aspire.volume.volume.Volume": [[20, 5, 1, "", "T"], [20, 2, 1, "", "asnumpy"], [20, 2, 1, "", "astype"], [20, 2, 1, "", "denoise"], [20, 2, 1, "", "downsample"], [20, 2, 1, "", "flatten"], [20, 2, 1, "", "flip"], [20, 2, 1, "", "from_vec"], [20, 2, 1, "", "fsc"], [20, 2, 1, "", "load"], [20, 2, 1, "", "project"], [20, 2, 1, "", "rotate"], [20, 2, 1, "", "save"], [20, 2, 1, "", "shift"], [20, 2, 1, "", "stack_reshape"], [20, 2, 1, "", "to_vec"], [20, 2, 1, "", "transpose"]], "aspire.volume.volume_synthesis": [[20, 1, 1, "", "AsymmetricVolume"], [20, 1, 1, "", "CnSymmetricVolume"], [20, 1, 1, "", "DnSymmetricVolume"], [20, 1, 1, "", "GaussianBlobsVolume"], [20, 1, 1, "", "LegacyVolume"], [20, 1, 1, "", "OSymmetricVolume"], [20, 1, 1, "", "SyntheticVolumeBase"], [20, 1, 1, "", "TSymmetricVolume"]], "aspire.volume.volume_synthesis.CnSymmetricVolume": [[20, 5, 1, "", "n_blobs"], [20, 5, 1, "", "symmetry_group"]], "aspire.volume.volume_synthesis.DnSymmetricVolume": [[20, 5, 1, "", "n_blobs"], [20, 5, 1, "", "symmetry_group"]], "aspire.volume.volume_synthesis.GaussianBlobsVolume": [[20, 2, 1, "", "generate"], [20, 5, 1, "", "n_blobs"], [20, 5, 1, "", "symmetry_group"]], "aspire.volume.volume_synthesis.LegacyVolume": [[20, 2, 1, "", "generate"]], "aspire.volume.volume_synthesis.OSymmetricVolume": [[20, 5, 1, "", "n_blobs"], [20, 5, 1, "", "symmetry_group"]], "aspire.volume.volume_synthesis.SyntheticVolumeBase": [[20, 2, 1, "", "generate"]], "aspire.volume.volume_synthesis.TSymmetricVolume": [[20, 5, 1, "", "n_blobs"], [20, 5, 1, "", "symmetry_group"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"aspir": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 37, 39, 47], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 48], "subpackag": [0, 12], "submodul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "except": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 49], "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 47], "abinitio": [1, 22, 23, 24, 26], "commonline_bas": 1, "commonline_c3_c4": 1, "commonline_cn": 1, "commonline_ev": 1, "commonline_gcar": 1, "commonline_lud": 1, "commonline_sdp": 1, "commonline_sync": 1, "orientation_src": 1, "sync_vot": 1, "appl": [2, 5, 32], "helper": 2, "pick": [2, 32, 50], "basi": [3, 27, 35, 36, 40], "basis_util": 3, "fb": [3, 40], "fb_2d": 3, "fb_3d": 3, "ffb_2d": 3, "ffb_3d": 3, "fle_2d": 3, "fle_2d_util": 3, "fpswf_2d": 3, "fpswf_3d": 3, "fspca": 3, "polar_2d": 3, "pswf_2d": 3, "pswf_3d": 3, "pswf_util": 3, "steerabl": 3, "classif": 4, "averager2d": 4, "class2d": 4, "class_select": 4, "legacy_implement": 4, "reddy_chatterji": 4, "rir_class2d": 4, "command": 5, "cov3d": 5, "denois": [5, 8, 22, 26, 50], "estimate_ctf": 5, "extract_particl": 5, "orient3d": 5, "preprocess": [5, 22, 23, 24, 43, 50], "covari": [6, 35, 36, 50], "covar": 6, "covar2d": 6, "ctf": [7, 27, 30, 35, 37, 39, 42], "ctf_estim": 7, "adaptive_support": 8, "class_avg": 8, "denoised_src": 8, "denoiser_cov2d": 8, "imag": [9, 17, 27, 30, 33, 34, 35, 37, 38, 39, 40, 42, 43, 46, 50], "image_stack": 9, "xform": 9, "nois": [10, 27, 33, 34, 35, 38, 43, 45], "nufft": 11, "cufinufft": 11, "finufft": 11, "pynfft": 11, "util": [11, 19], "numer": [12, 13, 48], "base_fft": 12, "cupi": 12, "cupy_fft": 12, "mkl_fft": 12, "numpi": 12, "pyfftw_fft": 12, "scipy_fft": 12, "complex_pca": 13, "valid": [13, 37], "oper": 14, "blk_diag_matrix": 14, "filter": [14, 27, 30, 35, 39, 42], "wemd": 14, "optim": [15, 48], "conj_grad": 15, "reconstruct": [16, 22, 23, 24, 26, 30, 47, 50], "estim": [16, 22, 23, 24, 26, 30, 33, 35, 36, 37, 42, 45, 50], "kernel": 16, "mean": [16, 30, 35, 36, 42, 45, 50], "sourc": [17, 22, 23, 24, 27, 30, 34, 37, 38, 45], "coordin": 17, "relion": 17, "simul": [17, 26, 27, 30, 33, 34, 35, 36, 37, 38, 42, 43], "storag": 18, "mrc": 18, "starfil": [18, 45], "cell": 19, "coor_tran": 19, "filter_to_fb_mat": 19, "log": [19, 28], "matlab_compat": 19, "matrix": 19, "misc": 19, "multiprocess": 19, "random": 19, "relion_interop": 19, "resolution_estim": 19, "rotat": [19, 27, 38, 42], "type": 19, "unit": 19, "volum": [20, 22, 23, 24, 26, 27, 30, 36, 38, 45, 50], "volume_synthesi": 20, "author": 21, "python": [21, 27], "contributor": 21, "addit": 21, "matlab": 21, "list": 21, "abov": 21, "pipelin": [22, 23, 24, 26, 27, 30], "experiment": [22, 23, 24, 27, 37], "data": [22, 23, 24, 26, 27, 34, 37, 38], "empiar": [22, 23, 24], "10028": 22, "import": [22, 23, 24, 26, 27, 37], "paramet": [22, 23, 24, 26, 35, 43], "option": [22, 26, 28, 50], "cwf": [22, 26], "class": [22, 23, 24, 26, 27, 30, 34, 39, 46], "averag": [22, 23, 24, 26, 30, 34, 46], "common": [22, 23, 24, 26, 27], "line": [22, 23, 24, 26], "10073": 23, "10081": 24, "experi": 25, "introduct": [27, 29], "instal": [27, 48], "princeton": 27, "research": 27, "comput": [27, 31, 44], "api": [27, 29], "primit": 27, "core": 27, "compon": [27, 29, 34, 41], "initi": [27, 30, 32, 35, 40, 42], "load": [27, 30, 38, 40], "downsampl": [27, 39, 42], "plot": [27, 32, 39, 43], "The": 27, "noiseadd": 27, "whitenoiseadd": 27, "whitenoiseestim": 27, "A": 27, "custom": 27, "functionfilt": 27, "whiten": [27, 33, 45], "corrupt": [27, 37], "amplitud": 27, "offset": 27, "combin": 27, "real": 27, "relionsourc": 27, "roadmap": 27, "configur": [28, 38], "default": 28, "system": 28, "overrid": 28, "directori": 28, "In": 28, "code": 28, "resolut": 28, "prefer": 28, "advanc": 28, "tutori": 29, "exampl": [29, 34, 37, 41], "ab": 30, "initio": 30, "demonstr": 30, "download": 30, "creat": [30, 35, 36, 39, 42], "object": [30, 35, 36, 42, 43], "sever": 30, "view": 30, "project": [30, 35, 38], "correct": [30, 37], "orient": [30, 42, 50], "squar": [30, 42], "error": [30, 42], "comparison": [30, 40], "time": [31, 44], "picker": 32, "read": 32, "micrograph": 32, "particl": [32, 47, 50], "find": 32, "center": 32, "basic": [33, 34], "arrai": 33, "stock": 33, "add": [33, 34], "ad": 33, "stack": [33, 39], "power": 33, "spectral": 33, "densiti": 33, "build": [34, 35, 43], "circular": 34, "2d": [34, 35], "gaussian": 34, "oval": 34, "hand": 34, "reflect": 34, "set": 34, "displai": 34, "rir": 34, "review": 34, "align": 34, "detail": 34, "classavgsourc": [34, 46], "format": 35, "specifi": [35, 43], "clean": 35, "noisi": 35, "expand": [35, 40], "fourier": [35, 40], "bessel": [35, 40], "cov2d": 35, "calcul": 35, "varianc": 35, "shrink": 35, "method": [35, 40], "coeffici": 35, "wiener": 35, "evalu": [35, 36], "result": [35, 36], "3d": [36, 38, 42], "us": [36, 37], "top": 36, "eigenpair": 36, "form": 36, "perform": 36, "contrast": [37, 50], "transfer": [37, 50], "function": [37, 40, 46, 50], "visual": [37, 45], "radial": 37, "symmetr": 37, "ellipt": 37, "phase": 37, "flip": 37, "appli": [37, 39, 43], "directli": 37, "gener": [37, 38, 48], "ctffilter": 37, "ctfestim": 37, "": 37, "beyond": 37, "ctffind4": 37, "extern": 37, "how": 38, "mani": 38, "we": 38, "d": 38, "like": 38, "our": 38, "defin": 38, "setup": 38, "yield": 38, "from": [38, 43], "an": 39, "instanc": 39, "uniform": 39, "shift": 39, "wise": 39, "expans": 40, "normal": 40, "fast": 40, "prolat": 40, "spheroid": 40, "wave": 40, "psfw": 40, "side": 40, "obtain": 42, "true": 42, "angl": 42, "independ": 43, "techniqu": 43, "first": 43, "each": 43, "step": 43, "sequenti": 43, "chain": 43, "architectur": 46, "classifi": 46, "selector": 46, "local": 46, "global": 46, "repuls": 46, "qualiti": 46, "weightedimagequalitymixin": 46, "imagestack": 46, "v0": 47, "11": 47, "1": [47, 50], "algorithm": 47, "singl": 47, "galleri": 47, "indic": 47, "tabl": 47, "refer": 47, "conda": 48, "get": [48, 50], "start": [48, 50], "test": 48, "backend": 48, "suggest": 48, "environ": 48, "gpu": 48, "extens": 48, "cuda": 48, "version": 48, "document": 48, "cli": 50, "2": 50, "extract": 50, "3": 50, "4": 50, "5": 50, "6": 50, "7": 50, "argument": 50, "flag": 50}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"aspire package": [[0, "aspire-package"]], "Subpackages": [[0, "subpackages"], [12, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"]], "aspire.exceptions module": [[0, "module-aspire.exceptions"]], "Module contents": [[0, "module-aspire"], [1, "module-aspire.abinitio"], [2, "module-aspire.apple"], [3, "module-aspire.basis"], [4, "module-aspire.classification"], [5, "module-aspire.commands"], [6, "module-aspire.covariance"], [7, "module-aspire.ctf"], [8, "module-aspire.denoising"], [9, "module-aspire.image"], [10, "module-aspire.noise"], [11, "module-aspire.nufft"], [12, "module-aspire.numeric"], [13, "module-aspire.numeric.complex_pca"], [14, "module-aspire.operators"], [15, "module-aspire.optimization"], [16, "module-aspire.reconstruction"], [17, "module-aspire.source"], [18, "module-aspire.storage"], [19, "module-aspire.utils"], [20, "module-aspire.volume"]], "aspire.abinitio package": [[1, "aspire-abinitio-package"]], "aspire.abinitio.commonline_base module": [[1, "module-aspire.abinitio.commonline_base"]], "aspire.abinitio.commonline_c3_c4 module": [[1, "module-aspire.abinitio.commonline_c3_c4"]], "aspire.abinitio.commonline_cn module": [[1, "module-aspire.abinitio.commonline_cn"]], "aspire.abinitio.commonline_ev module": [[1, "module-aspire.abinitio.commonline_ev"]], "aspire.abinitio.commonline_gcar module": [[1, "module-aspire.abinitio.commonline_gcar"]], "aspire.abinitio.commonline_lud module": [[1, "module-aspire.abinitio.commonline_lud"]], "aspire.abinitio.commonline_sdp module": [[1, "module-aspire.abinitio.commonline_sdp"]], "aspire.abinitio.commonline_sync module": [[1, "module-aspire.abinitio.commonline_sync"]], "aspire.abinitio.orientation_src module": [[1, "module-aspire.abinitio.orientation_src"]], "aspire.abinitio.sync_voting module": [[1, "module-aspire.abinitio.sync_voting"]], "aspire.apple package": [[2, "aspire-apple-package"]], "aspire.apple.apple module": [[2, "module-aspire.apple.apple"]], "aspire.apple.helper module": [[2, "module-aspire.apple.helper"]], "aspire.apple.picking module": [[2, "module-aspire.apple.picking"]], "aspire.basis package": [[3, "aspire-basis-package"]], "aspire.basis.basis module": [[3, "module-aspire.basis.basis"]], "aspire.basis.basis_utils module": [[3, "module-aspire.basis.basis_utils"]], "aspire.basis.fb module": [[3, "module-aspire.basis.fb"]], "aspire.basis.fb_2d module": [[3, "module-aspire.basis.fb_2d"]], "aspire.basis.fb_3d module": [[3, "module-aspire.basis.fb_3d"]], "aspire.basis.ffb_2d module": [[3, "module-aspire.basis.ffb_2d"]], "aspire.basis.ffb_3d module": [[3, "module-aspire.basis.ffb_3d"]], "aspire.basis.fle_2d module": [[3, "module-aspire.basis.fle_2d"]], "aspire.basis.fle_2d_utils module": [[3, "module-aspire.basis.fle_2d_utils"]], "aspire.basis.fpswf_2d module": [[3, "module-aspire.basis.fpswf_2d"]], "aspire.basis.fpswf_3d module": [[3, "module-aspire.basis.fpswf_3d"]], "aspire.basis.fspca module": [[3, "module-aspire.basis.fspca"]], "aspire.basis.polar_2d module": [[3, "module-aspire.basis.polar_2d"]], "aspire.basis.pswf_2d module": [[3, "module-aspire.basis.pswf_2d"]], "aspire.basis.pswf_3d module": [[3, "module-aspire.basis.pswf_3d"]], "aspire.basis.pswf_utils module": [[3, "module-aspire.basis.pswf_utils"]], "aspire.basis.steerable module": [[3, "module-aspire.basis.steerable"]], "aspire.classification package": [[4, "aspire-classification-package"]], "aspire.classification.averager2d module": [[4, "module-aspire.classification.averager2d"]], "aspire.classification.class2d module": [[4, "module-aspire.classification.class2d"]], "aspire.classification.class_selection module": [[4, "module-aspire.classification.class_selection"]], "aspire.classification.legacy_implementations module": [[4, "module-aspire.classification.legacy_implementations"]], "aspire.classification.reddy_chatterji module": [[4, "module-aspire.classification.reddy_chatterji"]], "aspire.classification.rir_class2d module": [[4, "module-aspire.classification.rir_class2d"]], "aspire.commands package": [[5, "aspire-commands-package"]], "aspire.commands.apple module": [[5, "module-aspire.commands.apple"]], "aspire.commands.cov3d module": [[5, "module-aspire.commands.cov3d"]], "aspire.commands.denoise module": [[5, "module-aspire.commands.denoise"]], "aspire.commands.estimate_ctf module": [[5, "module-aspire.commands.estimate_ctf"]], "aspire.commands.extract_particles module": [[5, "module-aspire.commands.extract_particles"]], "aspire.commands.orient3d module": [[5, "module-aspire.commands.orient3d"]], "aspire.commands.preprocess module": [[5, "module-aspire.commands.preprocess"]], "aspire.covariance package": [[6, "aspire-covariance-package"]], "aspire.covariance.covar module": [[6, "module-aspire.covariance.covar"]], "aspire.covariance.covar2d module": [[6, "module-aspire.covariance.covar2d"]], "aspire.ctf package": [[7, "aspire-ctf-package"]], "aspire.ctf.ctf_estimator module": [[7, "module-aspire.ctf.ctf_estimator"]], "aspire.denoising package": [[8, "aspire-denoising-package"]], "aspire.denoising.adaptive_support module": [[8, "module-aspire.denoising.adaptive_support"]], "aspire.denoising.class_avg module": [[8, "module-aspire.denoising.class_avg"]], "aspire.denoising.denoised_src module": [[8, "module-aspire.denoising.denoised_src"]], "aspire.denoising.denoiser module": [[8, "module-aspire.denoising.denoiser"]], "aspire.denoising.denoiser_cov2d module": [[8, "module-aspire.denoising.denoiser_cov2d"]], "aspire.image package": [[9, "aspire-image-package"]], "aspire.image.image module": [[9, "module-aspire.image.image"]], "aspire.image.image_stacker module": [[9, "module-aspire.image.image_stacker"]], "aspire.image.xform module": [[9, "module-aspire.image.xform"]], "aspire.noise package": [[10, "aspire-noise-package"]], "aspire.noise.noise module": [[10, "module-aspire.noise.noise"]], "aspire.nufft package": [[11, "aspire-nufft-package"]], "aspire.nufft.cufinufft module": [[11, "aspire-nufft-cufinufft-module"]], "aspire.nufft.finufft module": [[11, "module-aspire.nufft.finufft"]], "aspire.nufft.pynfft module": [[11, "aspire-nufft-pynfft-module"]], "aspire.nufft.utils module": [[11, "module-aspire.nufft.utils"]], "aspire.numeric package": [[12, "aspire-numeric-package"]], "aspire.numeric.base_fft module": [[12, "module-aspire.numeric.base_fft"]], "aspire.numeric.cupy module": [[12, "aspire-numeric-cupy-module"]], "aspire.numeric.cupy_fft module": [[12, "aspire-numeric-cupy-fft-module"]], "aspire.numeric.mkl_fft module": [[12, "aspire-numeric-mkl-fft-module"]], "aspire.numeric.numpy module": [[12, "module-aspire.numeric.numpy"]], "aspire.numeric.pyfftw_fft module": [[12, "module-aspire.numeric.pyfftw_fft"]], "aspire.numeric.scipy_fft module": [[12, "module-aspire.numeric.scipy_fft"]], "aspire.numeric.complex_pca package": [[13, "aspire-numeric-complex-pca-package"]], "aspire.numeric.complex_pca.complex_pca module": [[13, "module-aspire.numeric.complex_pca.complex_pca"]], "aspire.numeric.complex_pca.validation module": [[13, "module-aspire.numeric.complex_pca.validation"]], "aspire.operators package": [[14, "aspire-operators-package"]], "aspire.operators.blk_diag_matrix module": [[14, "module-aspire.operators.blk_diag_matrix"]], "aspire.operators.filters module": [[14, "module-aspire.operators.filters"]], "aspire.operators.wemd module": [[14, "module-aspire.operators.wemd"]], "aspire.optimization package": [[15, "aspire-optimization-package"]], "aspire.optimization.conj_grad module": [[15, "module-aspire.optimization.conj_grad"]], "aspire.reconstruction package": [[16, "aspire-reconstruction-package"]], "aspire.reconstruction.estimator module": [[16, "module-aspire.reconstruction.estimator"]], "aspire.reconstruction.kernel module": [[16, "module-aspire.reconstruction.kernel"]], "aspire.reconstruction.mean module": [[16, "module-aspire.reconstruction.mean"]], "aspire.source package": [[17, "aspire-source-package"]], "aspire.source.coordinates module": [[17, "module-aspire.source.coordinates"]], "aspire.source.image module": [[17, "module-aspire.source.image"]], "aspire.source.relion module": [[17, "module-aspire.source.relion"]], "aspire.source.simulation module": [[17, "module-aspire.source.simulation"]], "aspire.storage package": [[18, "aspire-storage-package"]], "aspire.storage.mrc module": [[18, "module-aspire.storage.mrc"]], "aspire.storage.starfile module": [[18, "module-aspire.storage.starfile"]], "aspire.utils package": [[19, "aspire-utils-package"]], "aspire.utils.cell module": [[19, "module-aspire.utils.cell"]], "aspire.utils.coor_trans module": [[19, "module-aspire.utils.coor_trans"]], "aspire.utils.filter_to_fb_mat module": [[19, "module-aspire.utils.filter_to_fb_mat"]], "aspire.utils.logging module": [[19, "module-aspire.utils.logging"]], "aspire.utils.matlab_compat module": [[19, "module-aspire.utils.matlab_compat"]], "aspire.utils.matrix module": [[19, "module-aspire.utils.matrix"]], "aspire.utils.misc module": [[19, "module-aspire.utils.misc"]], "aspire.utils.multiprocessing module": [[19, "module-aspire.utils.multiprocessing"]], "aspire.utils.random module": [[19, "module-aspire.utils.random"]], "aspire.utils.relion_interop module": [[19, "module-aspire.utils.relion_interop"]], "aspire.utils.resolution_estimation module": [[19, "module-aspire.utils.resolution_estimation"]], "aspire.utils.rotation module": [[19, "module-aspire.utils.rotation"]], "aspire.utils.types module": [[19, "module-aspire.utils.types"]], "aspire.utils.units module": [[19, "module-aspire.utils.units"]], "aspire.volume package": [[20, "aspire-volume-package"]], "aspire.volume.volume module": [[20, "module-aspire.volume.volume"]], "aspire.volume.volume_synthesis module": [[20, "module-aspire.volume.volume_synthesis"]], "Authors": [[21, "authors"]], "Python Contributors": [[21, "id1"]], "Additional MATLAB Contributors not listed above:": [[21, "id2"]], "Abinitio Pipeline - Experimental Data Empiar 10028": [[22, "abinitio-pipeline-experimental-data-empiar-10028"]], "Imports": [[22, "imports"], [23, "imports"], [24, "imports"], [26, "imports"], [27, "imports"]], "Parameters": [[22, "parameters"], [23, "parameters"], [24, "parameters"], [26, "parameters"]], "Source data and Preprocessing": [[22, "source-data-and-preprocessing"], [23, "source-data-and-preprocessing"], [24, "source-data-and-preprocessing"]], "Optional: CWF Denoising": [[22, "optional-cwf-denoising"], [26, "optional-cwf-denoising"]], "Class Averaging": [[22, "class-averaging"], [23, "class-averaging"], [24, "class-averaging"], [26, "class-averaging"], [30, "class-averaging"], [34, "class-averaging"]], "Common Line Estimation": [[22, "common-line-estimation"], [23, "common-line-estimation"], [24, "common-line-estimation"], [26, "common-line-estimation"]], "Volume Reconstruction": [[22, "volume-reconstruction"], [23, "volume-reconstruction"], [24, "volume-reconstruction"], [26, "volume-reconstruction"], [30, "volume-reconstruction"]], "Abinitio Pipeline - Experimental Data Empiar 10073": [[23, "abinitio-pipeline-experimental-data-empiar-10073"]], "Abinitio Pipeline - Experimental Data Empiar 10081": [[24, "abinitio-pipeline-experimental-data-empiar-10081"]], "Experiments": [[25, "experiments"]], "Abinitio Pipeline - Simulated Data": [[26, "abinitio-pipeline-simulated-data"]], "Simulation Data": [[26, "simulation-data"]], "ASPIRE-Python Introduction": [[27, "aspire-python-introduction"]], "Installation": [[27, "installation"], [48, "installation"]], "Princeton Research Computing": [[27, "princeton-research-computing"]], "API Primitives": [[27, "api-primitives"]], "Core API Components": [[27, "id3"]], "Image Class": [[27, "image-class"]], "Volume Class": [[27, "volume-class"]], "Initialize Volume - load": [[27, "initialize-volume-load"]], "Downsample Volume": [[27, "downsample-volume"]], "Plot Data": [[27, "plot-data"]], "Rotation Class": [[27, "rotation-class"]], "The filter Package": [[27, "the-filter-package"]], "Basis": [[27, "basis"]], "The source Package": [[27, "the-source-package"]], "Simulation Class": [[27, "simulation-class"]], "The noise Package": [[27, "the-noise-package"]], "NoiseAdder": [[27, "noiseadder"]], "WhiteNoiseAdder": [[27, "whitenoiseadder"]], "WhiteNoiseEstimator": [[27, "whitenoiseestimator"]], "A Custom FunctionFilter": [[27, "a-custom-functionfilter"]], "Noise Whitening": [[27, "noise-whitening"]], "Common Image Corruptions": [[27, "common-image-corruptions"]], "Amplitudes": [[27, "amplitudes"]], "Offsets": [[27, "offsets"]], "Noise": [[27, "noise"]], "CTF": [[27, "ctf"]], "Combining into a Simulation": [[27, "combining-into-a-simulation"]], "Real Experimental Data - RelionSource": [[27, "real-experimental-data-relionsource"]], "Pipeline Roadmap": [[27, "pipeline-roadmap"]], "ASPIRE Configuration": [[28, "aspire-configuration"]], "Default Configuration": [[28, "default-configuration"]], "System Overrides": [[28, "system-overrides"]], "Override Configuration Directory": [[28, "override-configuration-directory"]], "In-Code Overrides": [[28, "in-code-overrides"]], "Resolution": [[28, "resolution"]], "Logging preferences": [[28, "logging-preferences"]], "Advanced logging options": [[28, "advanced-logging-options"]], "Tutorials": [[29, "tutorials"]], "API Introduction": [[29, "api-introduction"]], "Component Examples": [[29, "component-examples"], [41, "component-examples"]], "Ab-initio Pipeline Demonstration": [[30, "ab-initio-pipeline-demonstration"]], "Download a Volume": [[30, "download-a-volume"]], "Load a Volume": [[30, "load-a-volume"]], "Create a Simulation Source": [[30, "create-a-simulation-source"]], "CTF Filters": [[30, "ctf-filters"]], "Initialize Simulation Object": [[30, "initialize-simulation-object"]], "Several Views of the Projection Images": [[30, "several-views-of-the-projection-images"]], "CTF Correction": [[30, "ctf-correction"]], "View the Class Averages": [[30, "view-the-class-averages"]], "Orientation Estimation": [[30, "orientation-estimation"]], "Mean Squared Error": [[30, "mean-squared-error"], [42, "mean-squared-error"]], "Comparison of Estimated Volume with Source Volume": [[30, "comparison-of-estimated-volume-with-source-volume"]], "Computation times": [[31, "computation-times"], [44, "computation-times"]], "Apple Picker": [[32, "apple-picker"]], "Read and Plot Micrograph": [[32, "read-and-plot-micrograph"]], "Initialize Apple": [[32, "initialize-apple"]], "Pick Particles and Find Centers": [[32, "pick-particles-and-find-centers"]], "Plot the Picked Particles": [[32, "plot-the-picked-particles"]], "Basic Image Array": [[33, "basic-image-array"]], "Stock Image": [[33, "stock-image"]], "Add Noise to the Image": [[33, "add-noise-to-the-image"]], "Adding Noise to a Simulated Stack of Images": [[33, "adding-noise-to-a-simulated-stack-of-images"]], "Noise Estimation and Whitening": [[33, "noise-estimation-and-whitening"], [45, "noise-estimation-and-whitening"]], "Power Spectral Density": [[33, "power-spectral-density"]], "Build Simulated Data": [[34, "build-simulated-data"]], "Circular 2D Gaussian Image": [[34, "circular-2d-gaussian-image"]], "Oval 2D Gaussian Image": [[34, "oval-2d-gaussian-image"]], "Handed Image": [[34, "handed-image"]], "Reflected Image": [[34, "reflected-image"]], "Example Data Set Source": [[34, "example-data-set-source"]], "Basic Class Average": [[34, "basic-class-average"]], "Display Classes": [[34, "display-classes"], [34, "id1"]], "Class Averaging with Noise": [[34, "class-averaging-with-noise"]], "Add Noise to Data Set": [[34, "add-noise-to-data-set"]], "RIR with Noise": [[34, "rir-with-noise"]], "Review a class": [[34, "review-a-class"]], "Alignment Details": [[34, "alignment-details"]], "ClassAvgSource Components": [[34, "classavgsource-components"]], "2D Covariance Estimation": [[35, "d-covariance-estimation"]], "Image Formatting": [[35, "image-formatting"]], "Build Noise Filter": [[35, "build-noise-filter"]], "Specify the CTF Parameters": [[35, "specify-the-ctf-parameters"]], "Initialize Simulation Object and CTF Filters": [[35, "initialize-simulation-object-and-ctf-filters"], [42, "initialize-simulation-object-and-ctf-filters"]], "Build Clean and Noisy Projection Images": [[35, "build-clean-and-noisy-projection-images"]], "Expand Images in the Fourier-Bessel Basis": [[35, "expand-images-in-the-fourier-bessel-basis"]], "Create Cov2D Object and Calculate Mean and Variance for Clean Images": [[35, "create-cov2d-object-and-calculate-mean-and-variance-for-clean-images"]], "Estimate mean and covariance for noisy images with CTF and shrink method": [[35, "estimate-mean-and-covariance-for-noisy-images-with-ctf-and-shrink-method"]], "Estimate Fourier-Bessel Coefficients with Wiener Filter": [[35, "estimate-fourier-bessel-coefficients-with-wiener-filter"]], "Evaluate the Results": [[35, "evaluate-the-results"]], "Covariance 3D Estimation": [[36, "covariance-3d-estimation"]], "Create Simulation Object": [[36, "create-simulation-object"]], "Estimate Mean Volume and Covariance": [[36, "estimate-mean-volume-and-covariance"]], "Use Top Eigenpairs to Form a Basis": [[36, "use-top-eigenpairs-to-form-a-basis"]], "Performance Evaluation": [[36, "performance-evaluation"]], "Results": [[36, "results"]], "CTF: Contrast Transfer Function": [[37, "ctf-contrast-transfer-function"]], "Visualizing the CTF": [[37, "visualizing-the-ctf"]], "Radially Symmetric CTF": [[37, "radially-symmetric-ctf"]], "Elliptical CTF": [[37, "elliptical-ctf"]], "Phase Flipping": [[37, "phase-flipping"]], "Applying CTF Directly to Images": [[37, "applying-ctf-directly-to-images"]], "Generate Example Image": [[37, "generate-example-image"]], "Apply CTF and Phase Flipping": [[37, "apply-ctf-and-phase-flipping"]], "Generate CTF corrupted Images": [[37, "generate-ctf-corrupted-images"]], "Generate Phase Flipped Images": [[37, "generate-phase-flipped-images"]], "Validating CTFFilter": [[37, "validating-ctffilter"]], "Importance of correct CTF Estimation": [[37, "importance-of-correct-ctf-estimation"]], "ASPIRE CtfEstimator": [[37, "aspire-ctfestimator"]], "Using ASPIRE\u2019s CTF Estimate": [[37, "using-aspire-s-ctf-estimate"]], "ASPIRE Sources: CTF and Phase Flipping": [[37, "aspire-sources-ctf-and-phase-flipping"]], "Simulation Source": [[37, "simulation-source"]], "Beyond Simulations: Experimental Data Sources": [[37, "beyond-simulations-experimental-data-sources"]], "CTFFIND4: External Validation": [[37, "ctffind4-external-validation"]], "Generating 3D Volume Projections": [[38, "generating-3d-volume-projections"]], "Configure how many images we\u2019d like to project": [[38, "configure-how-many-images-we-d-like-to-project"]], "Load our Volume data": [[38, "load-our-volume-data"]], "Defining rotations": [[38, "defining-rotations"]], "Configure Noise": [[38, "configure-noise"]], "Setup Simulation Source": [[38, "setup-simulation-source"]], "Yield projection images from the Simulation Source": [[38, "yield-projection-images-from-the-simulation-source"]], "ASPIRE Image Class": [[39, "aspire-image-class"]], "Create an Image Instance": [[39, "create-an-image-instance"]], "Plot the Image Stack": [[39, "plot-the-image-stack"]], "Apply a Uniform Shift": [[39, "apply-a-uniform-shift"]], "Apply Image-wise Shifts": [[39, "apply-image-wise-shifts"]], "Downsampling": [[39, "downsampling"], [42, "downsampling"]], "CTF Filter": [[39, "ctf-filter"]], "Image Expansion": [[40, "image-expansion"]], "Load Initial Images": [[40, "load-initial-images"]], "Expand Images with Normal Fourier-Bessel Basis Method": [[40, "expand-images-with-normal-fourier-bessel-basis-method"]], "Expand Images with Fast FB Basis Method": [[40, "expand-images-with-fast-fb-basis-method"]], "Expand Images with Prolate Spheroidal Wave Function": [[40, "expand-images-with-prolate-spheroidal-wave-function"]], "Expand Images with Fast PSFW": [[40, "expand-images-with-fast-psfw"]], "Side-by-side Comparison": [[40, "side-by-side-comparison"]], "3D Image Orientation": [[42, "d-image-orientation"]], "Create Simulation Object and Obtain True Rotation Angles": [[42, "create-simulation-object-and-obtain-true-rotation-angles"]], "Estimate Orientation and Rotation Angles": [[42, "estimate-orientation-and-rotation-angles"]], "Image Preprocessing": [[43, "image-preprocessing"]], "Specify Parameters": [[43, "specify-parameters"]], "Build Simulation Object and Apply Noise": [[43, "build-simulation-object-and-apply-noise"]], "Apply Independent Preprocessing Techniques": [[43, "apply-independent-preprocessing-techniques"]], "Plot First Image from Each Preprocess Step": [[43, "plot-first-image-from-each-preprocess-step"], [43, "id1"]], "Apply Sequential Preprocessing Techniques": [[43, "apply-sequential-preprocessing-techniques"]], "Apply Chained Preprocessing Techniques": [[43, "apply-chained-preprocessing-techniques"]], "Starfile": [[45, "starfile"]], "Sources": [[45, "sources"]], "Estimate Mean Volume": [[45, "estimate-mean-volume"]], "Visualize Volume": [[45, "visualize-volume"]], "Class Averaging Architecture": [[46, "class-averaging-architecture"]], "ClassAvgSource": [[46, "classavgsource"]], "Classifiers": [[46, "classifiers"]], "Class Selectors": [[46, "class-selectors"]], "Local Class Selectors": [[46, "local-class-selectors"]], "Global Class Selectors": [[46, "global-class-selectors"]], "Class Repulsion": [[46, "class-repulsion"]], "Image Quality Functions": [[46, "image-quality-functions"]], "WeightedImageQualityMixin": [[46, "weightedimagequalitymixin"]], "Averagers": [[46, "averagers"]], "ImageStacker": [[46, "imagestacker"]], "Aspire v0.11.1": [[47, "aspire-v0-11-1"]], "Algorithms for Single Particle Reconstruction": [[47, "algorithms-for-single-particle-reconstruction"]], "Contents": [[47, null]], "Galleries:": [[47, null]], "Indices and tables": [[47, "indices-and-tables"]], "References": [[47, "references"]], "Install Conda": [[48, "install-conda"]], "Getting Started - Installation": [[48, "getting-started-installation"]], "Test the package": [[48, "test-the-package"]], "Optimized Numerical Backends": [[48, "optimized-numerical-backends"]], "Suggested Conda Environments": [[48, "id1"]], "Installing GPU Extensions": [[48, "installing-gpu-extensions"]], "CUDA GPU Extension Versions": [[48, "id2"]], "Generating Documentation": [[48, "generating-documentation"]], "Modules": [[49, "modules"]], "Getting Started - CLI": [[50, "getting-started-cli"]], "1. Particle-Picking": [[50, "particle-picking"]], "2. Particle Extraction": [[50, "particle-extraction"]], "3. Estimate Contrast Transfer Function": [[50, "estimate-contrast-transfer-function"]], "4. Image Preprocessing": [[50, "image-preprocessing"]], "5. Image Denoising": [[50, "image-denoising"]], "6. Orientation Estimation": [[50, "orientation-estimation"]], "7. Reconstructing a mean volume with covariance": [[50, "reconstructing-a-mean-volume-with-covariance"]], "Arguments, options and flags": [[50, "arguments-options-and-flags"]]}, "indexentries": {"aspireexception": [[0, "aspire.exceptions.AspireException"]], "dimensionsincompatible": [[0, "aspire.exceptions.DimensionsIncompatible"]], "errortoobig": [[0, "aspire.exceptions.ErrorTooBig"]], "unknownformat": [[0, "aspire.exceptions.UnknownFormat"]], "wronginput": [[0, "aspire.exceptions.WrongInput"]], "aspire": [[0, "module-aspire"]], "aspire.exceptions": [[0, "module-aspire.exceptions"]], "handle_exception() (in module aspire.exceptions)": [[0, "aspire.exceptions.handle_exception"]], "module": [[0, "module-aspire"], [0, "module-aspire.exceptions"], [1, "module-aspire.abinitio"], [1, "module-aspire.abinitio.commonline_base"], [1, "module-aspire.abinitio.commonline_c3_c4"], [1, "module-aspire.abinitio.commonline_cn"], [1, "module-aspire.abinitio.commonline_ev"], [1, "module-aspire.abinitio.commonline_gcar"], [1, "module-aspire.abinitio.commonline_lud"], [1, "module-aspire.abinitio.commonline_sdp"], [1, "module-aspire.abinitio.commonline_sync"], [1, "module-aspire.abinitio.orientation_src"], [1, "module-aspire.abinitio.sync_voting"], [2, "module-aspire.apple"], [2, "module-aspire.apple.apple"], [2, "module-aspire.apple.helper"], [2, "module-aspire.apple.picking"], [3, "module-aspire.basis"], [3, "module-aspire.basis.basis"], [3, "module-aspire.basis.basis_utils"], [3, "module-aspire.basis.fb"], [3, "module-aspire.basis.fb_2d"], [3, "module-aspire.basis.fb_3d"], [3, "module-aspire.basis.ffb_2d"], [3, "module-aspire.basis.ffb_3d"], [3, "module-aspire.basis.fle_2d"], [3, "module-aspire.basis.fle_2d_utils"], [3, "module-aspire.basis.fpswf_2d"], [3, "module-aspire.basis.fpswf_3d"], [3, "module-aspire.basis.fspca"], [3, "module-aspire.basis.polar_2d"], [3, "module-aspire.basis.pswf_2d"], [3, "module-aspire.basis.pswf_3d"], [3, "module-aspire.basis.pswf_utils"], [3, "module-aspire.basis.steerable"], [4, "module-aspire.classification"], [4, "module-aspire.classification.averager2d"], [4, "module-aspire.classification.class2d"], [4, "module-aspire.classification.class_selection"], [4, "module-aspire.classification.legacy_implementations"], [4, "module-aspire.classification.reddy_chatterji"], [4, "module-aspire.classification.rir_class2d"], [5, "module-aspire.commands"], [5, "module-aspire.commands.apple"], [5, "module-aspire.commands.cov3d"], [5, "module-aspire.commands.denoise"], [5, "module-aspire.commands.estimate_ctf"], [5, "module-aspire.commands.extract_particles"], [5, "module-aspire.commands.orient3d"], [5, "module-aspire.commands.preprocess"], [6, "module-aspire.covariance"], [6, "module-aspire.covariance.covar"], [6, "module-aspire.covariance.covar2d"], [7, "module-aspire.ctf"], [7, "module-aspire.ctf.ctf_estimator"], [8, "module-aspire.denoising"], [8, "module-aspire.denoising.adaptive_support"], [8, "module-aspire.denoising.class_avg"], [8, "module-aspire.denoising.denoised_src"], [8, "module-aspire.denoising.denoiser"], [8, "module-aspire.denoising.denoiser_cov2d"], [9, "module-aspire.image"], [9, "module-aspire.image.image"], [9, "module-aspire.image.image_stacker"], [9, "module-aspire.image.xform"], [10, "module-aspire.noise"], [10, "module-aspire.noise.noise"], [11, "module-aspire.nufft"], [11, "module-aspire.nufft.finufft"], [11, "module-aspire.nufft.utils"], [12, "module-aspire.numeric"], [12, "module-aspire.numeric.base_fft"], [12, "module-aspire.numeric.numpy"], [12, "module-aspire.numeric.pyfftw_fft"], [12, "module-aspire.numeric.scipy_fft"], [13, "module-aspire.numeric.complex_pca"], [13, "module-aspire.numeric.complex_pca.complex_pca"], [13, "module-aspire.numeric.complex_pca.validation"], [14, "module-aspire.operators"], [14, "module-aspire.operators.blk_diag_matrix"], [14, "module-aspire.operators.filters"], [14, "module-aspire.operators.wemd"], [15, "module-aspire.optimization"], [15, "module-aspire.optimization.conj_grad"], [16, "module-aspire.reconstruction"], [16, "module-aspire.reconstruction.estimator"], [16, "module-aspire.reconstruction.kernel"], [16, "module-aspire.reconstruction.mean"], [17, "module-aspire.source"], [17, "module-aspire.source.coordinates"], [17, "module-aspire.source.image"], [17, "module-aspire.source.relion"], [17, "module-aspire.source.simulation"], [18, "module-aspire.storage"], [18, "module-aspire.storage.mrc"], [18, "module-aspire.storage.starfile"], [19, "module-aspire.utils"], [19, "module-aspire.utils.cell"], [19, "module-aspire.utils.coor_trans"], [19, "module-aspire.utils.filter_to_fb_mat"], [19, "module-aspire.utils.logging"], [19, "module-aspire.utils.matlab_compat"], [19, "module-aspire.utils.matrix"], [19, "module-aspire.utils.misc"], [19, "module-aspire.utils.multiprocessing"], [19, "module-aspire.utils.random"], [19, "module-aspire.utils.relion_interop"], [19, "module-aspire.utils.resolution_estimation"], [19, "module-aspire.utils.rotation"], [19, "module-aspire.utils.types"], [19, "module-aspire.utils.units"], [20, "module-aspire.volume"], [20, "module-aspire.volume.volume"], [20, "module-aspire.volume.volume_synthesis"]], "clorient3d (class in aspire.abinitio.commonline_base)": [[1, "aspire.abinitio.commonline_base.CLOrient3D"]], "clsymmetryc3c4 (class in aspire.abinitio.commonline_c3_c4)": [[1, "aspire.abinitio.commonline_c3_c4.CLSymmetryC3C4"]], "clsymmetrycn (class in aspire.abinitio.commonline_cn)": [[1, "aspire.abinitio.commonline_cn.CLSymmetryCn"]], "clsyncvoting (class in aspire.abinitio.commonline_sync)": [[1, "aspire.abinitio.commonline_sync.CLSyncVoting"]], "commlineev (class in aspire.abinitio.commonline_ev)": [[1, "aspire.abinitio.commonline_ev.CommLineEV"]], "commlinegcar (class in aspire.abinitio.commonline_gcar)": [[1, "aspire.abinitio.commonline_gcar.CommLineGCAR"]], "commlinelud (class in aspire.abinitio.commonline_lud)": [[1, "aspire.abinitio.commonline_lud.CommLineLUD"]], "commlinesdp (class in aspire.abinitio.commonline_sdp)": [[1, "aspire.abinitio.commonline_sdp.CommLineSDP"]], "meanouterproductestimator (class in aspire.abinitio.commonline_cn)": [[1, "aspire.abinitio.commonline_cn.MeanOuterProductEstimator"]], "orientestsource (class in aspire.abinitio.orientation_src)": [[1, "aspire.abinitio.orientation_src.OrientEstSource"]], "syncvotingmixin (class in aspire.abinitio.sync_voting)": [[1, "aspire.abinitio.sync_voting.SyncVotingMixin"]], "aspire.abinitio": [[1, "module-aspire.abinitio"]], "aspire.abinitio.commonline_base": [[1, "module-aspire.abinitio.commonline_base"]], "aspire.abinitio.commonline_c3_c4": [[1, "module-aspire.abinitio.commonline_c3_c4"]], "aspire.abinitio.commonline_cn": [[1, "module-aspire.abinitio.commonline_cn"]], "aspire.abinitio.commonline_ev": [[1, "module-aspire.abinitio.commonline_ev"]], "aspire.abinitio.commonline_gcar": [[1, "module-aspire.abinitio.commonline_gcar"]], "aspire.abinitio.commonline_lud": [[1, "module-aspire.abinitio.commonline_lud"]], "aspire.abinitio.commonline_sdp": [[1, "module-aspire.abinitio.commonline_sdp"]], "aspire.abinitio.commonline_sync": [[1, "module-aspire.abinitio.commonline_sync"]], "aspire.abinitio.orientation_src": [[1, "module-aspire.abinitio.orientation_src"]], "aspire.abinitio.sync_voting": [[1, "module-aspire.abinitio.sync_voting"]], "build_clmatrix() (aspire.abinitio.commonline_base.clorient3d method)": [[1, "aspire.abinitio.commonline_base.CLOrient3D.build_clmatrix"]], "cl_angles_to_ind() (aspire.abinitio.commonline_c3_c4.clsymmetryc3c4 static method)": [[1, "aspire.abinitio.commonline_c3_c4.CLSymmetryC3C4.cl_angles_to_ind"]], "dtype (aspire.abinitio.commonline_cn.meanouterproductestimator attribute)": [[1, "aspire.abinitio.commonline_cn.MeanOuterProductEstimator.dtype"]], "estimate() (aspire.abinitio.commonline_ev.commlineev method)": [[1, "aspire.abinitio.commonline_ev.CommLineEV.estimate"]], "estimate() (aspire.abinitio.commonline_gcar.commlinegcar method)": [[1, "aspire.abinitio.commonline_gcar.CommLineGCAR.estimate"]], "estimate() (aspire.abinitio.commonline_lud.commlinelud method)": [[1, "aspire.abinitio.commonline_lud.CommLineLUD.estimate"]], "estimate() (aspire.abinitio.commonline_sdp.commlinesdp method)": [[1, "aspire.abinitio.commonline_sdp.CommLineSDP.estimate"]], "estimate_rotations() (aspire.abinitio.commonline_base.clorient3d method)": [[1, "aspire.abinitio.commonline_base.CLOrient3D.estimate_rotations"]], "estimate_rotations() (aspire.abinitio.commonline_c3_c4.clsymmetryc3c4 method)": [[1, "aspire.abinitio.commonline_c3_c4.CLSymmetryC3C4.estimate_rotations"]], "estimate_rotations() (aspire.abinitio.commonline_cn.clsymmetrycn method)": [[1, "aspire.abinitio.commonline_cn.CLSymmetryCn.estimate_rotations"]], "estimate_rotations() (aspire.abinitio.commonline_sync.clsyncvoting method)": [[1, "aspire.abinitio.commonline_sync.CLSyncVoting.estimate_rotations"]], "estimate_shifts() (aspire.abinitio.commonline_base.clorient3d method)": [[1, "aspire.abinitio.commonline_base.CLOrient3D.estimate_shifts"]], "g_sync() (aspire.abinitio.commonline_c3_c4.clsymmetryc3c4 static method)": [[1, "aspire.abinitio.commonline_c3_c4.CLSymmetryC3C4.g_sync"]], "generate_candidate_rots() (aspire.abinitio.commonline_cn.clsymmetrycn static method)": [[1, "aspire.abinitio.commonline_cn.CLSymmetryCn.generate_candidate_rots"]], "output() (aspire.abinitio.commonline_ev.commlineev method)": [[1, "aspire.abinitio.commonline_ev.CommLineEV.output"]], "output() (aspire.abinitio.commonline_gcar.commlinegcar method)": [[1, "aspire.abinitio.commonline_gcar.CommLineGCAR.output"]], "output() (aspire.abinitio.commonline_lud.commlinelud method)": [[1, "aspire.abinitio.commonline_lud.CommLineLUD.output"]], "output() (aspire.abinitio.commonline_sdp.commlinesdp method)": [[1, "aspire.abinitio.commonline_sdp.CommLineSDP.output"]], "push() (aspire.abinitio.commonline_cn.meanouterproductestimator method)": [[1, "aspire.abinitio.commonline_cn.MeanOuterProductEstimator.push"]], "relative_rots_to_cl_indices() (aspire.abinitio.commonline_cn.clsymmetrycn static method)": [[1, "aspire.abinitio.commonline_cn.CLSymmetryCn.relative_rots_to_cl_indices"]], "save_rotations() (aspire.abinitio.commonline_base.clorient3d method)": [[1, "aspire.abinitio.commonline_base.CLOrient3D.save_rotations"]], "synchronized_mean() (aspire.abinitio.commonline_cn.meanouterproductestimator method)": [[1, "aspire.abinitio.commonline_cn.MeanOuterProductEstimator.synchronized_mean"]], "syncmatrix_vote() (aspire.abinitio.commonline_sync.clsyncvoting method)": [[1, "aspire.abinitio.commonline_sync.CLSyncVoting.syncmatrix_vote"]], "apple (class in aspire.apple.apple)": [[2, "aspire.apple.apple.Apple"]], "picker (class in aspire.apple.picking)": [[2, "aspire.apple.picking.Picker"]], "pickerhelper (class in aspire.apple.helper)": [[2, "aspire.apple.helper.PickerHelper"]], "aspire.apple": [[2, "module-aspire.apple"]], "aspire.apple.apple": [[2, "module-aspire.apple.apple"]], "aspire.apple.helper": [[2, "module-aspire.apple.helper"]], "aspire.apple.picking": [[2, "module-aspire.apple.picking"]], "extract_particles() (aspire.apple.picking.picker method)": [[2, "aspire.apple.picking.Picker.extract_particles"]], "extract_query() (aspire.apple.helper.pickerhelper class method)": [[2, "aspire.apple.helper.PickerHelper.extract_query"]], "extract_references() (aspire.apple.helper.pickerhelper class method)": [[2, "aspire.apple.helper.PickerHelper.extract_references"]], "extract_windows() (aspire.apple.helper.pickerhelper class method)": [[2, "aspire.apple.helper.PickerHelper.extract_windows"]], "gaussian_filter() (aspire.apple.helper.pickerhelper class method)": [[2, "aspire.apple.helper.PickerHelper.gaussian_filter"]], "get_maps() (aspire.apple.picking.picker method)": [[2, "aspire.apple.picking.Picker.get_maps"]], "get_training_set() (aspire.apple.helper.pickerhelper class method)": [[2, "aspire.apple.helper.PickerHelper.get_training_set"]], "moments() (aspire.apple.helper.pickerhelper class method)": [[2, "aspire.apple.helper.PickerHelper.moments"]], "morphology_ops() (aspire.apple.picking.picker method)": [[2, "aspire.apple.picking.Picker.morphology_ops"]], "particle_image() (aspire.apple.apple.apple method)": [[2, "aspire.apple.apple.Apple.particle_image"]], "process_folder() (aspire.apple.apple.apple method)": [[2, "aspire.apple.apple.Apple.process_folder"]], "process_micrograph() (aspire.apple.apple.apple method)": [[2, "aspire.apple.apple.Apple.process_micrograph"]], "process_micrograph_centers() (aspire.apple.apple.apple method)": [[2, "aspire.apple.apple.Apple.process_micrograph_centers"]], "process_micrograph_plots() (aspire.apple.apple.apple method)": [[2, "aspire.apple.apple.Apple.process_micrograph_plots"]], "query_score() (aspire.apple.picking.picker method)": [[2, "aspire.apple.picking.Picker.query_score"]], "read_mrc() (aspire.apple.picking.picker method)": [[2, "aspire.apple.picking.Picker.read_mrc"]], "reference_size() (aspire.apple.helper.pickerhelper class method)": [[2, "aspire.apple.helper.PickerHelper.reference_size"]], "run_svm() (aspire.apple.picking.picker method)": [[2, "aspire.apple.picking.Picker.run_svm"]], "verify_input_values() (aspire.apple.apple.apple method)": [[2, "aspire.apple.apple.Apple.verify_input_values"]], "bnmatrix (class in aspire.basis.pswf_utils)": [[3, "aspire.basis.pswf_utils.BNMatrix"]], "basis (class in aspire.basis.basis)": [[3, "aspire.basis.basis.Basis"]], "fbbasis2d (class in aspire.basis.fb_2d)": [[3, "aspire.basis.fb_2d.FBBasis2D"]], "fbbasis3d (class in aspire.basis.fb_3d)": [[3, "aspire.basis.fb_3d.FBBasis3D"]], "fbbasismixin (class in aspire.basis.fb)": [[3, "aspire.basis.fb.FBBasisMixin"]], "ffbbasis2d (class in aspire.basis.ffb_2d)": [[3, "aspire.basis.ffb_2d.FFBBasis2D"]], "ffbbasis3d (class in aspire.basis.ffb_3d)": [[3, "aspire.basis.ffb_3d.FFBBasis3D"]], "flebasis2d (class in aspire.basis.fle_2d)": [[3, "aspire.basis.fle_2d.FLEBasis2D"]], "fpswfbasis2d (class in aspire.basis.fpswf_2d)": [[3, "aspire.basis.fpswf_2d.FPSWFBasis2D"]], "fpswfbasis3d (class in aspire.basis.fpswf_3d)": [[3, "aspire.basis.fpswf_3d.FPSWFBasis3D"]], "fspcabasis (class in aspire.basis.fspca)": [[3, "aspire.basis.fspca.FSPCABasis"]], "pswfbasis2d (class in aspire.basis.pswf_2d)": [[3, "aspire.basis.pswf_2d.PSWFBasis2D"]], "pswfbasis3d (class in aspire.basis.pswf_3d)": [[3, "aspire.basis.pswf_3d.PSWFBasis3D"]], "polarbasis2d (class in aspire.basis.polar_2d)": [[3, "aspire.basis.polar_2d.PolarBasis2D"]], "steerablebasis2d (class in aspire.basis.steerable)": [[3, "aspire.basis.steerable.SteerableBasis2D"]], "all_besselj_zeros() (in module aspire.basis.basis_utils)": [[3, "aspire.basis.basis_utils.all_besselj_zeros"]], "aspire.basis": [[3, "module-aspire.basis"]], "aspire.basis.basis": [[3, "module-aspire.basis.basis"]], "aspire.basis.basis_utils": [[3, "module-aspire.basis.basis_utils"]], "aspire.basis.fb": [[3, "module-aspire.basis.fb"]], "aspire.basis.fb_2d": [[3, "module-aspire.basis.fb_2d"]], "aspire.basis.fb_3d": [[3, "module-aspire.basis.fb_3d"]], "aspire.basis.ffb_2d": [[3, "module-aspire.basis.ffb_2d"]], "aspire.basis.ffb_3d": [[3, "module-aspire.basis.ffb_3d"]], "aspire.basis.fle_2d": [[3, "module-aspire.basis.fle_2d"]], "aspire.basis.fle_2d_utils": [[3, "module-aspire.basis.fle_2d_utils"]], "aspire.basis.fpswf_2d": [[3, "module-aspire.basis.fpswf_2d"]], "aspire.basis.fpswf_3d": [[3, "module-aspire.basis.fpswf_3d"]], "aspire.basis.fspca": [[3, "module-aspire.basis.fspca"]], "aspire.basis.polar_2d": [[3, "module-aspire.basis.polar_2d"]], "aspire.basis.pswf_2d": [[3, "module-aspire.basis.pswf_2d"]], "aspire.basis.pswf_3d": [[3, "module-aspire.basis.pswf_3d"]], "aspire.basis.pswf_utils": [[3, "module-aspire.basis.pswf_utils"]], "aspire.basis.steerable": [[3, "module-aspire.basis.steerable"]], "barycentric_interp_sparse() (in module aspire.basis.fle_2d_utils)": [[3, "aspire.basis.fle_2d_utils.barycentric_interp_sparse"]], "basis_norm_2d() (aspire.basis.fb_2d.fbbasis2d method)": [[3, "aspire.basis.fb_2d.FBBasis2D.basis_norm_2d"]], "basis_norm_3d() (aspire.basis.fb_3d.fbbasis3d method)": [[3, "aspire.basis.fb_3d.FBBasis3D.basis_norm_3d"]], "besselj_newton() (in module aspire.basis.basis_utils)": [[3, "aspire.basis.basis_utils.besselj_newton"]], "besselj_zeros() (in module aspire.basis.basis_utils)": [[3, "aspire.basis.basis_utils.besselj_zeros"]], "build() (aspire.basis.fspca.fspcabasis method)": [[3, "aspire.basis.fspca.FSPCABasis.build"]], "calculate_bispectrum() (aspire.basis.fb_2d.fbbasis2d method)": [[3, "aspire.basis.fb_2d.FBBasis2D.calculate_bispectrum"]], "calculate_bispectrum() (aspire.basis.fspca.fspcabasis method)": [[3, "aspire.basis.fspca.FSPCABasis.calculate_bispectrum"]], "calculate_bispectrum() (aspire.basis.steerable.steerablebasis2d method)": [[3, "aspire.basis.steerable.SteerableBasis2D.calculate_bispectrum"]], "check_besselj_zeros() (in module aspire.basis.basis_utils)": [[3, "aspire.basis.basis_utils.check_besselj_zeros"]], "complex_rotate() (aspire.basis.steerable.steerablebasis2d method)": [[3, "aspire.basis.steerable.SteerableBasis2D.complex_rotate"]], "d_decay_approx_fun() (in module aspire.basis.basis_utils)": [[3, "aspire.basis.basis_utils.d_decay_approx_fun"]], "dense_mat() (aspire.basis.pswf_utils.bnmatrix method)": [[3, "aspire.basis.pswf_utils.BNMatrix.dense_mat"]], "eigen_images() (aspire.basis.fspca.fspcabasis method)": [[3, "aspire.basis.fspca.FSPCABasis.eigen_images"]], "evaluate() (aspire.basis.basis.basis method)": [[3, "aspire.basis.basis.Basis.evaluate"]], "evaluate() (aspire.basis.fspca.fspcabasis method)": [[3, "aspire.basis.fspca.FSPCABasis.evaluate"]], "evaluate_t() (aspire.basis.basis.basis method)": [[3, "aspire.basis.basis.Basis.evaluate_t"]], "evaluate_to_image_basis() (aspire.basis.fspca.fspcabasis method)": [[3, "aspire.basis.fspca.FSPCABasis.evaluate_to_image_basis"]], "expand() (aspire.basis.basis.basis method)": [[3, "aspire.basis.basis.Basis.expand"]], "expand() (aspire.basis.fspca.fspcabasis method)": [[3, "aspire.basis.fspca.FSPCABasis.expand"]], "expand_from_image_basis() (aspire.basis.fspca.fspcabasis method)": [[3, "aspire.basis.fspca.FSPCABasis.expand_from_image_basis"]], "get_eig_vectors() (aspire.basis.pswf_utils.bnmatrix method)": [[3, "aspire.basis.pswf_utils.BNMatrix.get_eig_vectors"]], "get_radial() (aspire.basis.ffb_2d.ffbbasis2d method)": [[3, "aspire.basis.ffb_2d.FFBBasis2D.get_radial"]], "indices() (aspire.basis.basis.basis method)": [[3, "aspire.basis.basis.Basis.indices"]], "indices() (aspire.basis.fb_2d.fbbasis2d method)": [[3, "aspire.basis.fb_2d.FBBasis2D.indices"]], "indices() (aspire.basis.fb_3d.fbbasis3d method)": [[3, "aspire.basis.fb_3d.FBBasis3D.indices"]], "indices() (aspire.basis.fle_2d.flebasis2d method)": [[3, "aspire.basis.fle_2d.FLEBasis2D.indices"]], "k_operator() (in module aspire.basis.basis_utils)": [[3, "aspire.basis.basis_utils.k_operator"]], "lgwt() (in module aspire.basis.basis_utils)": [[3, "aspire.basis.basis_utils.lgwt"]], "lowpass() (aspire.basis.fle_2d.flebasis2d method)": [[3, "aspire.basis.fle_2d.FLEBasis2D.lowpass"]], "mat_evaluate() (aspire.basis.basis.basis method)": [[3, "aspire.basis.basis.Basis.mat_evaluate"]], "mat_evaluate_t() (aspire.basis.basis.basis method)": [[3, "aspire.basis.basis.Basis.mat_evaluate_t"]], "norm_assoc_legendre() (in module aspire.basis.basis_utils)": [[3, "aspire.basis.basis_utils.norm_assoc_legendre"]], "norms() (aspire.basis.basis.basis method)": [[3, "aspire.basis.basis.Basis.norms"]], "norms() (aspire.basis.fb_2d.fbbasis2d method)": [[3, "aspire.basis.fb_2d.FBBasis2D.norms"]], "norms() (aspire.basis.fb_3d.fbbasis3d method)": [[3, "aspire.basis.fb_3d.FBBasis3D.norms"]], "p_n() (in module aspire.basis.basis_utils)": [[3, "aspire.basis.basis_utils.p_n"]], "precomp_transform_complex_to_real() (in module aspire.basis.fle_2d_utils)": [[3, "aspire.basis.fle_2d_utils.precomp_transform_complex_to_real"]], "pswf_func2d() (aspire.basis.pswf_2d.pswfbasis2d method)": [[3, "aspire.basis.pswf_2d.PSWFBasis2D.pswf_func2d"]], "radial_convolve() (aspire.basis.fle_2d.flebasis2d method)": [[3, "aspire.basis.fle_2d.FLEBasis2D.radial_convolve"]], "real_sph_harmonic() (in module aspire.basis.basis_utils)": [[3, "aspire.basis.basis_utils.real_sph_harmonic"]], "rotate() (aspire.basis.steerable.steerablebasis2d method)": [[3, "aspire.basis.steerable.SteerableBasis2D.rotate"]], "shape() (aspire.basis.pswf_utils.bnmatrix method)": [[3, "aspire.basis.pswf_utils.BNMatrix.shape"]], "shift() (aspire.basis.fspca.fspcabasis method)": [[3, "aspire.basis.fspca.FSPCABasis.shift"]], "shift() (aspire.basis.steerable.steerablebasis2d method)": [[3, "aspire.basis.steerable.SteerableBasis2D.shift"]], "sph_bessel() (in module aspire.basis.basis_utils)": [[3, "aspire.basis.basis_utils.sph_bessel"]], "t_radial_part_mat() (in module aspire.basis.basis_utils)": [[3, "aspire.basis.basis_utils.t_radial_part_mat"]], "t_x_derivative_mat() (in module aspire.basis.basis_utils)": [[3, "aspire.basis.basis_utils.t_x_derivative_mat"]], "t_x_mat() (in module aspire.basis.basis_utils)": [[3, "aspire.basis.basis_utils.t_x_mat"]], "t_x_mat_dot() (in module aspire.basis.basis_utils)": [[3, "aspire.basis.basis_utils.t_x_mat_dot"]], "to_complex() (aspire.basis.fb_2d.fbbasis2d method)": [[3, "aspire.basis.fb_2d.FBBasis2D.to_complex"]], "to_complex() (aspire.basis.fspca.fspcabasis method)": [[3, "aspire.basis.fspca.FSPCABasis.to_complex"]], "to_real() (aspire.basis.fb_2d.fbbasis2d method)": [[3, "aspire.basis.fb_2d.FBBasis2D.to_real"]], "to_real() (aspire.basis.fspca.fspcabasis method)": [[3, "aspire.basis.fspca.FSPCABasis.to_real"]], "transform_complex_to_real() (in module aspire.basis.fle_2d_utils)": [[3, "aspire.basis.fle_2d_utils.transform_complex_to_real"]], "unique_coords_nd() (in module aspire.basis.basis_utils)": [[3, "aspire.basis.basis_utils.unique_coords_nd"]], "aligningaverager2d (class in aspire.classification.averager2d)": [[4, "aspire.classification.averager2d.AligningAverager2D"]], "averager2d (class in aspire.classification.averager2d)": [[4, "aspire.classification.averager2d.Averager2D"]], "bfraverager2d (class in aspire.classification.averager2d)": [[4, "aspire.classification.averager2d.BFRAverager2D"]], "bfsraverager2d (class in aspire.classification.averager2d)": [[4, "aspire.classification.averager2d.BFSRAverager2D"]], "bfsreddychatterjiaverager2d (class in aspire.classification.averager2d)": [[4, "aspire.classification.averager2d.BFSReddyChatterjiAverager2D"]], "bandedsnrimagequalityfunction (class in aspire.classification.class_selection)": [[4, "aspire.classification.class_selection.BandedSNRImageQualityFunction"]], "bandpassimagequalityfunction (class in aspire.classification.class_selection)": [[4, "aspire.classification.class_selection.BandpassImageQualityFunction"]], "bumpweightedimagequalitymixin (class in aspire.classification.class_selection)": [[4, "aspire.classification.class_selection.BumpWeightedImageQualityMixin"]], "bumpweightedvarianceimagequalityfunction (class in aspire.classification.class_selection)": [[4, "aspire.classification.class_selection.BumpWeightedVarianceImageQualityFunction"]], "class2d (class in aspire.classification.class2d)": [[4, "aspire.classification.class2d.Class2D"]], "classselector (class in aspire.classification.class_selection)": [[4, "aspire.classification.class_selection.ClassSelector"]], "distanceclassselector (class in aspire.classification.class_selection)": [[4, "aspire.classification.class_selection.DistanceClassSelector"]], "emaverager2d (class in aspire.classification.averager2d)": [[4, "aspire.classification.averager2d.EMAverager2D"]], "ftkaverager2d (class in aspire.classification.averager2d)": [[4, "aspire.classification.averager2d.FTKAverager2D"]], "globalclassselector (class in aspire.classification.class_selection)": [[4, "aspire.classification.class_selection.GlobalClassSelector"]], "globalwithrepulsionclassselector (class in aspire.classification.class_selection)": [[4, "aspire.classification.class_selection.GlobalWithRepulsionClassSelector"]], "greedyclassrepulsionmixin (class in aspire.classification.class_selection)": [[4, "aspire.classification.class_selection.GreedyClassRepulsionMixin"]], "imagequalityfunction (class in aspire.classification.class_selection)": [[4, "aspire.classification.class_selection.ImageQualityFunction"]], "neighborvarianceclassselector (class in aspire.classification.class_selection)": [[4, "aspire.classification.class_selection.NeighborVarianceClassSelector"]], "neighborvariancewithrepulsionclassselector (class in aspire.classification.class_selection)": [[4, "aspire.classification.class_selection.NeighborVarianceWithRepulsionClassSelector"]], "rirclass2d (class in aspire.classification.rir_class2d)": [[4, "aspire.classification.rir_class2d.RIRClass2D"]], "rampweightedimagequalitymixin (class in aspire.classification.class_selection)": [[4, "aspire.classification.class_selection.RampWeightedImageQualityMixin"]], "rampweightedvarianceimagequalityfunction (class in aspire.classification.class_selection)": [[4, "aspire.classification.class_selection.RampWeightedVarianceImageQualityFunction"]], "randomclassselector (class in aspire.classification.class_selection)": [[4, "aspire.classification.class_selection.RandomClassSelector"]], "reddychatterjiaverager2d (class in aspire.classification.averager2d)": [[4, "aspire.classification.averager2d.ReddyChatterjiAverager2D"]], "topclassselector (class in aspire.classification.class_selection)": [[4, "aspire.classification.class_selection.TopClassSelector"]], "varianceimagequalityfunction (class in aspire.classification.class_selection)": [[4, "aspire.classification.class_selection.VarianceImageQualityFunction"]], "weightedimagequalitymixin (class in aspire.classification.class_selection)": [[4, "aspire.classification.class_selection.WeightedImageQualityMixin"]], "align() (aspire.classification.averager2d.aligningaverager2d method)": [[4, "aspire.classification.averager2d.AligningAverager2D.align"]], "align() (aspire.classification.averager2d.bfraverager2d method)": [[4, "aspire.classification.averager2d.BFRAverager2D.align"]], "align() (aspire.classification.averager2d.bfsraverager2d method)": [[4, "aspire.classification.averager2d.BFSRAverager2D.align"]], "align() (aspire.classification.averager2d.bfsreddychatterjiaverager2d method)": [[4, "aspire.classification.averager2d.BFSReddyChatterjiAverager2D.align"]], "align() (aspire.classification.averager2d.reddychatterjiaverager2d method)": [[4, "aspire.classification.averager2d.ReddyChatterjiAverager2D.align"]], "aspire.classification": [[4, "module-aspire.classification"]], "aspire.classification.averager2d": [[4, "module-aspire.classification.averager2d"]], "aspire.classification.class2d": [[4, "module-aspire.classification.class2d"]], "aspire.classification.class_selection": [[4, "module-aspire.classification.class_selection"]], "aspire.classification.legacy_implementations": [[4, "module-aspire.classification.legacy_implementations"]], "aspire.classification.reddy_chatterji": [[4, "module-aspire.classification.reddy_chatterji"]], "aspire.classification.rir_class2d": [[4, "module-aspire.classification.rir_class2d"]], "average() (aspire.classification.averager2d.aligningaverager2d method)": [[4, "aspire.classification.averager2d.AligningAverager2D.average"]], "average() (aspire.classification.averager2d.averager2d method)": [[4, "aspire.classification.averager2d.Averager2D.average"]], "average() (aspire.classification.averager2d.bfsreddychatterjiaverager2d method)": [[4, "aspire.classification.averager2d.BFSReddyChatterjiAverager2D.average"]], "average() (aspire.classification.averager2d.reddychatterjiaverager2d method)": [[4, "aspire.classification.averager2d.ReddyChatterjiAverager2D.average"]], "bispec_2drot_large() (in module aspire.classification.legacy_implementations)": [[4, "aspire.classification.legacy_implementations.bispec_2drot_large"]], "bispec_operator_1() (in module aspire.classification.legacy_implementations)": [[4, "aspire.classification.legacy_implementations.bispec_operator_1"]], "bispectrum() (aspire.classification.rir_class2d.rirclass2d method)": [[4, "aspire.classification.rir_class2d.RIRClass2D.bispectrum"]], "classify() (aspire.classification.class2d.class2d method)": [[4, "aspire.classification.class2d.Class2D.classify"]], "classify() (aspire.classification.rir_class2d.rirclass2d method)": [[4, "aspire.classification.rir_class2d.RIRClass2D.classify"]], "heap_ids (aspire.classification.class_selection.globalclassselector property)": [[4, "aspire.classification.class_selection.GlobalClassSelector.heap_ids"]], "heap_idx_map (aspire.classification.class_selection.globalclassselector property)": [[4, "aspire.classification.class_selection.GlobalClassSelector.heap_idx_map"]], "nn_classification() (aspire.classification.rir_class2d.rirclass2d method)": [[4, "aspire.classification.rir_class2d.RIRClass2D.nn_classification"]], "pca() (aspire.classification.rir_class2d.rirclass2d method)": [[4, "aspire.classification.rir_class2d.RIRClass2D.pca"]], "pca_y() (in module aspire.classification.legacy_implementations)": [[4, "aspire.classification.legacy_implementations.pca_y"]], "quality_scores (aspire.classification.class_selection.classselector property)": [[4, "aspire.classification.class_selection.ClassSelector.quality_scores"]], "reddy_chatterji_register() (in module aspire.classification.reddy_chatterji)": [[4, "aspire.classification.reddy_chatterji.reddy_chatterji_register"]], "select() (aspire.classification.class_selection.classselector method)": [[4, "aspire.classification.class_selection.ClassSelector.select"]], "weights() (aspire.classification.class_selection.weightedimagequalitymixin method)": [[4, "aspire.classification.class_selection.WeightedImageQualityMixin.weights"]], "aspire.commands": [[5, "module-aspire.commands"]], "aspire.commands.apple": [[5, "module-aspire.commands.apple"]], "aspire.commands.cov3d": [[5, "module-aspire.commands.cov3d"]], "aspire.commands.denoise": [[5, "module-aspire.commands.denoise"]], "aspire.commands.estimate_ctf": [[5, "module-aspire.commands.estimate_ctf"]], "aspire.commands.extract_particles": [[5, "module-aspire.commands.extract_particles"]], "aspire.commands.orient3d": [[5, "module-aspire.commands.orient3d"]], "aspire.commands.preprocess": [[5, "module-aspire.commands.preprocess"]], "batchedrotcov2d (class in aspire.covariance.covar2d)": [[6, "aspire.covariance.covar2d.BatchedRotCov2D"]], "covarianceestimator (class in aspire.covariance.covar)": [[6, "aspire.covariance.covar.CovarianceEstimator"]], "rotcov2d (class in aspire.covariance.covar2d)": [[6, "aspire.covariance.covar2d.RotCov2D"]], "apply_kernel() (aspire.covariance.covar.covarianceestimator method)": [[6, "aspire.covariance.covar.CovarianceEstimator.apply_kernel"]], "aspire.covariance": [[6, "module-aspire.covariance"]], "aspire.covariance.covar": [[6, "module-aspire.covariance.covar"]], "aspire.covariance.covar2d": [[6, "module-aspire.covariance.covar2d"]], "compute_kernel() (aspire.covariance.covar.covarianceestimator method)": [[6, "aspire.covariance.covar.CovarianceEstimator.compute_kernel"]], "conj_grad() (aspire.covariance.covar.covarianceestimator method)": [[6, "aspire.covariance.covar.CovarianceEstimator.conj_grad"]], "estimate() (aspire.covariance.covar.covarianceestimator method)": [[6, "aspire.covariance.covar.CovarianceEstimator.estimate"]], "get_covar() (aspire.covariance.covar2d.batchedrotcov2d method)": [[6, "aspire.covariance.covar2d.BatchedRotCov2D.get_covar"]], "get_covar() (aspire.covariance.covar2d.rotcov2d method)": [[6, "aspire.covariance.covar2d.RotCov2D.get_covar"]], "get_cwf_coeffs() (aspire.covariance.covar2d.batchedrotcov2d method)": [[6, "aspire.covariance.covar2d.BatchedRotCov2D.get_cwf_coeffs"]], "get_cwf_coeffs() (aspire.covariance.covar2d.rotcov2d method)": [[6, "aspire.covariance.covar2d.RotCov2D.get_cwf_coeffs"]], "get_mean() (aspire.covariance.covar2d.batchedrotcov2d method)": [[6, "aspire.covariance.covar2d.BatchedRotCov2D.get_mean"]], "get_mean() (aspire.covariance.covar2d.rotcov2d method)": [[6, "aspire.covariance.covar2d.RotCov2D.get_mean"]], "shrink_covar() (in module aspire.covariance.covar2d)": [[6, "aspire.covariance.covar2d.shrink_covar"]], "shrink_covar_backward() (aspire.covariance.covar2d.rotcov2d method)": [[6, "aspire.covariance.covar2d.RotCov2D.shrink_covar_backward"]], "src_backward() (aspire.covariance.covar.covarianceestimator method)": [[6, "aspire.covariance.covar.CovarianceEstimator.src_backward"]], "ctfestimator (class in aspire.ctf.ctf_estimator)": [[7, "aspire.ctf.ctf_estimator.CtfEstimator"]], "aspire.ctf": [[7, "module-aspire.ctf"]], "aspire.ctf.ctf_estimator": [[7, "module-aspire.ctf.ctf_estimator"]], "background_subtract_1d() (aspire.ctf.ctf_estimator.ctfestimator method)": [[7, "aspire.ctf.ctf_estimator.CtfEstimator.background_subtract_1d"]], "background_subtract_2d() (aspire.ctf.ctf_estimator.ctfestimator method)": [[7, "aspire.ctf.ctf_estimator.CtfEstimator.background_subtract_2d"]], "elliptical_average() (aspire.ctf.ctf_estimator.ctfestimator method)": [[7, "aspire.ctf.ctf_estimator.CtfEstimator.elliptical_average"]], "estimate_ctf() (in module aspire.ctf.ctf_estimator)": [[7, "aspire.ctf.ctf_estimator.estimate_ctf"]], "estimate_psd() (aspire.ctf.ctf_estimator.ctfestimator method)": [[7, "aspire.ctf.ctf_estimator.CtfEstimator.estimate_psd"]], "gd() (aspire.ctf.ctf_estimator.ctfestimator method)": [[7, "aspire.ctf.ctf_estimator.CtfEstimator.gd"]], "generate_ctf() (aspire.ctf.ctf_estimator.ctfestimator method)": [[7, "aspire.ctf.ctf_estimator.CtfEstimator.generate_ctf"]], "micrograph_to_blocks() (aspire.ctf.ctf_estimator.ctfestimator method)": [[7, "aspire.ctf.ctf_estimator.CtfEstimator.micrograph_to_blocks"]], "normalize_blocks() (aspire.ctf.ctf_estimator.ctfestimator method)": [[7, "aspire.ctf.ctf_estimator.CtfEstimator.normalize_blocks"]], "opt1d() (aspire.ctf.ctf_estimator.ctfestimator method)": [[7, "aspire.ctf.ctf_estimator.CtfEstimator.opt1d"]], "pca() (aspire.ctf.ctf_estimator.ctfestimator method)": [[7, "aspire.ctf.ctf_estimator.CtfEstimator.pca"]], "preprocess_micrograph() (aspire.ctf.ctf_estimator.ctfestimator method)": [[7, "aspire.ctf.ctf_estimator.CtfEstimator.preprocess_micrograph"]], "set_angle() (aspire.ctf.ctf_estimator.ctfestimator method)": [[7, "aspire.ctf.ctf_estimator.CtfEstimator.set_angle"]], "set_df1() (aspire.ctf.ctf_estimator.ctfestimator method)": [[7, "aspire.ctf.ctf_estimator.CtfEstimator.set_df1"]], "set_df2() (aspire.ctf.ctf_estimator.ctfestimator method)": [[7, "aspire.ctf.ctf_estimator.CtfEstimator.set_df2"]], "tapers() (aspire.ctf.ctf_estimator.ctfestimator method)": [[7, "aspire.ctf.ctf_estimator.CtfEstimator.tapers"]], "write_star() (aspire.ctf.ctf_estimator.ctfestimator method)": [[7, "aspire.ctf.ctf_estimator.CtfEstimator.write_star"]], "classavgsource (class in aspire.denoising.class_avg)": [[8, "aspire.denoising.class_avg.ClassAvgSource"]], "classavgsourcev110 (class in aspire.denoising.class_avg)": [[8, "aspire.denoising.class_avg.ClassAvgSourcev110"]], "debugclassavgsource (class in aspire.denoising.class_avg)": [[8, "aspire.denoising.class_avg.DebugClassAvgSource"]], "defaultclassavgsource() (in module aspire.denoising.class_avg)": [[8, "aspire.denoising.class_avg.DefaultClassAvgSource"]], "denoisedimagesource (class in aspire.denoising.denoised_src)": [[8, "aspire.denoising.denoised_src.DenoisedImageSource"]], "denoiser (class in aspire.denoising.denoiser)": [[8, "aspire.denoising.denoiser.Denoiser"]], "denoisercov2d (class in aspire.denoising.denoiser_cov2d)": [[8, "aspire.denoising.denoiser_cov2d.DenoiserCov2D"]], "adaptive_support() (in module aspire.denoising.adaptive_support)": [[8, "aspire.denoising.adaptive_support.adaptive_support"]], "aspire.denoising": [[8, "module-aspire.denoising"]], "aspire.denoising.adaptive_support": [[8, "module-aspire.denoising.adaptive_support"]], "aspire.denoising.class_avg": [[8, "module-aspire.denoising.class_avg"]], "aspire.denoising.denoised_src": [[8, "module-aspire.denoising.denoised_src"]], "aspire.denoising.denoiser": [[8, "module-aspire.denoising.denoiser"]], "aspire.denoising.denoiser_cov2d": [[8, "module-aspire.denoising.denoiser_cov2d"]], "class_distances (aspire.denoising.class_avg.classavgsource property)": [[8, "aspire.denoising.class_avg.ClassAvgSource.class_distances"]], "class_indices (aspire.denoising.class_avg.classavgsource property)": [[8, "aspire.denoising.class_avg.ClassAvgSource.class_indices"]], "class_refl (aspire.denoising.class_avg.classavgsource property)": [[8, "aspire.denoising.class_avg.ClassAvgSource.class_refl"]], "denoise() (aspire.denoising.denoiser.denoiser method)": [[8, "aspire.denoising.denoiser.Denoiser.denoise"]], "denoise() (aspire.denoising.denoiser_cov2d.denoisercov2d method)": [[8, "aspire.denoising.denoiser_cov2d.DenoiserCov2D.denoise"]], "image() (aspire.denoising.denoiser.denoiser method)": [[8, "aspire.denoising.denoiser.Denoiser.image"]], "images() (aspire.denoising.denoiser_cov2d.denoisercov2d method)": [[8, "aspire.denoising.denoiser_cov2d.DenoiserCov2D.images"]], "n (aspire.denoising.class_avg.classavgsource property)": [[8, "aspire.denoising.class_avg.ClassAvgSource.n"]], "save() (aspire.denoising.class_avg.classavgsource method)": [[8, "aspire.denoising.class_avg.ClassAvgSource.save"]], "selection_indices (aspire.denoising.class_avg.classavgsource property)": [[8, "aspire.denoising.class_avg.ClassAvgSource.selection_indices"]], "src_wiener_coords() (in module aspire.denoising.denoiser_cov2d)": [[8, "aspire.denoising.denoiser_cov2d.src_wiener_coords"]], "add (class in aspire.image.xform)": [[9, "aspire.image.xform.Add"]], "basisimage (class in aspire.image.image)": [[9, "aspire.image.image.BasisImage"]], "bispecimage (class in aspire.image.image)": [[9, "aspire.image.image.BispecImage"]], "cartesianimage (class in aspire.image.image)": [[9, "aspire.image.image.CartesianImage"]], "downsample (class in aspire.image.xform)": [[9, "aspire.image.xform.Downsample"]], "fbbasisimage (class in aspire.image.image)": [[9, "aspire.image.image.FBBasisImage"]], "filterxform (class in aspire.image.xform)": [[9, "aspire.image.xform.FilterXform"]], "image (class in aspire.image.image)": [[9, "aspire.image.image.Image"]], "imagestacker (class in aspire.image.image_stacker)": [[9, "aspire.image.image_stacker.ImageStacker"]], "indexedxform (class in aspire.image.xform)": [[9, "aspire.image.xform.IndexedXform"]], "lambdaxform (class in aspire.image.xform)": [[9, "aspire.image.xform.LambdaXform"]], "linearindexedxform (class in aspire.image.xform)": [[9, "aspire.image.xform.LinearIndexedXform"]], "linearpipeline (class in aspire.image.xform)": [[9, "aspire.image.xform.LinearPipeline"]], "linearxform (class in aspire.image.xform)": [[9, "aspire.image.xform.LinearXform"]], "meanimagestacker (class in aspire.image.image_stacker)": [[9, "aspire.image.image_stacker.MeanImageStacker"]], "medianimagestacker (class in aspire.image.image_stacker)": [[9, "aspire.image.image_stacker.MedianImageStacker"]], "multiply (class in aspire.image.xform)": [[9, "aspire.image.xform.Multiply"]], "pipeline (class in aspire.image.xform)": [[9, "aspire.image.xform.Pipeline"]], "poissonrejectionimagestacker (class in aspire.image.image_stacker)": [[9, "aspire.image.image_stacker.PoissonRejectionImageStacker"]], "polarimage (class in aspire.image.image)": [[9, "aspire.image.image.PolarImage"]], "robustchauvenetrejectionimagestacker (class in aspire.image.image_stacker)": [[9, "aspire.image.image_stacker.RobustChauvenetRejectionImageStacker"]], "shift (class in aspire.image.xform)": [[9, "aspire.image.xform.Shift"]], "sigmarejectionimagestacker (class in aspire.image.image_stacker)": [[9, "aspire.image.image_stacker.SigmaRejectionImageStacker"]], "symmetricxform (class in aspire.image.xform)": [[9, "aspire.image.xform.SymmetricXform"]], "t (aspire.image.image.image property)": [[9, "aspire.image.image.Image.T"]], "winsorizedimagestacker (class in aspire.image.image_stacker)": [[9, "aspire.image.image_stacker.WinsorizedImageStacker"]], "xform (class in aspire.image.xform)": [[9, "aspire.image.xform.Xform"]], "xform.xformactivecontextmanager (class in aspire.image.xform)": [[9, "aspire.image.xform.Xform.XformActiveContextManager"]], "add_xform() (aspire.image.xform.pipeline method)": [[9, "aspire.image.xform.Pipeline.add_xform"]], "add_xforms() (aspire.image.xform.pipeline method)": [[9, "aspire.image.xform.Pipeline.add_xforms"]], "adjoint() (aspire.image.xform.linearxform method)": [[9, "aspire.image.xform.LinearXform.adjoint"]], "asnumpy() (aspire.image.image.image method)": [[9, "aspire.image.image.Image.asnumpy"]], "aspire.image": [[9, "module-aspire.image"]], "aspire.image.image": [[9, "module-aspire.image.image"]], "aspire.image.image_stacker": [[9, "module-aspire.image.image_stacker"]], "aspire.image.xform": [[9, "module-aspire.image.xform"]], "backproject() (aspire.image.image.image method)": [[9, "aspire.image.image.Image.backproject"]], "copy() (aspire.image.image.image method)": [[9, "aspire.image.image.Image.copy"]], "disabled() (aspire.image.xform.xform method)": [[9, "aspire.image.xform.Xform.disabled"]], "downsample() (aspire.image.image.image method)": [[9, "aspire.image.image.Image.downsample"]], "enabled() (aspire.image.xform.xform method)": [[9, "aspire.image.xform.Xform.enabled"]], "evaluate() (aspire.image.image.basisimage method)": [[9, "aspire.image.image.BasisImage.evaluate"]], "expand() (aspire.image.image.bispecimage method)": [[9, "aspire.image.image.BispecImage.expand"]], "expand() (aspire.image.image.cartesianimage method)": [[9, "aspire.image.image.CartesianImage.expand"]], "expand() (aspire.image.image.polarimage method)": [[9, "aspire.image.image.PolarImage.expand"]], "filter() (aspire.image.image.image method)": [[9, "aspire.image.image.Image.filter"]], "flip() (aspire.image.image.image method)": [[9, "aspire.image.image.Image.flip"]], "forward() (aspire.image.xform.xform method)": [[9, "aspire.image.xform.Xform.forward"]], "frc() (aspire.image.image.image method)": [[9, "aspire.image.image.Image.frc"]], "norm() (aspire.image.image.image method)": [[9, "aspire.image.image.Image.norm"]], "normalize_bg() (in module aspire.image.image)": [[9, "aspire.image.image.normalize_bg"]], "res (aspire.image.image.image property)": [[9, "aspire.image.image.Image.res"]], "reset() (aspire.image.xform.pipeline method)": [[9, "aspire.image.xform.Pipeline.reset"]], "rotate() (aspire.image.image.image method)": [[9, "aspire.image.image.Image.rotate"]], "save() (aspire.image.image.image method)": [[9, "aspire.image.image.Image.save"]], "shift() (aspire.image.image.image method)": [[9, "aspire.image.image.Image.shift"]], "show() (aspire.image.image.image method)": [[9, "aspire.image.image.Image.show"]], "size (aspire.image.image.image property)": [[9, "aspire.image.image.Image.size"]], "sqrt() (aspire.image.image.image method)": [[9, "aspire.image.image.Image.sqrt"]], "stack_reshape() (aspire.image.image.image method)": [[9, "aspire.image.image.Image.stack_reshape"]], "transpose() (aspire.image.image.image method)": [[9, "aspire.image.image.Image.transpose"]], "anisotropicnoiseestimator (class in aspire.noise.noise)": [[10, "aspire.noise.noise.AnisotropicNoiseEstimator"]], "bluenoiseadder (class in aspire.noise.noise)": [[10, "aspire.noise.noise.BlueNoiseAdder"]], "customnoiseadder (class in aspire.noise.noise)": [[10, "aspire.noise.noise.CustomNoiseAdder"]], "noiseadder (class in aspire.noise.noise)": [[10, "aspire.noise.noise.NoiseAdder"]], "noiseestimator (class in aspire.noise.noise)": [[10, "aspire.noise.noise.NoiseEstimator"]], "pinknoiseadder (class in aspire.noise.noise)": [[10, "aspire.noise.noise.PinkNoiseAdder"]], "whitenoiseadder (class in aspire.noise.noise)": [[10, "aspire.noise.noise.WhiteNoiseAdder"]], "whitenoiseestimator (class in aspire.noise.noise)": [[10, "aspire.noise.noise.WhiteNoiseEstimator"]], "aspire.noise": [[10, "module-aspire.noise"]], "aspire.noise.noise": [[10, "module-aspire.noise.noise"]], "estimate() (aspire.noise.noise.anisotropicnoiseestimator method)": [[10, "aspire.noise.noise.AnisotropicNoiseEstimator.estimate"]], "estimate() (aspire.noise.noise.noiseestimator method)": [[10, "aspire.noise.noise.NoiseEstimator.estimate"]], "estimate() (aspire.noise.noise.whitenoiseestimator method)": [[10, "aspire.noise.noise.WhiteNoiseEstimator.estimate"]], "estimate_noise_psd() (aspire.noise.noise.anisotropicnoiseestimator method)": [[10, "aspire.noise.noise.AnisotropicNoiseEstimator.estimate_noise_psd"]], "from_snr() (aspire.noise.noise.whitenoiseadder class method)": [[10, "aspire.noise.noise.WhiteNoiseAdder.from_snr"]], "noise_var (aspire.noise.noise.customnoiseadder property)": [[10, "aspire.noise.noise.CustomNoiseAdder.noise_var"]], "noise_var (aspire.noise.noise.noiseadder property)": [[10, "aspire.noise.noise.NoiseAdder.noise_var"]], "noise_var (aspire.noise.noise.whitenoiseadder property)": [[10, "aspire.noise.noise.WhiteNoiseAdder.noise_var"]], "signal_power (aspire.noise.noise.whitenoiseadder property)": [[10, "aspire.noise.noise.WhiteNoiseAdder.signal_power"]], "finufftplan (class in aspire.nufft.finufft)": [[11, "aspire.nufft.finufft.FinufftPlan"]], "plan (class in aspire.nufft)": [[11, "aspire.nufft.Plan"]], "adjoint() (aspire.nufft.finufft.finufftplan method)": [[11, "aspire.nufft.finufft.FinufftPlan.adjoint"]], "all_backends() (in module aspire.nufft)": [[11, "aspire.nufft.all_backends"]], "anufft() (in module aspire.nufft)": [[11, "aspire.nufft.anufft"]], "aspire.nufft": [[11, "module-aspire.nufft"]], "aspire.nufft.finufft": [[11, "module-aspire.nufft.finufft"]], "aspire.nufft.utils": [[11, "module-aspire.nufft.utils"]], "backend_available() (in module aspire.nufft)": [[11, "aspire.nufft.backend_available"]], "check_backends() (in module aspire.nufft)": [[11, "aspire.nufft.check_backends"]], "nextpow2() (in module aspire.nufft.utils)": [[11, "aspire.nufft.utils.nextpow2"]], "nufft() (in module aspire.nufft)": [[11, "aspire.nufft.nufft"]], "transform() (aspire.nufft.finufft.finufftplan method)": [[11, "aspire.nufft.finufft.FinufftPlan.transform"]], "fft (class in aspire.numeric.base_fft)": [[12, "aspire.numeric.base_fft.FFT"]], "numpy (class in aspire.numeric.numpy)": [[12, "aspire.numeric.numpy.Numpy"]], "pyfftwfft (class in aspire.numeric.pyfftw_fft)": [[12, "aspire.numeric.pyfftw_fft.PyfftwFFT"]], "scipyfft (class in aspire.numeric.scipy_fft)": [[12, "aspire.numeric.scipy_fft.ScipyFFT"]], "asnumpy() (aspire.numeric.numpy.numpy static method)": [[12, "aspire.numeric.numpy.Numpy.asnumpy"]], "aspire.numeric": [[12, "module-aspire.numeric"]], "aspire.numeric.base_fft": [[12, "module-aspire.numeric.base_fft"]], "aspire.numeric.numpy": [[12, "module-aspire.numeric.numpy"]], "aspire.numeric.pyfftw_fft": [[12, "module-aspire.numeric.pyfftw_fft"]], "aspire.numeric.scipy_fft": [[12, "module-aspire.numeric.scipy_fft"]], "centered_fft() (aspire.numeric.base_fft.fft method)": [[12, "aspire.numeric.base_fft.FFT.centered_fft"]], "centered_fft2() (aspire.numeric.base_fft.fft method)": [[12, "aspire.numeric.base_fft.FFT.centered_fft2"]], "centered_fftn() (aspire.numeric.base_fft.fft method)": [[12, "aspire.numeric.base_fft.FFT.centered_fftn"]], "centered_ifft() (aspire.numeric.base_fft.fft method)": [[12, "aspire.numeric.base_fft.FFT.centered_ifft"]], "centered_ifft2() (aspire.numeric.base_fft.fft method)": [[12, "aspire.numeric.base_fft.FFT.centered_ifft2"]], "centered_ifftn() (aspire.numeric.base_fft.fft method)": [[12, "aspire.numeric.base_fft.FFT.centered_ifftn"]], "fft() (aspire.numeric.base_fft.fft method)": [[12, "aspire.numeric.base_fft.FFT.fft"]], "fft() (aspire.numeric.pyfftw_fft.pyfftwfft method)": [[12, "aspire.numeric.pyfftw_fft.PyfftwFFT.fft"]], "fft() (aspire.numeric.scipy_fft.scipyfft method)": [[12, "aspire.numeric.scipy_fft.ScipyFFT.fft"]], "fft2() (aspire.numeric.base_fft.fft method)": [[12, "aspire.numeric.base_fft.FFT.fft2"]], "fft2() (aspire.numeric.pyfftw_fft.pyfftwfft method)": [[12, "aspire.numeric.pyfftw_fft.PyfftwFFT.fft2"]], "fft2() (aspire.numeric.scipy_fft.scipyfft method)": [[12, "aspire.numeric.scipy_fft.ScipyFFT.fft2"]], "fft_object() (in module aspire.numeric)": [[12, "aspire.numeric.fft_object"]], "fftn() (aspire.numeric.base_fft.fft method)": [[12, "aspire.numeric.base_fft.FFT.fftn"]], "fftn() (aspire.numeric.pyfftw_fft.pyfftwfft method)": [[12, "aspire.numeric.pyfftw_fft.PyfftwFFT.fftn"]], "fftn() (aspire.numeric.scipy_fft.scipyfft method)": [[12, "aspire.numeric.scipy_fft.ScipyFFT.fftn"]], "fftshift() (aspire.numeric.base_fft.fft method)": [[12, "aspire.numeric.base_fft.FFT.fftshift"]], "fftshift() (aspire.numeric.pyfftw_fft.pyfftwfft method)": [[12, "aspire.numeric.pyfftw_fft.PyfftwFFT.fftshift"]], "fftshift() (aspire.numeric.scipy_fft.scipyfft method)": [[12, "aspire.numeric.scipy_fft.ScipyFFT.fftshift"]], "ifft() (aspire.numeric.base_fft.fft method)": [[12, "aspire.numeric.base_fft.FFT.ifft"]], "ifft() (aspire.numeric.pyfftw_fft.pyfftwfft method)": [[12, "aspire.numeric.pyfftw_fft.PyfftwFFT.ifft"]], "ifft() (aspire.numeric.scipy_fft.scipyfft method)": [[12, "aspire.numeric.scipy_fft.ScipyFFT.ifft"]], "ifft2() (aspire.numeric.base_fft.fft method)": [[12, "aspire.numeric.base_fft.FFT.ifft2"]], "ifft2() (aspire.numeric.pyfftw_fft.pyfftwfft method)": [[12, "aspire.numeric.pyfftw_fft.PyfftwFFT.ifft2"]], "ifft2() (aspire.numeric.scipy_fft.scipyfft method)": [[12, "aspire.numeric.scipy_fft.ScipyFFT.ifft2"]], "ifftn() (aspire.numeric.base_fft.fft method)": [[12, "aspire.numeric.base_fft.FFT.ifftn"]], "ifftn() (aspire.numeric.pyfftw_fft.pyfftwfft method)": [[12, "aspire.numeric.pyfftw_fft.PyfftwFFT.ifftn"]], "ifftn() (aspire.numeric.scipy_fft.scipyfft method)": [[12, "aspire.numeric.scipy_fft.ScipyFFT.ifftn"]], "ifftshift() (aspire.numeric.base_fft.fft method)": [[12, "aspire.numeric.base_fft.FFT.ifftshift"]], "ifftshift() (aspire.numeric.pyfftw_fft.pyfftwfft method)": [[12, "aspire.numeric.pyfftw_fft.PyfftwFFT.ifftshift"]], "ifftshift() (aspire.numeric.scipy_fft.scipyfft method)": [[12, "aspire.numeric.scipy_fft.ScipyFFT.ifftshift"]], "mdim_fftshift() (aspire.numeric.base_fft.fft method)": [[12, "aspire.numeric.base_fft.FFT.mdim_fftshift"]], "mdim_ifftshift() (aspire.numeric.base_fft.fft method)": [[12, "aspire.numeric.base_fft.FFT.mdim_ifftshift"]], "numeric_object() (in module aspire.numeric)": [[12, "aspire.numeric.numeric_object"]], "complexpca (class in aspire.numeric.complex_pca.complex_pca)": [[13, "aspire.numeric.complex_pca.complex_pca.ComplexPCA"]], "aspire.numeric.complex_pca": [[13, "module-aspire.numeric.complex_pca"]], "aspire.numeric.complex_pca.complex_pca": [[13, "module-aspire.numeric.complex_pca.complex_pca"]], "aspire.numeric.complex_pca.validation": [[13, "module-aspire.numeric.complex_pca.validation"]], "check_array() (in module aspire.numeric.complex_pca.validation)": [[13, "aspire.numeric.complex_pca.validation.check_array"]], "arrayfilter (class in aspire.operators.filters)": [[14, "aspire.operators.filters.ArrayFilter"]], "blkdiagmatrix (class in aspire.operators.blk_diag_matrix)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix"]], "bluefilter (class in aspire.operators.filters)": [[14, "aspire.operators.filters.BlueFilter"]], "ctffilter (class in aspire.operators.filters)": [[14, "aspire.operators.filters.CTFFilter"]], "dualfilter (class in aspire.operators.filters)": [[14, "aspire.operators.filters.DualFilter"]], "filter (class in aspire.operators.filters)": [[14, "aspire.operators.filters.Filter"]], "functionfilter (class in aspire.operators.filters)": [[14, "aspire.operators.filters.FunctionFilter"]], "identityfilter (class in aspire.operators.filters)": [[14, "aspire.operators.filters.IdentityFilter"]], "lambdafilter (class in aspire.operators.filters)": [[14, "aspire.operators.filters.LambdaFilter"]], "multiplicativefilter (class in aspire.operators.filters)": [[14, "aspire.operators.filters.MultiplicativeFilter"]], "pinkfilter (class in aspire.operators.filters)": [[14, "aspire.operators.filters.PinkFilter"]], "powerfilter (class in aspire.operators.filters)": [[14, "aspire.operators.filters.PowerFilter"]], "radialctffilter (class in aspire.operators.filters)": [[14, "aspire.operators.filters.RadialCTFFilter"]], "scalarfilter (class in aspire.operators.filters)": [[14, "aspire.operators.filters.ScalarFilter"]], "scaledfilter (class in aspire.operators.filters)": [[14, "aspire.operators.filters.ScaledFilter"]], "t (aspire.operators.blk_diag_matrix.blkdiagmatrix property)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.T"]], "zerofilter (class in aspire.operators.filters)": [[14, "aspire.operators.filters.ZeroFilter"]], "abs() (aspire.operators.blk_diag_matrix.blkdiagmatrix method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.abs"]], "add() (aspire.operators.blk_diag_matrix.blkdiagmatrix method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.add"]], "append() (aspire.operators.blk_diag_matrix.blkdiagmatrix method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.append"]], "apply() (aspire.operators.blk_diag_matrix.blkdiagmatrix method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.apply"]], "aspire.operators": [[14, "module-aspire.operators"]], "aspire.operators.blk_diag_matrix": [[14, "module-aspire.operators.blk_diag_matrix"]], "aspire.operators.filters": [[14, "module-aspire.operators.filters"]], "aspire.operators.wemd": [[14, "module-aspire.operators.wemd"]], "check_psd() (aspire.operators.blk_diag_matrix.blkdiagmatrix method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.check_psd"]], "copy() (aspire.operators.blk_diag_matrix.blkdiagmatrix method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.copy"]], "dense() (aspire.operators.blk_diag_matrix.blkdiagmatrix method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.dense"]], "dual() (aspire.operators.filters.filter method)": [[14, "aspire.operators.filters.Filter.dual"]], "eigvals() (aspire.operators.blk_diag_matrix.blkdiagmatrix method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.eigvals"]], "empty() (aspire.operators.blk_diag_matrix.blkdiagmatrix static method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.empty"]], "evaluate() (aspire.operators.filters.dualfilter method)": [[14, "aspire.operators.filters.DualFilter.evaluate"]], "evaluate() (aspire.operators.filters.filter method)": [[14, "aspire.operators.filters.Filter.evaluate"]], "evaluate_grid() (aspire.operators.filters.arrayfilter method)": [[14, "aspire.operators.filters.ArrayFilter.evaluate_grid"]], "evaluate_grid() (aspire.operators.filters.filter method)": [[14, "aspire.operators.filters.Filter.evaluate_grid"]], "evaluate_grid() (aspire.operators.filters.powerfilter method)": [[14, "aspire.operators.filters.PowerFilter.evaluate_grid"]], "evaluate_src_filters_on_grid() (in module aspire.operators.filters)": [[14, "aspire.operators.filters.evaluate_src_filters_on_grid"]], "eye() (aspire.operators.blk_diag_matrix.blkdiagmatrix static method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.eye"]], "eye_like() (aspire.operators.blk_diag_matrix.blkdiagmatrix static method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.eye_like"]], "fb_mat() (aspire.operators.filters.filter method)": [[14, "aspire.operators.filters.Filter.fb_mat"]], "from_list() (aspire.operators.blk_diag_matrix.blkdiagmatrix static method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.from_list"]], "is_square (aspire.operators.blk_diag_matrix.blkdiagmatrix property)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.is_square"]], "isfinite (aspire.operators.blk_diag_matrix.blkdiagmatrix property)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.isfinite"]], "make_psd() (aspire.operators.blk_diag_matrix.blkdiagmatrix method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.make_psd"]], "matmul() (aspire.operators.blk_diag_matrix.blkdiagmatrix method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.matmul"]], "mul() (aspire.operators.blk_diag_matrix.blkdiagmatrix method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.mul"]], "neg() (aspire.operators.blk_diag_matrix.blkdiagmatrix method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.neg"]], "norm() (aspire.operators.blk_diag_matrix.blkdiagmatrix method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.norm"]], "ones() (aspire.operators.blk_diag_matrix.blkdiagmatrix static method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.ones"]], "partition (aspire.operators.blk_diag_matrix.blkdiagmatrix property)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.partition"]], "pow() (aspire.operators.blk_diag_matrix.blkdiagmatrix method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.pow"]], "rapply() (aspire.operators.blk_diag_matrix.blkdiagmatrix method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.rapply"]], "reset_cache() (aspire.operators.blk_diag_matrix.blkdiagmatrix method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.reset_cache"]], "scale() (aspire.operators.filters.ctffilter method)": [[14, "aspire.operators.filters.CTFFilter.scale"]], "scale() (aspire.operators.filters.filter method)": [[14, "aspire.operators.filters.Filter.scale"]], "sign (aspire.operators.filters.filter property)": [[14, "aspire.operators.filters.Filter.sign"]], "solve() (aspire.operators.blk_diag_matrix.blkdiagmatrix method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.solve"]], "sub() (aspire.operators.blk_diag_matrix.blkdiagmatrix method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.sub"]], "transpose() (aspire.operators.blk_diag_matrix.blkdiagmatrix method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.transpose"]], "wemd_embed() (in module aspire.operators.wemd)": [[14, "aspire.operators.wemd.wemd_embed"]], "wemd_norm() (in module aspire.operators.wemd)": [[14, "aspire.operators.wemd.wemd_norm"]], "zeros() (aspire.operators.blk_diag_matrix.blkdiagmatrix static method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.zeros"]], "zeros_like() (aspire.operators.blk_diag_matrix.blkdiagmatrix static method)": [[14, "aspire.operators.blk_diag_matrix.BlkDiagMatrix.zeros_like"]], "aspire.optimization": [[15, "module-aspire.optimization"]], "aspire.optimization.conj_grad": [[15, "module-aspire.optimization.conj_grad"]], "conj_grad() (in module aspire.optimization.conj_grad)": [[15, "aspire.optimization.conj_grad.conj_grad"]], "fill_struct() (in module aspire.optimization.conj_grad)": [[15, "aspire.optimization.conj_grad.fill_struct"]], "estimator (class in aspire.reconstruction.estimator)": [[16, "aspire.reconstruction.estimator.Estimator"]], "fourierkernel (class in aspire.reconstruction.kernel)": [[16, "aspire.reconstruction.kernel.FourierKernel"]], "kernel (class in aspire.reconstruction.kernel)": [[16, "aspire.reconstruction.kernel.Kernel"]], "meanestimator (class in aspire.reconstruction.mean)": [[16, "aspire.reconstruction.mean.MeanEstimator"]], "apply_kernel() (aspire.reconstruction.estimator.estimator method)": [[16, "aspire.reconstruction.estimator.Estimator.apply_kernel"]], "aspire.reconstruction": [[16, "module-aspire.reconstruction"]], "aspire.reconstruction.estimator": [[16, "module-aspire.reconstruction.estimator"]], "aspire.reconstruction.kernel": [[16, "module-aspire.reconstruction.kernel"]], "aspire.reconstruction.mean": [[16, "module-aspire.reconstruction.mean"]], "circularize() (aspire.reconstruction.kernel.fourierkernel method)": [[16, "aspire.reconstruction.kernel.FourierKernel.circularize"]], "circularize_1d() (aspire.reconstruction.kernel.fourierkernel method)": [[16, "aspire.reconstruction.kernel.FourierKernel.circularize_1d"]], "compute_kernel() (aspire.reconstruction.estimator.estimator method)": [[16, "aspire.reconstruction.estimator.Estimator.compute_kernel"]], "compute_kernel() (aspire.reconstruction.mean.meanestimator method)": [[16, "aspire.reconstruction.mean.MeanEstimator.compute_kernel"]], "conj_grad() (aspire.reconstruction.estimator.estimator method)": [[16, "aspire.reconstruction.estimator.Estimator.conj_grad"]], "convolve_volume() (aspire.reconstruction.kernel.fourierkernel method)": [[16, "aspire.reconstruction.kernel.FourierKernel.convolve_volume"]], "convolve_volume_matrix() (aspire.reconstruction.kernel.fourierkernel method)": [[16, "aspire.reconstruction.kernel.FourierKernel.convolve_volume_matrix"]], "estimate() (aspire.reconstruction.estimator.estimator method)": [[16, "aspire.reconstruction.estimator.Estimator.estimate"]], "is_centered() (aspire.reconstruction.kernel.fourierkernel method)": [[16, "aspire.reconstruction.kernel.FourierKernel.is_centered"]], "src_backward() (aspire.reconstruction.estimator.estimator method)": [[16, "aspire.reconstruction.estimator.Estimator.src_backward"]], "toeplitz() (aspire.reconstruction.kernel.fourierkernel method)": [[16, "aspire.reconstruction.kernel.FourierKernel.toeplitz"]], "arrayimagesource (class in aspire.source.image)": [[17, "aspire.source.image.ArrayImageSource"]], "boxescoordinatesource (class in aspire.source.coordinates)": [[17, "aspire.source.coordinates.BoxesCoordinateSource"]], "centerscoordinatesource (class in aspire.source.coordinates)": [[17, "aspire.source.coordinates.CentersCoordinateSource"]], "coordinatesource (class in aspire.source.coordinates)": [[17, "aspire.source.coordinates.CoordinateSource"]], "imagesource (class in aspire.source.image)": [[17, "aspire.source.image.ImageSource"]], "indexedsource (class in aspire.source.image)": [[17, "aspire.source.image.IndexedSource"]], "relionsource (class in aspire.source.relion)": [[17, "aspire.source.relion.RelionSource"]], "simulation (class in aspire.source.simulation)": [[17, "aspire.source.simulation.Simulation"]], "amplitudes (aspire.source.image.imagesource property)": [[17, "aspire.source.image.ImageSource.amplitudes"]], "angles (aspire.source.image.imagesource property)": [[17, "aspire.source.image.ImageSource.angles"]], "as_copy() (in module aspire.source.image)": [[17, "aspire.source.image.as_copy"]], "aspire.source": [[17, "module-aspire.source"]], "aspire.source.coordinates": [[17, "module-aspire.source.coordinates"]], "aspire.source.image": [[17, "module-aspire.source.image"]], "aspire.source.relion": [[17, "module-aspire.source.relion"]], "aspire.source.simulation": [[17, "module-aspire.source.simulation"]], "cache() (aspire.source.image.imagesource method)": [[17, "aspire.source.image.ImageSource.cache"]], "class_distances (aspire.source.image.imagesource property)": [[17, "aspire.source.image.ImageSource.class_distances"]], "class_indices (aspire.source.image.imagesource property)": [[17, "aspire.source.image.ImageSource.class_indices"]], "class_refl (aspire.source.image.imagesource property)": [[17, "aspire.source.image.ImageSource.class_refl"]], "clean_images (aspire.source.simulation.simulation property)": [[17, "aspire.source.simulation.Simulation.clean_images"]], "covar_true() (aspire.source.simulation.simulation method)": [[17, "aspire.source.simulation.Simulation.covar_true"]], "downsample() (aspire.source.image.imagesource method)": [[17, "aspire.source.image.ImageSource.downsample"]], "eigs() (aspire.source.simulation.simulation method)": [[17, "aspire.source.simulation.Simulation.eigs"]], "estimate_noise_power() (aspire.source.image.imagesource method)": [[17, "aspire.source.image.ImageSource.estimate_noise_power"]], "estimate_signal_mean_energy() (aspire.source.image.imagesource method)": [[17, "aspire.source.image.ImageSource.estimate_signal_mean_energy"]], "estimate_signal_power() (aspire.source.image.imagesource method)": [[17, "aspire.source.image.ImageSource.estimate_signal_power"]], "estimate_signal_var() (aspire.source.image.imagesource method)": [[17, "aspire.source.image.ImageSource.estimate_signal_var"]], "estimate_snr() (aspire.source.image.imagesource method)": [[17, "aspire.source.image.ImageSource.estimate_snr"]], "eval_clustering() (aspire.source.simulation.simulation method)": [[17, "aspire.source.simulation.Simulation.eval_clustering"]], "eval_coords() (aspire.source.simulation.simulation method)": [[17, "aspire.source.simulation.Simulation.eval_coords"]], "eval_covar() (aspire.source.simulation.simulation method)": [[17, "aspire.source.simulation.Simulation.eval_covar"]], "eval_eigs() (aspire.source.simulation.simulation method)": [[17, "aspire.source.simulation.Simulation.eval_eigs"]], "eval_mean() (aspire.source.simulation.simulation method)": [[17, "aspire.source.simulation.Simulation.eval_mean"]], "eval_vol() (aspire.source.simulation.simulation method)": [[17, "aspire.source.simulation.Simulation.eval_vol"]], "eval_volmat() (aspire.source.simulation.simulation method)": [[17, "aspire.source.simulation.Simulation.eval_volmat"]], "filter_indices (aspire.source.image.imagesource property)": [[17, "aspire.source.image.ImageSource.filter_indices"]], "get_metadata() (aspire.source.image.imagesource method)": [[17, "aspire.source.image.ImageSource.get_metadata"]], "has_metadata() (aspire.source.image.imagesource method)": [[17, "aspire.source.image.ImageSource.has_metadata"]], "im_backward() (aspire.source.image.imagesource method)": [[17, "aspire.source.image.ImageSource.im_backward"]], "images (aspire.source.image.imagesource property)": [[17, "aspire.source.image.ImageSource.images"]], "import_aspire_ctf() (aspire.source.coordinates.coordinatesource method)": [[17, "aspire.source.coordinates.CoordinateSource.import_aspire_ctf"]], "import_relion_ctf() (aspire.source.coordinates.coordinatesource method)": [[17, "aspire.source.coordinates.CoordinateSource.import_relion_ctf"]], "invert_contrast() (aspire.source.image.imagesource method)": [[17, "aspire.source.image.ImageSource.invert_contrast"]], "mean_true() (aspire.source.simulation.simulation method)": [[17, "aspire.source.simulation.Simulation.mean_true"]], "n (aspire.source.image.imagesource property)": [[17, "aspire.source.image.ImageSource.n"]], "n_ctf_filters (aspire.source.image.imagesource property)": [[17, "aspire.source.image.ImageSource.n_ctf_filters"]], "normalize_background() (aspire.source.image.imagesource method)": [[17, "aspire.source.image.ImageSource.normalize_background"]], "offsets (aspire.source.image.imagesource property)": [[17, "aspire.source.image.ImageSource.offsets"]], "phase_flip() (aspire.source.image.imagesource method)": [[17, "aspire.source.image.ImageSource.phase_flip"]], "populate_metadata() (aspire.source.relion.relionsource method)": [[17, "aspire.source.relion.RelionSource.populate_metadata"]], "projections (aspire.source.simulation.simulation property)": [[17, "aspire.source.simulation.Simulation.projections"]], "rotations (aspire.source.image.imagesource property)": [[17, "aspire.source.image.ImageSource.rotations"]], "save() (aspire.source.image.imagesource method)": [[17, "aspire.source.image.ImageSource.save"]], "save_images() (aspire.source.image.imagesource method)": [[17, "aspire.source.image.ImageSource.save_images"]], "save_metadata() (aspire.source.image.imagesource method)": [[17, "aspire.source.image.ImageSource.save_metadata"]], "selection_indices (aspire.source.image.imagesource property)": [[17, "aspire.source.image.ImageSource.selection_indices"]], "set_metadata() (aspire.source.image.imagesource method)": [[17, "aspire.source.image.ImageSource.set_metadata"]], "states (aspire.source.image.imagesource property)": [[17, "aspire.source.image.ImageSource.states"]], "true_signal_power() (aspire.source.simulation.simulation method)": [[17, "aspire.source.simulation.Simulation.true_signal_power"]], "true_snr() (aspire.source.simulation.simulation method)": [[17, "aspire.source.simulation.Simulation.true_snr"]], "update() (aspire.source.image.imagesource method)": [[17, "aspire.source.image.ImageSource.update"]], "vol_coords() (aspire.source.simulation.simulation method)": [[17, "aspire.source.simulation.Simulation.vol_coords"]], "vol_forward() (aspire.source.image.imagesource method)": [[17, "aspire.source.image.ImageSource.vol_forward"]], "whiten() (aspire.source.image.imagesource method)": [[17, "aspire.source.image.ImageSource.whiten"]], "mrcstats (class in aspire.storage.mrc)": [[18, "aspire.storage.mrc.MrcStats"]], "starfile (class in aspire.storage.starfile)": [[18, "aspire.storage.starfile.StarFile"]], "starfileerror": [[18, "aspire.storage.starfile.StarFileError"]], "amean (aspire.storage.mrc.mrcstats property)": [[18, "aspire.storage.mrc.MrcStats.amean"]], "arms (aspire.storage.mrc.mrcstats property)": [[18, "aspire.storage.mrc.MrcStats.arms"]], "aspire.storage": [[18, "module-aspire.storage"]], "aspire.storage.mrc": [[18, "module-aspire.storage.mrc"]], "aspire.storage.starfile": [[18, "module-aspire.storage.starfile"]], "get_block_by_index() (aspire.storage.starfile.starfile method)": [[18, "aspire.storage.starfile.StarFile.get_block_by_index"]], "push() (aspire.storage.mrc.mrcstats method)": [[18, "aspire.storage.mrc.MrcStats.push"]], "update_header() (aspire.storage.mrc.mrcstats method)": [[18, "aspire.storage.mrc.MrcStats.update_header"]], "write() (aspire.storage.starfile.starfile method)": [[18, "aspire.storage.starfile.StarFile.write"]], "cell2d (class in aspire.utils.cell)": [[19, "aspire.utils.cell.Cell2D"]], "fouriercorrelation (class in aspire.utils.resolution_estimation)": [[19, "aspire.utils.resolution_estimation.FourierCorrelation"]], "fourierringcorrelation (class in aspire.utils.resolution_estimation)": [[19, "aspire.utils.resolution_estimation.FourierRingCorrelation"]], "fouriershellcorrelation (class in aspire.utils.resolution_estimation)": [[19, "aspire.utils.resolution_estimation.FourierShellCorrelation"]], "j_conjugate() (in module aspire.utils.misc)": [[19, "aspire.utils.misc.J_conjugate"]], "logfilterbycount (class in aspire.utils.logging)": [[19, "aspire.utils.logging.LogFilterByCount"]], "random (class in aspire.utils.random)": [[19, "aspire.utils.random.Random"]], "relionstarfile (class in aspire.utils.relion_interop)": [[19, "aspire.utils.relion_interop.RelionStarFile"]], "rotation (class in aspire.utils.rotation)": [[19, "aspire.utils.rotation.Rotation"]], "about_axis() (aspire.utils.rotation.rotation static method)": [[19, "aspire.utils.rotation.Rotation.about_axis"]], "abs2() (in module aspire.utils.misc)": [[19, "aspire.utils.misc.abs2"]], "acorr() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.acorr"]], "ainner() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.ainner"]], "all_pairs() (in module aspire.utils.misc)": [[19, "aspire.utils.misc.all_pairs"]], "all_triplets() (in module aspire.utils.misc)": [[19, "aspire.utils.misc.all_triplets"]], "analyze_correlations() (aspire.utils.resolution_estimation.fouriercorrelation method)": [[19, "aspire.utils.resolution_estimation.FourierCorrelation.analyze_correlations"]], "angle_dist() (aspire.utils.rotation.rotation static method)": [[19, "aspire.utils.rotation.Rotation.angle_dist"]], "angles (aspire.utils.rotation.rotation property)": [[19, "aspire.utils.rotation.Rotation.angles"]], "anorm() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.anorm"]], "apply_registration() (aspire.utils.rotation.rotation method)": [[19, "aspire.utils.rotation.Rotation.apply_registration"]], "aspire.utils": [[19, "module-aspire.utils"]], "aspire.utils.cell": [[19, "module-aspire.utils.cell"]], "aspire.utils.coor_trans": [[19, "module-aspire.utils.coor_trans"]], "aspire.utils.filter_to_fb_mat": [[19, "module-aspire.utils.filter_to_fb_mat"]], "aspire.utils.logging": [[19, "module-aspire.utils.logging"]], "aspire.utils.matlab_compat": [[19, "module-aspire.utils.matlab_compat"]], "aspire.utils.matrix": [[19, "module-aspire.utils.matrix"]], "aspire.utils.misc": [[19, "module-aspire.utils.misc"]], "aspire.utils.multiprocessing": [[19, "module-aspire.utils.multiprocessing"]], "aspire.utils.random": [[19, "module-aspire.utils.random"]], "aspire.utils.relion_interop": [[19, "module-aspire.utils.relion_interop"]], "aspire.utils.resolution_estimation": [[19, "module-aspire.utils.resolution_estimation"]], "aspire.utils.rotation": [[19, "module-aspire.utils.rotation"]], "aspire.utils.types": [[19, "module-aspire.utils.types"]], "aspire.utils.units": [[19, "module-aspire.utils.units"]], "best_rank1_approximation() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.best_rank1_approximation"]], "bump_3d() (in module aspire.utils.misc)": [[19, "aspire.utils.misc.bump_3d"]], "cart2pol() (in module aspire.utils.coor_trans)": [[19, "aspire.utils.coor_trans.cart2pol"]], "cart2sph() (in module aspire.utils.coor_trans)": [[19, "aspire.utils.coor_trans.cart2sph"]], "choice() (in module aspire.utils.random)": [[19, "aspire.utils.random.choice"]], "circ() (in module aspire.utils.misc)": [[19, "aspire.utils.misc.circ"]], "common_line_from_rots() (in module aspire.utils.coor_trans)": [[19, "aspire.utils.coor_trans.common_line_from_rots"]], "common_lines() (aspire.utils.rotation.rotation method)": [[19, "aspire.utils.rotation.Rotation.common_lines"]], "complex_type() (in module aspire.utils.types)": [[19, "aspire.utils.types.complex_type"]], "correlations (aspire.utils.resolution_estimation.fouriercorrelation property)": [[19, "aspire.utils.resolution_estimation.FourierCorrelation.correlations"]], "crop_pad_2d() (in module aspire.utils.coor_trans)": [[19, "aspire.utils.coor_trans.crop_pad_2d"]], "crop_pad_3d() (in module aspire.utils.coor_trans)": [[19, "aspire.utils.coor_trans.crop_pad_3d"]], "cyclic_rotations() (in module aspire.utils.misc)": [[19, "aspire.utils.misc.cyclic_rotations"]], "dict_to_relion_types() (in module aspire.utils.relion_interop)": [[19, "aspire.utils.relion_interop.dict_to_relion_types"]], "dim (aspire.utils.resolution_estimation.fourierringcorrelation attribute)": [[19, "aspire.utils.resolution_estimation.FourierRingCorrelation.dim"]], "dim (aspire.utils.resolution_estimation.fouriershellcorrelation attribute)": [[19, "aspire.utils.resolution_estimation.FourierShellCorrelation.dim"]], "dtype (aspire.utils.rotation.rotation property)": [[19, "aspire.utils.rotation.Rotation.dtype"]], "eigs() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.eigs"]], "filter() (aspire.utils.logging.logfilterbycount method)": [[19, "aspire.utils.logging.LogFilterByCount.filter"]], "filter_to_fb_mat() (in module aspire.utils.filter_to_fb_mat)": [[19, "aspire.utils.filter_to_fb_mat.filter_to_fb_mat"]], "find_registration() (aspire.utils.rotation.rotation method)": [[19, "aspire.utils.rotation.Rotation.find_registration"]], "fix_signs() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.fix_signs"]], "from_euler() (aspire.utils.rotation.rotation static method)": [[19, "aspire.utils.rotation.Rotation.from_euler"]], "from_matrix() (aspire.utils.rotation.rotation static method)": [[19, "aspire.utils.rotation.Rotation.from_matrix"]], "from_rotvec() (aspire.utils.rotation.rotation static method)": [[19, "aspire.utils.rotation.Rotation.from_rotvec"]], "fuzzy_mask() (in module aspire.utils.misc)": [[19, "aspire.utils.misc.fuzzy_mask"]], "gaussian_1d() (in module aspire.utils.misc)": [[19, "aspire.utils.misc.gaussian_1d"]], "gaussian_2d() (in module aspire.utils.misc)": [[19, "aspire.utils.misc.gaussian_2d"]], "gaussian_3d() (in module aspire.utils.misc)": [[19, "aspire.utils.misc.gaussian_3d"]], "generate_random_rotations() (aspire.utils.rotation.rotation static method)": [[19, "aspire.utils.rotation.Rotation.generate_random_rotations"]], "getconsolelogginglevel() (in module aspire.utils.logging)": [[19, "aspire.utils.logging.getConsoleLoggingLevel"]], "getfilelogginglevel() (in module aspire.utils.logging)": [[19, "aspire.utils.logging.getFileLoggingLevel"]], "get_aligned_rotations() (in module aspire.utils.coor_trans)": [[19, "aspire.utils.coor_trans.get_aligned_rotations"]], "get_full_version() (in module aspire.utils.logging)": [[19, "aspire.utils.logging.get_full_version"]], "get_merged_data_block() (aspire.utils.relion_interop.relionstarfile method)": [[19, "aspire.utils.relion_interop.RelionStarFile.get_merged_data_block"]], "get_rots_mse() (in module aspire.utils.coor_trans)": [[19, "aspire.utils.coor_trans.get_rots_mse"]], "grid_1d() (in module aspire.utils.coor_trans)": [[19, "aspire.utils.coor_trans.grid_1d"]], "grid_2d() (in module aspire.utils.coor_trans)": [[19, "aspire.utils.coor_trans.grid_2d"]], "grid_3d() (in module aspire.utils.coor_trans)": [[19, "aspire.utils.coor_trans.grid_3d"]], "im_to_vec() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.im_to_vec"]], "importlib_path() (in module aspire.utils.misc)": [[19, "aspire.utils.misc.importlib_path"]], "inverse_r() (in module aspire.utils.misc)": [[19, "aspire.utils.misc.inverse_r"]], "invert() (aspire.utils.rotation.rotation method)": [[19, "aspire.utils.rotation.Rotation.invert"]], "m_flatten() (in module aspire.utils.matlab_compat)": [[19, "aspire.utils.matlab_compat.m_flatten"]], "m_reshape() (in module aspire.utils.matlab_compat)": [[19, "aspire.utils.matlab_compat.m_reshape"]], "make_psd() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.make_psd"]], "make_symmat() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.make_symmat"]], "mat2cell() (aspire.utils.cell.cell2d method)": [[19, "aspire.utils.cell.Cell2D.mat2cell"]], "mat_to_vec() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.mat_to_vec"]], "matrices (aspire.utils.rotation.rotation property)": [[19, "aspire.utils.rotation.Rotation.matrices"]], "mdim_mat_fun_conj() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.mdim_mat_fun_conj"]], "mem_based_cpu_suggestion() (in module aspire.utils.multiprocessing)": [[19, "aspire.utils.multiprocessing.mem_based_cpu_suggestion"]], "mse() (aspire.utils.rotation.rotation method)": [[19, "aspire.utils.rotation.Rotation.mse"]], "msg_cache (aspire.utils.logging.logfilterbycount attribute)": [[19, "aspire.utils.logging.LogFilterByCount.msg_cache"]], "num_procs_suggestion() (in module aspire.utils.multiprocessing)": [[19, "aspire.utils.multiprocessing.num_procs_suggestion"]], "physical_core_cpu_suggestion() (in module aspire.utils.multiprocessing)": [[19, "aspire.utils.multiprocessing.physical_core_cpu_suggestion"]], "plot() (aspire.utils.resolution_estimation.fouriercorrelation method)": [[19, "aspire.utils.resolution_estimation.FourierCorrelation.plot"]], "powerset() (in module aspire.utils.misc)": [[19, "aspire.utils.misc.powerset"]], "rand() (in module aspire.utils.random)": [[19, "aspire.utils.random.rand"]], "randi() (in module aspire.utils.random)": [[19, "aspire.utils.random.randi"]], "randn() (in module aspire.utils.random)": [[19, "aspire.utils.random.randn"]], "random() (in module aspire.utils.random)": [[19, "aspire.utils.random.random"]], "ratio_to_decibel() (in module aspire.utils.units)": [[19, "aspire.utils.units.ratio_to_decibel"]], "real_type() (in module aspire.utils.types)": [[19, "aspire.utils.types.real_type"]], "register() (aspire.utils.rotation.rotation method)": [[19, "aspire.utils.rotation.Rotation.register"]], "register_rotations() (in module aspire.utils.coor_trans)": [[19, "aspire.utils.coor_trans.register_rotations"]], "roll_dim() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.roll_dim"]], "setconsolelogginglevel() (in module aspire.utils.logging)": [[19, "aspire.utils.logging.setConsoleLoggingLevel"]], "setfilelogginglevel() (in module aspire.utils.logging)": [[19, "aspire.utils.logging.setFileLoggingLevel"]], "sha256sum() (in module aspire.utils.misc)": [[19, "aspire.utils.misc.sha256sum"]], "stable_eigsh() (in module aspire.utils.matlab_compat)": [[19, "aspire.utils.matlab_compat.stable_eigsh"]], "support_mask() (in module aspire.utils.misc)": [[19, "aspire.utils.misc.support_mask"]], "symmat_to_vec() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.symmat_to_vec"]], "symmat_to_vec_iso() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.symmat_to_vec_iso"]], "tqdm() (in module aspire.utils.logging)": [[19, "aspire.utils.logging.tqdm"]], "trange() (in module aspire.utils.logging)": [[19, "aspire.utils.logging.trange"]], "uniform_random_angles() (in module aspire.utils.coor_trans)": [[19, "aspire.utils.coor_trans.uniform_random_angles"]], "unroll_dim() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.unroll_dim"]], "utest_tolerance() (in module aspire.utils.types)": [[19, "aspire.utils.types.utest_tolerance"]], "vec_to_im() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.vec_to_im"]], "vec_to_mat() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.vec_to_mat"]], "vec_to_symmat() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.vec_to_symmat"]], "vec_to_symmat_iso() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.vec_to_symmat_iso"]], "vec_to_vol() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.vec_to_vol"]], "vecmat_to_volmat() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.vecmat_to_volmat"]], "virtual_core_cpu_suggestion() (in module aspire.utils.multiprocessing)": [[19, "aspire.utils.multiprocessing.virtual_core_cpu_suggestion"]], "vol_to_vec() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.vol_to_vec"]], "volmat_to_vecmat() (in module aspire.utils.matrix)": [[19, "aspire.utils.matrix.volmat_to_vecmat"]], "voltage_to_wavelength() (in module aspire.utils.units)": [[19, "aspire.utils.units.voltage_to_wavelength"]], "wavelength_to_voltage() (in module aspire.utils.units)": [[19, "aspire.utils.units.wavelength_to_voltage"]], "asymmetricvolume (class in aspire.volume.volume_synthesis)": [[20, "aspire.volume.volume_synthesis.AsymmetricVolume"]], "basisvolume (class in aspire.volume.volume)": [[20, "aspire.volume.volume.BasisVolume"]], "bispecvolume (class in aspire.volume.volume)": [[20, "aspire.volume.volume.BispecVolume"]], "cartesianvolume (class in aspire.volume.volume)": [[20, "aspire.volume.volume.CartesianVolume"]], "cnsymmetricvolume (class in aspire.volume.volume_synthesis)": [[20, "aspire.volume.volume_synthesis.CnSymmetricVolume"]], "dnsymmetricvolume (class in aspire.volume.volume_synthesis)": [[20, "aspire.volume.volume_synthesis.DnSymmetricVolume"]], "fbbasisvolume (class in aspire.volume.volume)": [[20, "aspire.volume.volume.FBBasisVolume"]], "gaussianblobsvolume (class in aspire.volume.volume_synthesis)": [[20, "aspire.volume.volume_synthesis.GaussianBlobsVolume"]], "legacyvolume (class in aspire.volume.volume_synthesis)": [[20, "aspire.volume.volume_synthesis.LegacyVolume"]], "osymmetricvolume (class in aspire.volume.volume_synthesis)": [[20, "aspire.volume.volume_synthesis.OSymmetricVolume"]], "polarvolume (class in aspire.volume.volume)": [[20, "aspire.volume.volume.PolarVolume"]], "syntheticvolumebase (class in aspire.volume.volume_synthesis)": [[20, "aspire.volume.volume_synthesis.SyntheticVolumeBase"]], "t (aspire.volume.volume.volume property)": [[20, "aspire.volume.volume.Volume.T"]], "tsymmetricvolume (class in aspire.volume.volume_synthesis)": [[20, "aspire.volume.volume_synthesis.TSymmetricVolume"]], "volume (class in aspire.volume.volume)": [[20, "aspire.volume.volume.Volume"]], "asnumpy() (aspire.volume.volume.volume method)": [[20, "aspire.volume.volume.Volume.asnumpy"]], "aspire.volume": [[20, "module-aspire.volume"]], "aspire.volume.volume": [[20, "module-aspire.volume.volume"]], "aspire.volume.volume_synthesis": [[20, "module-aspire.volume.volume_synthesis"]], "astype() (aspire.volume.volume.volume method)": [[20, "aspire.volume.volume.Volume.astype"]], "denoise() (aspire.volume.volume.volume method)": [[20, "aspire.volume.volume.Volume.denoise"]], "downsample() (aspire.volume.volume.volume method)": [[20, "aspire.volume.volume.Volume.downsample"]], "evaluate() (aspire.volume.volume.basisvolume method)": [[20, "aspire.volume.volume.BasisVolume.evaluate"]], "expand() (aspire.volume.volume.bispecvolume method)": [[20, "aspire.volume.volume.BispecVolume.expand"]], "expand() (aspire.volume.volume.cartesianvolume method)": [[20, "aspire.volume.volume.CartesianVolume.expand"]], "expand() (aspire.volume.volume.polarvolume method)": [[20, "aspire.volume.volume.PolarVolume.expand"]], "flatten() (aspire.volume.volume.volume method)": [[20, "aspire.volume.volume.Volume.flatten"]], "flip() (aspire.volume.volume.volume method)": [[20, "aspire.volume.volume.Volume.flip"]], "from_vec() (aspire.volume.volume.volume class method)": [[20, "aspire.volume.volume.Volume.from_vec"]], "fsc() (aspire.volume.volume.volume method)": [[20, "aspire.volume.volume.Volume.fsc"]], "generate() (aspire.volume.volume_synthesis.gaussianblobsvolume method)": [[20, "aspire.volume.volume_synthesis.GaussianBlobsVolume.generate"]], "generate() (aspire.volume.volume_synthesis.legacyvolume method)": [[20, "aspire.volume.volume_synthesis.LegacyVolume.generate"]], "generate() (aspire.volume.volume_synthesis.syntheticvolumebase method)": [[20, "aspire.volume.volume_synthesis.SyntheticVolumeBase.generate"]], "load() (aspire.volume.volume.volume class method)": [[20, "aspire.volume.volume.Volume.load"]], "n_blobs (aspire.volume.volume_synthesis.cnsymmetricvolume property)": [[20, "aspire.volume.volume_synthesis.CnSymmetricVolume.n_blobs"]], "n_blobs (aspire.volume.volume_synthesis.dnsymmetricvolume property)": [[20, "aspire.volume.volume_synthesis.DnSymmetricVolume.n_blobs"]], "n_blobs (aspire.volume.volume_synthesis.gaussianblobsvolume property)": [[20, "aspire.volume.volume_synthesis.GaussianBlobsVolume.n_blobs"]], "n_blobs (aspire.volume.volume_synthesis.osymmetricvolume property)": [[20, "aspire.volume.volume_synthesis.OSymmetricVolume.n_blobs"]], "n_blobs (aspire.volume.volume_synthesis.tsymmetricvolume property)": [[20, "aspire.volume.volume_synthesis.TSymmetricVolume.n_blobs"]], "project() (aspire.volume.volume.volume method)": [[20, "aspire.volume.volume.Volume.project"]], "qr_vols_forward() (in module aspire.volume.volume)": [[20, "aspire.volume.volume.qr_vols_forward"]], "rotate() (aspire.volume.volume.volume method)": [[20, "aspire.volume.volume.Volume.rotate"]], "rotated_grids() (in module aspire.volume.volume)": [[20, "aspire.volume.volume.rotated_grids"]], "rotated_grids_3d() (in module aspire.volume.volume)": [[20, "aspire.volume.volume.rotated_grids_3d"]], "save() (aspire.volume.volume.volume method)": [[20, "aspire.volume.volume.Volume.save"]], "shift() (aspire.volume.volume.volume method)": [[20, "aspire.volume.volume.Volume.shift"]], "stack_reshape() (aspire.volume.volume.volume method)": [[20, "aspire.volume.volume.Volume.stack_reshape"]], "symmetry_group (aspire.volume.volume_synthesis.cnsymmetricvolume property)": [[20, "aspire.volume.volume_synthesis.CnSymmetricVolume.symmetry_group"]], "symmetry_group (aspire.volume.volume_synthesis.dnsymmetricvolume property)": [[20, "aspire.volume.volume_synthesis.DnSymmetricVolume.symmetry_group"]], "symmetry_group (aspire.volume.volume_synthesis.gaussianblobsvolume property)": [[20, "aspire.volume.volume_synthesis.GaussianBlobsVolume.symmetry_group"]], "symmetry_group (aspire.volume.volume_synthesis.osymmetricvolume property)": [[20, "aspire.volume.volume_synthesis.OSymmetricVolume.symmetry_group"]], "symmetry_group (aspire.volume.volume_synthesis.tsymmetricvolume property)": [[20, "aspire.volume.volume_synthesis.TSymmetricVolume.symmetry_group"]], "to_vec() (aspire.volume.volume.volume method)": [[20, "aspire.volume.volume.Volume.to_vec"]], "transpose() (aspire.volume.volume.volume method)": [[20, "aspire.volume.volume.Volume.transpose"]]}})