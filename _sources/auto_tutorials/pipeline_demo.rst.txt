
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_tutorials/pipeline_demo.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_tutorials_pipeline_demo.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_tutorials_pipeline_demo.py:


Ab-initio Pipeline Demonstration
================================

This tutorial demonstrates some key components of an ab-initio
reconstruction pipeline using synthetic data generated with ASPIRE's
``Simulation`` class of objects.

.. GENERATED FROM PYTHON SOURCE LINES 11-15

Download a Volume
-----------------
We begin by downloading a high resolution volume map of the 80S
Ribosome, sourced from EMDB: https://www.ebi.ac.uk/emdb/EMD-2660.

.. GENERATED FROM PYTHON SOURCE LINES 15-36

.. code-block:: default


    import logging
    import os

    import numpy as np
    import requests


    # Download volume
    def download(url, save_path, chunk_size=1024 * 1024):
        r = requests.get(url, stream=True)
        with open(save_path, "wb") as fd:
            for chunk in r.iter_content(chunk_size=chunk_size):
                fd.write(chunk)


    file_path = os.path.join(os.getcwd(), "emd_2660.map")
    if not os.path.exists(file_path):
        url = "https://ftp.ebi.ac.uk/pub/databases/emdb/structures/EMD-2660/map/emd_2660.map.gz"
        download(url, file_path)








.. GENERATED FROM PYTHON SOURCE LINES 40-43

Load a Volume
-------------
We use ASPIRE's ``Volume`` class to load and downsample the volume.

.. GENERATED FROM PYTHON SOURCE LINES 43-53

.. code-block:: default


    from aspire.volume import Volume

    # Load 80s Ribosome
    original_vol = Volume.load(file_path, dtype=np.float32)

    # Downsample the volume
    res = 41
    vol = original_vol.downsample(res)








.. GENERATED FROM PYTHON SOURCE LINES 54-59

.. note::
    A ``Volume`` can be saved using the ``Volume.save()`` method as follows::

        fn = f"downsampled_80s_ribosome_size{res}.mrc"
        vol.save(fn, overwrite=True)

.. GENERATED FROM PYTHON SOURCE LINES 62-69

Create a Simulation Source
--------------------------
ASPIRE's ``Simulation`` class can be used to generate a synthetic
dataset of projection images.  A ``Simulation`` object produces
random projections of a supplied Volume and applies noise and CTF
filters. The resulting stack of 2D images is stored in an ``Image``
object.

.. GENERATED FROM PYTHON SOURCE LINES 72-78

CTF Filters
^^^^^^^^^^^^^^^^^^^^^
Let's start by creating CTF filters. The ``operators`` package
contains a collection of filter classes that can be supplied to a
``Simulation``.  We use ``RadialCTFFilter`` to generate a set of CTF
filters with various defocus values.

.. GENERATED FROM PYTHON SOURCE LINES 78-92

.. code-block:: default


    # Create CTF filters
    from aspire.operators import RadialCTFFilter

    # Radial CTF Filter
    defocus_min = 15000  # unit is angstroms
    defocus_max = 25000
    defocus_ct = 7

    ctf_filters = [
        RadialCTFFilter(pixel_size=5, defocus=d)
        for d in np.linspace(defocus_min, defocus_max, defocus_ct)
    ]








.. GENERATED FROM PYTHON SOURCE LINES 93-105

Initialize Simulation Object
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
We feed our ``Volume`` and filters into ``Simulation`` to generate
the dataset of images.  When controlled white Gaussian noise is
desired, ``WhiteNoiseAdder.from_snr()`` can be used to generate a
simulation data set around a specific SNR.

Alternatively, users can bring their own images using an
``ArrayImageSource``, or define their own custom noise functions via
``Simulation(..., noise_adder=CustomNoiseAdder(...))``.  Examples
can be found in ``tutorials/class_averaging.py`` and
``experiments/simulated_abinitio_pipeline.py``.

.. GENERATED FROM PYTHON SOURCE LINES 105-115

.. code-block:: default


    from aspire.noise import WhiteNoiseAdder
    from aspire.source import Simulation

    # set parameters
    n_imgs = 2500

    # SNR target for white gaussian noise.
    snr = 0.5








.. GENERATED FROM PYTHON SOURCE LINES 116-120

.. note::
  Note, the SNR value was chosen based on other parameters for this
  quick tutorial, and can be changed to adjust the power of the
  additive noise.

.. GENERATED FROM PYTHON SOURCE LINES 120-132

.. code-block:: default


    # For this ``Simulation`` we set all 2D offset vectors to zero,
    # but by default offset vectors will be randomly distributed.
    src = Simulation(
        n=n_imgs,  # number of projections
        vols=vol,  # volume source
        offsets=0,  # Default: images are randomly shifted
        unique_filters=ctf_filters,
        noise_adder=WhiteNoiseAdder.from_snr(snr=snr),  # desired SNR
    )






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|          | 0/5 [00:00<?, ?it/s]     20%|##        | 1/5 [00:00<00:02,  1.76it/s]     40%|####      | 2/5 [00:01<00:01,  1.79it/s]     60%|######    | 3/5 [00:01<00:01,  1.80it/s]     80%|########  | 4/5 [00:02<00:00,  1.81it/s]    100%|##########| 5/5 [00:02<00:00,  1.89it/s]    100%|##########| 5/5 [00:02<00:00,  1.85it/s]




.. GENERATED FROM PYTHON SOURCE LINES 133-136

Several Views of the Projection Images
--------------------------------------
We can access several views of the projection images.

.. GENERATED FROM PYTHON SOURCE LINES 136-140

.. code-block:: default


    # with no corruption applied
    src.projections[0:10].show()




.. image-sg:: /auto_tutorials/images/sphx_glr_pipeline_demo_001.png
   :alt: pipeline demo
   :srcset: /auto_tutorials/images/sphx_glr_pipeline_demo_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 141-145

.. code-block:: default


    # with no noise corruption
    src.clean_images[0:10].show()




.. image-sg:: /auto_tutorials/images/sphx_glr_pipeline_demo_002.png
   :alt: pipeline demo
   :srcset: /auto_tutorials/images/sphx_glr_pipeline_demo_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 146-151

.. code-block:: default


    # with noise and CTF corruption
    src.images[0:10].show()





.. image-sg:: /auto_tutorials/images/sphx_glr_pipeline_demo_003.png
   :alt: pipeline demo
   :srcset: /auto_tutorials/images/sphx_glr_pipeline_demo_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 152-155

CTF Correction
--------------
We apply ``phase_flip()`` to correct for CTF effects.

.. GENERATED FROM PYTHON SOURCE LINES 155-160

.. code-block:: default


    src = src.phase_flip()
    src.images[0:10].show()





.. image-sg:: /auto_tutorials/images/sphx_glr_pipeline_demo_004.png
   :alt: pipeline demo
   :srcset: /auto_tutorials/images/sphx_glr_pipeline_demo_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 161-171

Class Averaging
---------------
We use ``RIRClass2D`` object to classify the images via the
rotationally invariant representation (RIR) algorithm. Class
selection is customizable. The classification module also includes a
set of protocols for selecting a set of images to be used for
classification.  Here we're using ``TopClassSelector``, which
selects the first ``n_classes`` images from the source.  In
practice, the selection is done by sorting class averages based on
some configurable notion of quality.

.. GENERATED FROM PYTHON SOURCE LINES 171-199

.. code-block:: default


    from aspire.classification import RIRClass2D

    # set parameters
    n_classes = 200
    n_nbor = 6

    # We will customize our class averaging source. Note that the
    # ``fspca_components`` and ``bispectrum_components`` were selected for
    # this small tutorial.
    rir = RIRClass2D(
        src,
        fspca_components=40,
        bispectrum_components=30,
        n_nbor=n_nbor,
    )

    from aspire.denoising import DebugClassAvgSource

    avgs = DebugClassAvgSource(
        src=src,
        classifier=rir,
    )

    # We'll continue our pipeline with the first ``n_classes`` from ``avgs``.
    avgs = avgs[:n_classes]









.. GENERATED FROM PYTHON SOURCE LINES 200-202

View the Class Averages
-----------------------

.. GENERATED FROM PYTHON SOURCE LINES 202-206

.. code-block:: default


    # Show class averages
    avgs.images[0:10].show()




.. image-sg:: /auto_tutorials/images/sphx_glr_pipeline_demo_005.png
   :alt: pipeline demo
   :srcset: /auto_tutorials/images/sphx_glr_pipeline_demo_005.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|          | 0/5 [00:00<?, ?it/s]     20%|##        | 1/5 [00:01<00:07,  1.99s/it]     40%|####      | 2/5 [00:03<00:05,  1.99s/it]     60%|######    | 3/5 [00:05<00:03,  1.99s/it]     80%|########  | 4/5 [00:07<00:01,  1.99s/it]    100%|##########| 5/5 [00:09<00:00,  1.91s/it]    100%|##########| 5/5 [00:09<00:00,  1.95s/it]
      0%|          | 0/5 [00:00<?, ?it/s]     20%|##        | 1/5 [00:00<00:01,  3.77it/s]     40%|####      | 2/5 [00:00<00:00,  3.76it/s]     60%|######    | 3/5 [00:00<00:00,  3.80it/s]     80%|########  | 4/5 [00:01<00:00,  3.78it/s]    100%|##########| 5/5 [00:01<00:00,  3.96it/s]    100%|##########| 5/5 [00:01<00:00,  3.88it/s]
      0%|          | 0/10 [00:00<?, ?it/s]     10%|#         | 1/10 [00:00<00:02,  3.99it/s]     20%|##        | 2/10 [00:00<00:01,  5.85it/s]     30%|###       | 3/10 [00:00<00:01,  6.77it/s]     40%|####      | 4/10 [00:00<00:00,  7.31it/s]     50%|#####     | 5/10 [00:00<00:00,  7.75it/s]     60%|######    | 6/10 [00:00<00:00,  7.92it/s]     70%|#######   | 7/10 [00:00<00:00,  8.05it/s]     80%|########  | 8/10 [00:01<00:00,  8.20it/s]     90%|######### | 9/10 [00:01<00:00,  8.29it/s]    100%|##########| 10/10 [00:01<00:00,  8.32it/s]    100%|##########| 10/10 [00:01<00:00,  7.60it/s]
      0%|          | 0/10 [00:00<?, ?it/s]     20%|##        | 2/10 [00:00<00:00, 19.37it/s]     40%|####      | 4/10 [00:00<00:00, 18.82it/s]     60%|######    | 6/10 [00:00<00:00, 19.10it/s]     80%|########  | 8/10 [00:00<00:00, 19.04it/s]    100%|##########| 10/10 [00:00<00:00, 19.22it/s]    100%|##########| 10/10 [00:00<00:00, 19.13it/s]




.. GENERATED FROM PYTHON SOURCE LINES 207-214

.. code-block:: default


    # Show original images corresponding to those classes. This 1:1
    # comparison is only expected to work because we used
    # ``TopClassSelector`` to classify our images.
    src.images[0:10].show()





.. image-sg:: /auto_tutorials/images/sphx_glr_pipeline_demo_006.png
   :alt: pipeline demo
   :srcset: /auto_tutorials/images/sphx_glr_pipeline_demo_006.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 215-220

Orientation Estimation
----------------------
We initialize a ``CLSyncVoting`` class instance for estimating the
orientations of the images.  The estimation employs the common lines
method with synchronization and voting.

.. GENERATED FROM PYTHON SOURCE LINES 220-234

.. code-block:: default


    from aspire.abinitio import CLSyncVoting

    # Stash true rotations for later comparison
    true_rotations = src.rotations[:n_classes]

    # Run orientation estimation on ``avgs``.
    orient_est = CLSyncVoting(avgs, n_theta=72)

    # Get the estimated rotations
    orient_est.estimate_rotations()
    rots_est = orient_est.rotations






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|          | 0/200 [00:00<?, ?it/s]      0%|          | 1/200 [00:00<00:22,  8.78it/s]      1%|1         | 2/200 [00:00<00:22,  8.61it/s]      2%|1         | 3/200 [00:00<00:23,  8.45it/s]      2%|2         | 4/200 [00:00<00:23,  8.24it/s]      2%|2         | 5/200 [00:00<00:23,  8.37it/s]      3%|3         | 6/200 [00:00<00:23,  8.31it/s]      4%|3         | 7/200 [00:00<00:23,  8.29it/s]      4%|4         | 8/200 [00:00<00:23,  8.30it/s]      4%|4         | 9/200 [00:01<00:22,  8.42it/s]      5%|5         | 10/200 [00:01<00:22,  8.39it/s]      6%|5         | 11/200 [00:01<00:22,  8.33it/s]      6%|6         | 12/200 [00:01<00:22,  8.36it/s]      6%|6         | 13/200 [00:01<00:22,  8.32it/s]      7%|7         | 14/200 [00:01<00:22,  8.19it/s]      8%|7         | 15/200 [00:01<00:22,  8.22it/s]      8%|8         | 16/200 [00:01<00:22,  8.21it/s]      8%|8         | 17/200 [00:02<00:22,  8.19it/s]      9%|9         | 18/200 [00:02<00:21,  8.28it/s]     10%|9         | 19/200 [00:02<00:21,  8.23it/s]     10%|#         | 20/200 [00:02<00:21,  8.26it/s]     10%|#         | 21/200 [00:02<00:21,  8.29it/s]     11%|#1        | 22/200 [00:02<00:21,  8.24it/s]     12%|#1        | 23/200 [00:02<00:21,  8.27it/s]     12%|#2        | 24/200 [00:02<00:20,  8.39it/s]     12%|#2        | 25/200 [00:03<00:20,  8.40it/s]     13%|#3        | 26/200 [00:03<00:20,  8.37it/s]     14%|#3        | 27/200 [00:03<00:20,  8.37it/s]     14%|#4        | 28/200 [00:03<00:20,  8.37it/s]     14%|#4        | 29/200 [00:03<00:20,  8.43it/s]     15%|#5        | 30/200 [00:03<00:20,  8.37it/s]     16%|#5        | 31/200 [00:03<00:20,  8.39it/s]     16%|#6        | 32/200 [00:03<00:20,  8.30it/s]     16%|#6        | 33/200 [00:03<00:20,  8.22it/s]     17%|#7        | 34/200 [00:04<00:20,  8.26it/s]     18%|#7        | 35/200 [00:04<00:20,  8.20it/s]     18%|#8        | 36/200 [00:04<00:19,  8.24it/s]     18%|#8        | 37/200 [00:04<00:19,  8.26it/s]     19%|#9        | 38/200 [00:04<00:19,  8.25it/s]     20%|#9        | 39/200 [00:04<00:19,  8.39it/s]     20%|##        | 40/200 [00:04<00:19,  8.36it/s]     20%|##        | 41/200 [00:04<00:19,  8.36it/s]     21%|##1       | 42/200 [00:05<00:18,  8.37it/s]     22%|##1       | 43/200 [00:05<00:18,  8.47it/s]     22%|##2       | 44/200 [00:05<00:18,  8.48it/s]     22%|##2       | 45/200 [00:05<00:18,  8.42it/s]     23%|##3       | 46/200 [00:05<00:18,  8.41it/s]     24%|##3       | 47/200 [00:05<00:18,  8.36it/s]     24%|##4       | 48/200 [00:05<00:18,  8.32it/s]     24%|##4       | 49/200 [00:05<00:17,  8.41it/s]     25%|##5       | 50/200 [00:05<00:17,  8.43it/s]     26%|##5       | 51/200 [00:06<00:17,  8.28it/s]     26%|##6       | 52/200 [00:06<00:17,  8.25it/s]     26%|##6       | 53/200 [00:06<00:17,  8.33it/s]     27%|##7       | 54/200 [00:06<00:17,  8.17it/s]     28%|##7       | 55/200 [00:06<00:17,  8.13it/s]     28%|##8       | 56/200 [00:06<00:17,  8.16it/s]     28%|##8       | 57/200 [00:06<00:17,  8.24it/s]     29%|##9       | 58/200 [00:06<00:17,  8.27it/s]     30%|##9       | 59/200 [00:07<00:16,  8.31it/s]     30%|###       | 60/200 [00:07<00:16,  8.34it/s]     30%|###       | 61/200 [00:07<00:16,  8.40it/s]     31%|###1      | 62/200 [00:07<00:16,  8.41it/s]     32%|###1      | 63/200 [00:07<00:16,  8.32it/s]     32%|###2      | 64/200 [00:07<00:16,  8.32it/s]     32%|###2      | 65/200 [00:07<00:16,  8.32it/s]     33%|###3      | 66/200 [00:07<00:15,  8.38it/s]     34%|###3      | 67/200 [00:08<00:15,  8.33it/s]     34%|###4      | 68/200 [00:08<00:15,  8.28it/s]     34%|###4      | 69/200 [00:08<00:15,  8.26it/s]     35%|###5      | 70/200 [00:08<00:15,  8.23it/s]     36%|###5      | 71/200 [00:08<00:15,  8.29it/s]     36%|###6      | 72/200 [00:08<00:15,  8.20it/s]     36%|###6      | 73/200 [00:08<00:15,  8.22it/s]     37%|###7      | 74/200 [00:08<00:15,  8.22it/s]     38%|###7      | 75/200 [00:09<00:15,  8.29it/s]     38%|###8      | 76/200 [00:09<00:14,  8.32it/s]     38%|###8      | 77/200 [00:09<00:14,  8.30it/s]     39%|###9      | 78/200 [00:09<00:14,  8.35it/s]     40%|###9      | 79/200 [00:09<00:14,  8.30it/s]     40%|####      | 80/200 [00:09<00:14,  8.19it/s]     40%|####      | 81/200 [00:09<00:14,  8.22it/s]     41%|####1     | 82/200 [00:09<00:14,  8.31it/s]     42%|####1     | 83/200 [00:09<00:14,  8.32it/s]     42%|####2     | 84/200 [00:10<00:13,  8.43it/s]     42%|####2     | 85/200 [00:10<00:13,  8.40it/s]     43%|####3     | 86/200 [00:10<00:13,  8.34it/s]     44%|####3     | 87/200 [00:10<00:13,  8.35it/s]     44%|####4     | 88/200 [00:10<00:13,  8.31it/s]     44%|####4     | 89/200 [00:10<00:13,  8.28it/s]     45%|####5     | 90/200 [00:10<00:13,  8.27it/s]     46%|####5     | 91/200 [00:10<00:13,  8.23it/s]     46%|####6     | 92/200 [00:11<00:13,  8.25it/s]     46%|####6     | 93/200 [00:11<00:12,  8.33it/s]     47%|####6     | 94/200 [00:11<00:12,  8.35it/s]     48%|####7     | 95/200 [00:11<00:12,  8.37it/s]     48%|####8     | 96/200 [00:11<00:12,  8.28it/s]     48%|####8     | 97/200 [00:11<00:12,  8.24it/s]     49%|####9     | 98/200 [00:11<00:12,  8.26it/s]     50%|####9     | 99/200 [00:11<00:12,  8.27it/s]     50%|#####     | 100/200 [00:12<00:12,  8.32it/s]     50%|#####     | 101/200 [00:12<00:11,  8.33it/s]     51%|#####1    | 102/200 [00:12<00:11,  8.34it/s]     52%|#####1    | 103/200 [00:12<00:11,  8.33it/s]     52%|#####2    | 104/200 [00:12<00:11,  8.26it/s]     52%|#####2    | 105/200 [00:12<00:11,  8.14it/s]     53%|#####3    | 106/200 [00:12<00:11,  8.30it/s]     54%|#####3    | 107/200 [00:12<00:11,  8.33it/s]     54%|#####4    | 108/200 [00:12<00:11,  8.32it/s]     55%|#####4    | 109/200 [00:13<00:10,  8.34it/s]     55%|#####5    | 110/200 [00:13<00:10,  8.39it/s]     56%|#####5    | 111/200 [00:13<00:10,  8.42it/s]     56%|#####6    | 112/200 [00:13<00:10,  8.40it/s]     56%|#####6    | 113/200 [00:13<00:10,  8.32it/s]     57%|#####6    | 114/200 [00:13<00:10,  8.35it/s]     57%|#####7    | 115/200 [00:13<00:10,  8.35it/s]     58%|#####8    | 116/200 [00:13<00:09,  8.40it/s]     58%|#####8    | 117/200 [00:14<00:09,  8.47it/s]     59%|#####8    | 118/200 [00:14<00:09,  8.48it/s]     60%|#####9    | 119/200 [00:14<00:09,  8.41it/s]     60%|######    | 120/200 [00:14<00:09,  8.36it/s]     60%|######    | 121/200 [00:14<00:09,  8.36it/s]     61%|######1   | 122/200 [00:14<00:09,  8.41it/s]     62%|######1   | 123/200 [00:14<00:09,  8.27it/s]     62%|######2   | 124/200 [00:14<00:09,  8.27it/s]     62%|######2   | 125/200 [00:15<00:08,  8.35it/s]     63%|######3   | 126/200 [00:15<00:08,  8.36it/s]     64%|######3   | 127/200 [00:15<00:08,  8.26it/s]     64%|######4   | 128/200 [00:15<00:08,  8.26it/s]     64%|######4   | 129/200 [00:15<00:08,  8.25it/s]     65%|######5   | 130/200 [00:15<00:08,  8.31it/s]     66%|######5   | 131/200 [00:15<00:08,  8.25it/s]     66%|######6   | 132/200 [00:15<00:08,  8.38it/s]     66%|######6   | 133/200 [00:15<00:08,  8.37it/s]     67%|######7   | 134/200 [00:16<00:07,  8.36it/s]     68%|######7   | 135/200 [00:16<00:07,  8.33it/s]     68%|######8   | 136/200 [00:16<00:07,  8.41it/s]     68%|######8   | 137/200 [00:16<00:07,  8.36it/s]     69%|######9   | 138/200 [00:16<00:07,  8.27it/s]     70%|######9   | 139/200 [00:16<00:07,  8.34it/s]     70%|#######   | 140/200 [00:16<00:07,  8.30it/s]     70%|#######   | 141/200 [00:16<00:07,  8.29it/s]     71%|#######1  | 142/200 [00:17<00:07,  8.25it/s]     72%|#######1  | 143/200 [00:17<00:06,  8.22it/s]     72%|#######2  | 144/200 [00:17<00:07,  7.89it/s]     72%|#######2  | 145/200 [00:17<00:06,  8.03it/s]     73%|#######3  | 146/200 [00:17<00:06,  7.98it/s]     74%|#######3  | 147/200 [00:17<00:06,  8.09it/s]     74%|#######4  | 148/200 [00:17<00:06,  8.12it/s]     74%|#######4  | 149/200 [00:17<00:06,  8.16it/s]     75%|#######5  | 150/200 [00:18<00:06,  8.21it/s]     76%|#######5  | 151/200 [00:18<00:05,  8.22it/s]     76%|#######6  | 152/200 [00:18<00:05,  8.25it/s]     76%|#######6  | 153/200 [00:18<00:05,  8.38it/s]     77%|#######7  | 154/200 [00:18<00:05,  8.36it/s]     78%|#######7  | 155/200 [00:18<00:05,  8.38it/s]     78%|#######8  | 156/200 [00:18<00:05,  8.33it/s]     78%|#######8  | 157/200 [00:18<00:05,  8.35it/s]     79%|#######9  | 158/200 [00:19<00:05,  8.33it/s]     80%|#######9  | 159/200 [00:19<00:05,  8.20it/s]     80%|########  | 160/200 [00:19<00:04,  8.19it/s]     80%|########  | 161/200 [00:19<00:04,  8.27it/s]     81%|########1 | 162/200 [00:19<00:04,  8.28it/s]     82%|########1 | 163/200 [00:19<00:04,  8.29it/s]     82%|########2 | 164/200 [00:19<00:04,  8.27it/s]     82%|########2 | 165/200 [00:19<00:04,  8.21it/s]     83%|########2 | 166/200 [00:19<00:04,  8.24it/s]     84%|########3 | 167/200 [00:20<00:03,  8.32it/s]     84%|########4 | 168/200 [00:20<00:03,  8.29it/s]     84%|########4 | 169/200 [00:20<00:03,  8.29it/s]     85%|########5 | 170/200 [00:20<00:03,  8.22it/s]     86%|########5 | 171/200 [00:20<00:03,  8.21it/s]     86%|########6 | 172/200 [00:20<00:03,  8.21it/s]     86%|########6 | 173/200 [00:20<00:03,  8.26it/s]     87%|########7 | 174/200 [00:20<00:03,  8.27it/s]     88%|########7 | 175/200 [00:21<00:03,  8.27it/s]     88%|########8 | 176/200 [00:21<00:02,  8.29it/s]     88%|########8 | 177/200 [00:21<00:02,  8.28it/s]     89%|########9 | 178/200 [00:21<00:02,  8.24it/s]     90%|########9 | 179/200 [00:21<00:02,  8.23it/s]     90%|######### | 180/200 [00:21<00:02,  8.25it/s]     90%|######### | 181/200 [00:21<00:02,  8.25it/s]     91%|#########1| 182/200 [00:21<00:02,  8.26it/s]     92%|#########1| 183/200 [00:22<00:02,  8.40it/s]     92%|#########2| 184/200 [00:22<00:01,  8.43it/s]     92%|#########2| 185/200 [00:22<00:01,  8.43it/s]     93%|#########3| 186/200 [00:22<00:01,  8.40it/s]     94%|#########3| 187/200 [00:22<00:01,  8.38it/s]     94%|#########3| 188/200 [00:22<00:01,  8.47it/s]     94%|#########4| 189/200 [00:22<00:01,  8.51it/s]     95%|#########5| 190/200 [00:22<00:01,  8.50it/s]     96%|#########5| 191/200 [00:22<00:01,  8.39it/s]     96%|#########6| 192/200 [00:23<00:00,  8.42it/s]     96%|#########6| 193/200 [00:23<00:00,  8.40it/s]     97%|#########7| 194/200 [00:23<00:00,  8.36it/s]     98%|#########7| 195/200 [00:23<00:00,  8.37it/s]     98%|#########8| 196/200 [00:23<00:00,  8.36it/s]     98%|#########8| 197/200 [00:23<00:00,  8.34it/s]     99%|#########9| 198/200 [00:23<00:00,  8.32it/s]    100%|#########9| 199/200 [00:23<00:00,  8.32it/s]    100%|##########| 200/200 [00:24<00:00,  8.35it/s]    100%|##########| 200/200 [00:24<00:00,  8.31it/s]
      0%|          | 0/200 [00:00<?, ?it/s]      1%|1         | 2/200 [00:00<00:10, 19.28it/s]      2%|2         | 4/200 [00:00<00:10, 18.88it/s]      4%|3         | 7/200 [00:00<00:10, 19.17it/s]      4%|4         | 9/200 [00:00<00:09, 19.36it/s]      6%|5         | 11/200 [00:00<00:09, 19.19it/s]      6%|6         | 13/200 [00:00<00:09, 19.20it/s]      8%|7         | 15/200 [00:00<00:09, 19.15it/s]      8%|8         | 17/200 [00:00<00:09, 18.99it/s]     10%|9         | 19/200 [00:00<00:09, 18.89it/s]     10%|#         | 21/200 [00:01<00:09, 19.09it/s]     12%|#1        | 23/200 [00:01<00:09, 18.84it/s]     12%|#2        | 25/200 [00:01<00:09, 18.90it/s]     14%|#3        | 27/200 [00:01<00:09, 19.01it/s]     14%|#4        | 29/200 [00:01<00:08, 19.21it/s]     16%|#5        | 31/200 [00:01<00:08, 19.04it/s]     16%|#6        | 33/200 [00:01<00:08, 18.99it/s]     18%|#7        | 35/200 [00:01<00:08, 18.88it/s]     18%|#8        | 37/200 [00:01<00:08, 19.15it/s]     20%|#9        | 39/200 [00:02<00:08, 19.25it/s]     20%|##        | 41/200 [00:02<00:08, 19.35it/s]     22%|##1       | 43/200 [00:02<00:08, 19.53it/s]     22%|##2       | 45/200 [00:02<00:07, 19.56it/s]     24%|##3       | 47/200 [00:02<00:07, 19.31it/s]     24%|##4       | 49/200 [00:02<00:07, 19.21it/s]     26%|##5       | 51/200 [00:02<00:07, 19.07it/s]     26%|##6       | 53/200 [00:02<00:07, 19.28it/s]     28%|##7       | 55/200 [00:02<00:07, 18.70it/s]     28%|##8       | 57/200 [00:02<00:07, 19.01it/s]     30%|##9       | 59/200 [00:03<00:07, 18.98it/s]     30%|###       | 61/200 [00:03<00:07, 19.16it/s]     32%|###1      | 63/200 [00:03<00:07, 19.08it/s]     32%|###2      | 65/200 [00:03<00:07, 19.06it/s]     34%|###3      | 67/200 [00:03<00:06, 19.18it/s]     34%|###4      | 69/200 [00:03<00:06, 19.07it/s]     36%|###5      | 71/200 [00:03<00:06, 19.04it/s]     36%|###6      | 73/200 [00:03<00:06, 19.26it/s]     38%|###7      | 75/200 [00:03<00:06, 19.36it/s]     38%|###8      | 77/200 [00:04<00:06, 19.30it/s]     40%|###9      | 79/200 [00:04<00:06, 19.23it/s]     40%|####      | 81/200 [00:04<00:06, 18.99it/s]     42%|####1     | 83/200 [00:04<00:06, 19.08it/s]     42%|####2     | 85/200 [00:04<00:05, 19.17it/s]     44%|####3     | 87/200 [00:04<00:05, 19.06it/s]     44%|####4     | 89/200 [00:04<00:05, 19.20it/s]     46%|####5     | 91/200 [00:04<00:05, 19.14it/s]     46%|####6     | 93/200 [00:04<00:05, 19.36it/s]     48%|####8     | 96/200 [00:05<00:05, 19.62it/s]     49%|####9     | 98/200 [00:05<00:05, 19.53it/s]     50%|#####     | 100/200 [00:05<00:05, 19.30it/s]     51%|#####1    | 102/200 [00:05<00:05, 19.25it/s]     52%|#####2    | 104/200 [00:05<00:05, 18.96it/s]     53%|#####3    | 106/200 [00:05<00:04, 18.98it/s]     54%|#####4    | 108/200 [00:05<00:04, 19.04it/s]     55%|#####5    | 110/200 [00:05<00:04, 19.27it/s]     56%|#####6    | 112/200 [00:05<00:04, 19.36it/s]     57%|#####6    | 114/200 [00:05<00:04, 19.09it/s]     58%|#####8    | 116/200 [00:06<00:04, 19.30it/s]     60%|#####9    | 119/200 [00:06<00:04, 19.54it/s]     60%|######    | 121/200 [00:06<00:04, 19.46it/s]     62%|######1   | 123/200 [00:06<00:03, 19.41it/s]     62%|######2   | 125/200 [00:06<00:03, 19.52it/s]     64%|######3   | 127/200 [00:06<00:03, 19.16it/s]     64%|######4   | 129/200 [00:06<00:03, 19.21it/s]     66%|######5   | 131/200 [00:06<00:03, 19.39it/s]     66%|######6   | 133/200 [00:06<00:03, 19.48it/s]     68%|######7   | 135/200 [00:07<00:03, 19.45it/s]     69%|######9   | 138/200 [00:07<00:03, 19.55it/s]     70%|#######   | 140/200 [00:07<00:03, 19.56it/s]     71%|#######1  | 142/200 [00:07<00:02, 19.52it/s]     72%|#######2  | 144/200 [00:07<00:02, 19.12it/s]     73%|#######3  | 146/200 [00:07<00:02, 19.03it/s]     74%|#######4  | 148/200 [00:07<00:02, 19.00it/s]     75%|#######5  | 150/200 [00:07<00:02, 19.13it/s]     76%|#######6  | 152/200 [00:07<00:02, 18.87it/s]     77%|#######7  | 154/200 [00:08<00:02, 19.19it/s]     78%|#######8  | 156/200 [00:08<00:02, 19.05it/s]     79%|#######9  | 158/200 [00:08<00:02, 19.08it/s]     80%|########  | 160/200 [00:08<00:02, 19.10it/s]     81%|########1 | 162/200 [00:08<00:02, 18.94it/s]     82%|########2 | 164/200 [00:08<00:01, 18.73it/s]     83%|########2 | 166/200 [00:08<00:01, 18.88it/s]     84%|########4 | 169/200 [00:08<00:01, 19.16it/s]     86%|########5 | 171/200 [00:08<00:01, 19.08it/s]     86%|########6 | 173/200 [00:09<00:01, 19.10it/s]     88%|########7 | 175/200 [00:09<00:01, 19.03it/s]     88%|########8 | 177/200 [00:09<00:01, 19.09it/s]     90%|########9 | 179/200 [00:09<00:01, 19.01it/s]     91%|#########1| 182/200 [00:09<00:00, 19.42it/s]     92%|#########2| 184/200 [00:09<00:00, 19.57it/s]     93%|#########3| 186/200 [00:09<00:00, 19.50it/s]     94%|#########3| 188/200 [00:09<00:00, 19.54it/s]     96%|#########5| 191/200 [00:09<00:00, 19.63it/s]     97%|#########7| 194/200 [00:10<00:00, 19.81it/s]     98%|#########8| 196/200 [00:10<00:00, 19.77it/s]     99%|#########9| 198/200 [00:10<00:00, 19.65it/s]    100%|##########| 200/200 [00:10<00:00, 19.30it/s]    100%|##########| 200/200 [00:10<00:00, 19.21it/s]




.. GENERATED FROM PYTHON SOURCE LINES 235-240

Mean Squared Error
------------------
ASPIRE has some built-in utility functions for globally aligning the
estimated rotations to the true rotations and computing the mean
squared error.

.. GENERATED FROM PYTHON SOURCE LINES 240-254

.. code-block:: default


    from aspire.utils.coor_trans import (
        get_aligned_rotations,
        get_rots_mse,
        register_rotations,
    )

    # Compare with known true rotations
    Q_mat, flag = register_rotations(rots_est, true_rotations)
    regrot = get_aligned_rotations(rots_est, Q_mat, flag)
    mse_reg = get_rots_mse(regrot, true_rotations)
    mse_reg






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    0.032957152189134344



.. GENERATED FROM PYTHON SOURCE LINES 255-260

Volume Reconstruction
---------------------
Now that we have our class averages and rotation estimates, we can
estimate the mean volume by supplying the class averages and basis
for back projection.

.. GENERATED FROM PYTHON SOURCE LINES 260-267

.. code-block:: default


    from aspire.basis import FFBBasis3D
    from aspire.reconstruction import MeanEstimator

    # Assign the estimated rotations to the class averages
    avgs = avgs.update(rotations=rots_est)








.. GENERATED FROM PYTHON SOURCE LINES 268-272

.. note::
    Outside of internal operations during ``ImageSource``
    construction, mutating meta data will return a new source
    object.

.. GENERATED FROM PYTHON SOURCE LINES 272-283

.. code-block:: default


    # Create a reasonable Basis for the 3d Volume
    basis = FFBBasis3D(res, dtype=vol.dtype)

    # Setup an estimator to perform the back projection.
    estimator = MeanEstimator(avgs, basis)

    # Perform the estimation and save the volume.
    estimated_volume = estimator.estimate()






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|          | 0/200 [00:00<?, ?it/s]      0%|          | 1/200 [00:00<00:22,  8.71it/s]      1%|1         | 2/200 [00:00<00:22,  8.69it/s]      2%|1         | 3/200 [00:00<00:23,  8.49it/s]      2%|2         | 4/200 [00:00<00:23,  8.33it/s]      2%|2         | 5/200 [00:00<00:23,  8.38it/s]      3%|3         | 6/200 [00:00<00:23,  8.34it/s]      4%|3         | 7/200 [00:00<00:23,  8.26it/s]      4%|4         | 8/200 [00:00<00:23,  8.31it/s]      4%|4         | 9/200 [00:01<00:22,  8.40it/s]      5%|5         | 10/200 [00:01<00:22,  8.44it/s]      6%|5         | 11/200 [00:01<00:22,  8.35it/s]      6%|6         | 12/200 [00:01<00:22,  8.40it/s]      6%|6         | 13/200 [00:01<00:22,  8.39it/s]      7%|7         | 14/200 [00:01<00:22,  8.36it/s]      8%|7         | 15/200 [00:01<00:21,  8.43it/s]      8%|8         | 16/200 [00:01<00:21,  8.40it/s]      8%|8         | 17/200 [00:02<00:21,  8.33it/s]      9%|9         | 18/200 [00:02<00:21,  8.41it/s]     10%|9         | 19/200 [00:02<00:21,  8.36it/s]     10%|#         | 20/200 [00:02<00:21,  8.35it/s]     10%|#         | 21/200 [00:02<00:21,  8.37it/s]     11%|#1        | 22/200 [00:02<00:21,  8.32it/s]     12%|#1        | 23/200 [00:02<00:21,  8.35it/s]     12%|#2        | 24/200 [00:02<00:20,  8.41it/s]     12%|#2        | 25/200 [00:02<00:20,  8.40it/s]     13%|#3        | 26/200 [00:03<00:20,  8.36it/s]     14%|#3        | 27/200 [00:03<00:20,  8.36it/s]     14%|#4        | 28/200 [00:03<00:20,  8.38it/s]     14%|#4        | 29/200 [00:03<00:20,  8.40it/s]     15%|#5        | 30/200 [00:03<00:20,  8.36it/s]     16%|#5        | 31/200 [00:03<00:20,  8.44it/s]     16%|#6        | 32/200 [00:03<00:19,  8.46it/s]     16%|#6        | 33/200 [00:03<00:19,  8.42it/s]     17%|#7        | 34/200 [00:04<00:19,  8.42it/s]     18%|#7        | 35/200 [00:04<00:19,  8.43it/s]     18%|#8        | 36/200 [00:04<00:19,  8.42it/s]     18%|#8        | 37/200 [00:04<00:19,  8.40it/s]     19%|#9        | 38/200 [00:04<00:19,  8.38it/s]     20%|#9        | 39/200 [00:04<00:19,  8.46it/s]     20%|##        | 40/200 [00:04<00:18,  8.46it/s]     20%|##        | 41/200 [00:04<00:18,  8.44it/s]     21%|##1       | 42/200 [00:05<00:18,  8.45it/s]     22%|##1       | 43/200 [00:05<00:18,  8.56it/s]     22%|##2       | 44/200 [00:05<00:18,  8.57it/s]     22%|##2       | 45/200 [00:05<00:18,  8.53it/s]     23%|##3       | 46/200 [00:05<00:18,  8.52it/s]     24%|##3       | 47/200 [00:05<00:18,  8.48it/s]     24%|##4       | 48/200 [00:05<00:18,  8.44it/s]     24%|##4       | 49/200 [00:05<00:18,  8.38it/s]     25%|##5       | 50/200 [00:05<00:17,  8.51it/s]     26%|##5       | 51/200 [00:06<00:17,  8.46it/s]     26%|##6       | 52/200 [00:06<00:17,  8.46it/s]     26%|##6       | 53/200 [00:06<00:17,  8.51it/s]     27%|##7       | 54/200 [00:06<00:17,  8.36it/s]     28%|##7       | 55/200 [00:06<00:17,  8.27it/s]     28%|##8       | 56/200 [00:06<00:17,  8.33it/s]     28%|##8       | 57/200 [00:06<00:16,  8.47it/s]     29%|##9       | 58/200 [00:06<00:16,  8.46it/s]     30%|##9       | 59/200 [00:07<00:16,  8.47it/s]     30%|###       | 60/200 [00:07<00:16,  8.43it/s]     30%|###       | 61/200 [00:07<00:16,  8.50it/s]     31%|###1      | 62/200 [00:07<00:16,  8.39it/s]     32%|###1      | 63/200 [00:07<00:16,  8.39it/s]     32%|###2      | 64/200 [00:07<00:16,  8.42it/s]     32%|###2      | 65/200 [00:07<00:16,  8.41it/s]     33%|###3      | 66/200 [00:07<00:15,  8.53it/s]     34%|###3      | 67/200 [00:07<00:15,  8.48it/s]     34%|###4      | 68/200 [00:08<00:15,  8.44it/s]     34%|###4      | 69/200 [00:08<00:15,  8.41it/s]     35%|###5      | 70/200 [00:08<00:15,  8.36it/s]     36%|###5      | 71/200 [00:08<00:15,  8.35it/s]     36%|###6      | 72/200 [00:08<00:15,  8.39it/s]     36%|###6      | 73/200 [00:08<00:15,  8.39it/s]     37%|###7      | 74/200 [00:08<00:14,  8.40it/s]     38%|###7      | 75/200 [00:08<00:14,  8.42it/s]     38%|###8      | 76/200 [00:09<00:14,  8.42it/s]     38%|###8      | 77/200 [00:09<00:14,  8.33it/s]     39%|###9      | 78/200 [00:09<00:14,  8.29it/s]     40%|###9      | 79/200 [00:09<00:14,  8.31it/s]     40%|####      | 80/200 [00:09<00:14,  8.21it/s]     40%|####      | 81/200 [00:09<00:14,  8.26it/s]     41%|####1     | 82/200 [00:09<00:14,  8.36it/s]     42%|####1     | 83/200 [00:09<00:13,  8.39it/s]     42%|####2     | 84/200 [00:09<00:13,  8.45it/s]     42%|####2     | 85/200 [00:10<00:13,  8.41it/s]     43%|####3     | 86/200 [00:10<00:13,  8.37it/s]     44%|####3     | 87/200 [00:10<00:13,  8.46it/s]     44%|####4     | 88/200 [00:10<00:13,  8.43it/s]     44%|####4     | 89/200 [00:10<00:13,  8.37it/s]     45%|####5     | 90/200 [00:10<00:13,  8.41it/s]     46%|####5     | 91/200 [00:10<00:13,  8.33it/s]     46%|####6     | 92/200 [00:10<00:12,  8.33it/s]     46%|####6     | 93/200 [00:11<00:12,  8.44it/s]     47%|####6     | 94/200 [00:11<00:12,  8.51it/s]     48%|####7     | 95/200 [00:11<00:12,  8.51it/s]     48%|####8     | 96/200 [00:11<00:12,  8.37it/s]     48%|####8     | 97/200 [00:11<00:12,  8.29it/s]     49%|####9     | 98/200 [00:11<00:12,  8.32it/s]     50%|####9     | 99/200 [00:11<00:12,  8.32it/s]     50%|#####     | 100/200 [00:11<00:11,  8.35it/s]     50%|#####     | 101/200 [00:12<00:11,  8.33it/s]     51%|#####1    | 102/200 [00:12<00:11,  8.33it/s]     52%|#####1    | 103/200 [00:12<00:11,  8.32it/s]     52%|#####2    | 104/200 [00:12<00:11,  8.25it/s]     52%|#####2    | 105/200 [00:12<00:11,  8.16it/s]     53%|#####3    | 106/200 [00:12<00:11,  8.25it/s]     54%|#####3    | 107/200 [00:12<00:11,  8.29it/s]     54%|#####4    | 108/200 [00:12<00:11,  8.31it/s]     55%|#####4    | 109/200 [00:12<00:10,  8.33it/s]     55%|#####5    | 110/200 [00:13<00:10,  8.38it/s]     56%|#####5    | 111/200 [00:13<00:10,  8.39it/s]     56%|#####6    | 112/200 [00:13<00:10,  8.35it/s]     56%|#####6    | 113/200 [00:13<00:10,  8.27it/s]     57%|#####6    | 114/200 [00:13<00:10,  8.29it/s]     57%|#####7    | 115/200 [00:13<00:10,  8.28it/s]     58%|#####8    | 116/200 [00:13<00:10,  8.36it/s]     58%|#####8    | 117/200 [00:13<00:09,  8.43it/s]     59%|#####8    | 118/200 [00:14<00:09,  8.37it/s]     60%|#####9    | 119/200 [00:14<00:09,  8.32it/s]     60%|######    | 120/200 [00:14<00:09,  8.34it/s]     60%|######    | 121/200 [00:14<00:09,  8.30it/s]     61%|######1   | 122/200 [00:14<00:09,  8.43it/s]     62%|######1   | 123/200 [00:14<00:09,  8.33it/s]     62%|######2   | 124/200 [00:14<00:09,  8.32it/s]     62%|######2   | 125/200 [00:14<00:08,  8.40it/s]     63%|######3   | 126/200 [00:15<00:08,  8.38it/s]     64%|######3   | 127/200 [00:15<00:08,  8.29it/s]     64%|######4   | 128/200 [00:15<00:08,  8.31it/s]     64%|######4   | 129/200 [00:15<00:08,  8.31it/s]     65%|######5   | 130/200 [00:15<00:08,  8.38it/s]     66%|######5   | 131/200 [00:15<00:08,  8.34it/s]     66%|######6   | 132/200 [00:15<00:08,  8.44it/s]     66%|######6   | 133/200 [00:15<00:07,  8.44it/s]     67%|######7   | 134/200 [00:15<00:07,  8.41it/s]     68%|######7   | 135/200 [00:16<00:07,  8.34it/s]     68%|######8   | 136/200 [00:16<00:07,  8.37it/s]     68%|######8   | 137/200 [00:16<00:07,  8.35it/s]     69%|######9   | 138/200 [00:16<00:07,  8.29it/s]     70%|######9   | 139/200 [00:16<00:07,  8.29it/s]     70%|#######   | 140/200 [00:16<00:07,  8.26it/s]     70%|#######   | 141/200 [00:16<00:07,  8.29it/s]     71%|#######1  | 142/200 [00:16<00:07,  8.27it/s]     72%|#######1  | 143/200 [00:17<00:06,  8.24it/s]     72%|#######2  | 144/200 [00:17<00:06,  8.27it/s]     72%|#######2  | 145/200 [00:17<00:06,  8.26it/s]     73%|#######3  | 146/200 [00:17<00:06,  8.12it/s]     74%|#######3  | 147/200 [00:17<00:06,  8.14it/s]     74%|#######4  | 148/200 [00:17<00:06,  8.19it/s]     74%|#######4  | 149/200 [00:17<00:06,  8.21it/s]     75%|#######5  | 150/200 [00:17<00:06,  8.23it/s]     76%|#######5  | 151/200 [00:18<00:05,  8.21it/s]     76%|#######6  | 152/200 [00:18<00:05,  8.18it/s]     76%|#######6  | 153/200 [00:18<00:05,  8.32it/s]     77%|#######7  | 154/200 [00:18<00:05,  8.34it/s]     78%|#######7  | 155/200 [00:18<00:05,  8.34it/s]     78%|#######8  | 156/200 [00:18<00:05,  8.32it/s]     78%|#######8  | 157/200 [00:18<00:05,  8.35it/s]     79%|#######9  | 158/200 [00:18<00:05,  8.34it/s]     80%|#######9  | 159/200 [00:19<00:04,  8.29it/s]     80%|########  | 160/200 [00:19<00:04,  8.26it/s]     80%|########  | 161/200 [00:19<00:04,  8.35it/s]     81%|########1 | 162/200 [00:19<00:04,  8.34it/s]     82%|########1 | 163/200 [00:19<00:04,  8.36it/s]     82%|########2 | 164/200 [00:19<00:04,  8.35it/s]     82%|########2 | 165/200 [00:19<00:04,  8.32it/s]     83%|########2 | 166/200 [00:19<00:04,  8.28it/s]     84%|########3 | 167/200 [00:19<00:03,  8.39it/s]     84%|########4 | 168/200 [00:20<00:03,  8.34it/s]     84%|########4 | 169/200 [00:20<00:03,  8.37it/s]     85%|########5 | 170/200 [00:20<00:03,  8.26it/s]     86%|########5 | 171/200 [00:20<00:03,  8.27it/s]     86%|########6 | 172/200 [00:20<00:03,  8.25it/s]     86%|########6 | 173/200 [00:20<00:03,  8.31it/s]     87%|########7 | 174/200 [00:20<00:03,  8.27it/s]     88%|########7 | 175/200 [00:20<00:03,  8.26it/s]     88%|########8 | 176/200 [00:21<00:02,  8.25it/s]     88%|########8 | 177/200 [00:21<00:02,  8.32it/s]     89%|########9 | 178/200 [00:21<00:02,  8.29it/s]     90%|########9 | 179/200 [00:21<00:02,  8.29it/s]     90%|######### | 180/200 [00:21<00:02,  8.29it/s]     90%|######### | 181/200 [00:21<00:02,  8.31it/s]     91%|#########1| 182/200 [00:21<00:02,  8.35it/s]     92%|#########1| 183/200 [00:21<00:02,  8.40it/s]     92%|#########2| 184/200 [00:22<00:01,  8.36it/s]     92%|#########2| 185/200 [00:22<00:01,  8.30it/s]     93%|#########3| 186/200 [00:22<00:01,  8.27it/s]     94%|#########3| 187/200 [00:22<00:01,  8.20it/s]     94%|#########3| 188/200 [00:22<00:01,  8.26it/s]     94%|#########4| 189/200 [00:22<00:01,  8.28it/s]     95%|#########5| 190/200 [00:22<00:01,  8.34it/s]     96%|#########5| 191/200 [00:22<00:01,  8.36it/s]     96%|#########6| 192/200 [00:22<00:00,  8.39it/s]     96%|#########6| 193/200 [00:23<00:00,  8.43it/s]     97%|#########7| 194/200 [00:23<00:00,  8.39it/s]     98%|#########7| 195/200 [00:23<00:00,  8.34it/s]     98%|#########8| 196/200 [00:23<00:00,  8.30it/s]     98%|#########8| 197/200 [00:23<00:00,  8.30it/s]     99%|#########9| 198/200 [00:23<00:00,  8.30it/s]    100%|#########9| 199/200 [00:23<00:00,  8.28it/s]    100%|##########| 200/200 [00:23<00:00,  8.27it/s]    100%|##########| 200/200 [00:23<00:00,  8.35it/s]
      0%|          | 0/200 [00:00<?, ?it/s]      1%|1         | 2/200 [00:00<00:10, 19.16it/s]      2%|2         | 4/200 [00:00<00:10, 18.95it/s]      3%|3         | 6/200 [00:00<00:10, 19.08it/s]      4%|4         | 8/200 [00:00<00:10, 18.69it/s]      5%|5         | 10/200 [00:00<00:10, 18.90it/s]      6%|6         | 12/200 [00:00<00:10, 18.61it/s]      7%|7         | 14/200 [00:00<00:10, 18.36it/s]      8%|8         | 16/200 [00:00<00:09, 18.58it/s]      9%|9         | 18/200 [00:00<00:09, 18.60it/s]     10%|#         | 20/200 [00:01<00:09, 18.67it/s]     11%|#1        | 22/200 [00:01<00:09, 18.54it/s]     12%|#2        | 24/200 [00:01<00:09, 18.73it/s]     13%|#3        | 26/200 [00:01<00:09, 18.83it/s]     14%|#4        | 28/200 [00:01<00:09, 18.88it/s]     15%|#5        | 30/200 [00:01<00:08, 19.08it/s]     16%|#6        | 32/200 [00:01<00:08, 19.07it/s]     17%|#7        | 34/200 [00:01<00:08, 19.06it/s]     18%|#8        | 36/200 [00:01<00:08, 19.16it/s]     19%|#9        | 38/200 [00:02<00:08, 19.21it/s]     20%|##        | 41/200 [00:02<00:08, 19.47it/s]     22%|##1       | 43/200 [00:02<00:08, 19.59it/s]     23%|##3       | 46/200 [00:02<00:07, 19.60it/s]     24%|##4       | 48/200 [00:02<00:07, 19.44it/s]     25%|##5       | 50/200 [00:02<00:07, 19.52it/s]     26%|##6       | 52/200 [00:02<00:07, 19.59it/s]     27%|##7       | 54/200 [00:02<00:07, 19.46it/s]     28%|##8       | 56/200 [00:02<00:07, 19.12it/s]     30%|##9       | 59/200 [00:03<00:07, 19.26it/s]     30%|###       | 61/200 [00:03<00:07, 19.25it/s]     32%|###1      | 63/200 [00:03<00:07, 19.26it/s]     32%|###2      | 65/200 [00:03<00:07, 19.13it/s]     34%|###3      | 67/200 [00:03<00:06, 19.37it/s]     34%|###4      | 69/200 [00:03<00:06, 19.28it/s]     36%|###5      | 71/200 [00:03<00:06, 19.43it/s]     36%|###6      | 73/200 [00:03<00:06, 19.47it/s]     38%|###7      | 75/200 [00:03<00:06, 19.54it/s]     38%|###8      | 77/200 [00:04<00:06, 19.47it/s]     40%|###9      | 79/200 [00:04<00:06, 19.31it/s]     40%|####      | 81/200 [00:04<00:06, 19.07it/s]     42%|####1     | 83/200 [00:04<00:06, 19.31it/s]     42%|####2     | 85/200 [00:04<00:05, 19.31it/s]     44%|####3     | 87/200 [00:04<00:05, 19.34it/s]     44%|####4     | 89/200 [00:04<00:05, 19.25it/s]     46%|####5     | 91/200 [00:04<00:05, 19.33it/s]     46%|####6     | 93/200 [00:04<00:05, 19.37it/s]     48%|####8     | 96/200 [00:05<00:05, 19.53it/s]     49%|####9     | 98/200 [00:05<00:05, 19.47it/s]     50%|#####     | 100/200 [00:05<00:05, 19.32it/s]     51%|#####1    | 102/200 [00:05<00:05, 19.40it/s]     52%|#####2    | 104/200 [00:05<00:05, 19.10it/s]     53%|#####3    | 106/200 [00:05<00:04, 19.27it/s]     54%|#####4    | 108/200 [00:05<00:04, 19.34it/s]     55%|#####5    | 110/200 [00:05<00:04, 19.52it/s]     56%|#####6    | 112/200 [00:05<00:04, 19.48it/s]     57%|#####6    | 114/200 [00:05<00:04, 19.42it/s]     58%|#####8    | 116/200 [00:06<00:04, 19.53it/s]     59%|#####8    | 118/200 [00:06<00:04, 19.56it/s]     60%|######    | 120/200 [00:06<00:04, 19.15it/s]     61%|######1   | 122/200 [00:06<00:04, 19.33it/s]     62%|######2   | 124/200 [00:06<00:03, 19.17it/s]     63%|######3   | 126/200 [00:06<00:03, 19.39it/s]     64%|######4   | 128/200 [00:06<00:03, 19.15it/s]     65%|######5   | 130/200 [00:06<00:03, 19.31it/s]     66%|######6   | 132/200 [00:06<00:03, 19.26it/s]     67%|######7   | 134/200 [00:06<00:03, 19.22it/s]     68%|######8   | 136/200 [00:07<00:03, 19.31it/s]     69%|######9   | 138/200 [00:07<00:03, 19.34it/s]     70%|#######   | 141/200 [00:07<00:03, 19.50it/s]     72%|#######1  | 143/200 [00:07<00:02, 19.12it/s]     72%|#######2  | 145/200 [00:07<00:02, 19.25it/s]     74%|#######3  | 147/200 [00:07<00:02, 19.06it/s]     74%|#######4  | 149/200 [00:07<00:02, 18.97it/s]     76%|#######5  | 151/200 [00:07<00:02, 19.08it/s]     76%|#######6  | 153/200 [00:07<00:02, 19.28it/s]     78%|#######7  | 155/200 [00:08<00:02, 19.25it/s]     78%|#######8  | 157/200 [00:08<00:02, 19.35it/s]     80%|#######9  | 159/200 [00:08<00:02, 19.24it/s]     81%|########1 | 162/200 [00:08<00:01, 19.47it/s]     82%|########2 | 164/200 [00:08<00:01, 19.13it/s]     83%|########2 | 166/200 [00:08<00:01, 18.99it/s]     84%|########4 | 169/200 [00:08<00:01, 19.38it/s]     86%|########5 | 171/200 [00:08<00:01, 19.35it/s]     86%|########6 | 173/200 [00:08<00:01, 19.35it/s]     88%|########7 | 175/200 [00:09<00:01, 19.50it/s]     88%|########8 | 177/200 [00:09<00:01, 19.40it/s]     90%|########9 | 179/200 [00:09<00:01, 19.23it/s]     90%|######### | 181/200 [00:09<00:00, 19.39it/s]     92%|#########2| 184/200 [00:09<00:00, 19.56it/s]     93%|#########3| 186/200 [00:09<00:00, 19.56it/s]     94%|#########3| 188/200 [00:09<00:00, 19.44it/s]     96%|#########5| 191/200 [00:09<00:00, 19.61it/s]     97%|#########7| 194/200 [00:10<00:00, 19.74it/s]     98%|#########8| 196/200 [00:10<00:00, 19.75it/s]     99%|#########9| 198/200 [00:10<00:00, 19.77it/s]    100%|##########| 200/200 [00:10<00:00, 19.59it/s]    100%|##########| 200/200 [00:10<00:00, 19.28it/s]




.. GENERATED FROM PYTHON SOURCE LINES 284-290

Comparison of Estimated Volume with Source Volume
-------------------------------------------------
To get a visual confirmation that our results are sane, we rotate
the estimated volume by the estimated rotations and project along
the z-axis.  These estimated projections should align with the
original projection images.

.. GENERATED FROM PYTHON SOURCE LINES 290-301

.. code-block:: default


    from aspire.source import ArrayImageSource

    # Get projections from the estimated volume using the estimated
    # orientations.  We instantiate the projections as an
    # ``ArrayImageSource`` to access the ``Image.show()`` method.
    projections_est = ArrayImageSource(estimated_volume.project(rots_est))

    # We view the first 10 projections of the estimated volume.
    projections_est.images[0:10].show()




.. image-sg:: /auto_tutorials/images/sphx_glr_pipeline_demo_007.png
   :alt: pipeline demo
   :srcset: /auto_tutorials/images/sphx_glr_pipeline_demo_007.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 302-305

.. code-block:: default


    # For comparison, we view the first 10 source projections.
    src.projections[0:10].show()



.. image-sg:: /auto_tutorials/images/sphx_glr_pipeline_demo_008.png
   :alt: pipeline demo
   :srcset: /auto_tutorials/images/sphx_glr_pipeline_demo_008.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 8 minutes  7.144 seconds)


.. _sphx_glr_download_auto_tutorials_pipeline_demo.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: pipeline_demo.py <pipeline_demo.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: pipeline_demo.ipynb <pipeline_demo.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
